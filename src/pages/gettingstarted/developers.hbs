---
title: Developers
---
<div class=" drizzle-o-Layout__header">
  <h1 class="drizzle-b-h1">Getting Started - Developers</h1>
</div>
<div class="drizzle-o-Layout__content drizzle-b-LongFormText">
  <div class="drizzle-o-ContentGrouping">
    <h2 class="drizzle-b-h2">Welcome</h2>
    <p>This getting started guide is intended for developers. See below for
      instructions on how to install Spark and bring it into your existing
      build.</p>
  </div>

  <div class="drizzle-o-ContentGrouping">
    <h2 class="drizzle-b-h2">Requirements</h2>
    <p>Spark assumes your project is using <a class="drizzle-b-Link"
      href="https://sass-lang.com/">Sass</a> for styling and
      that your project has a JavaScript build step that will transpile ES6+
      and polyfill appropriately for browser support.</p>
  </div>

  <div class="drizzle-o-ContentGrouping">
    <h2 class="drizzle-b-h2 sprk-u-mbm">Spark Core</h2>
    <h3 class="drizzle-b-h3">Vanilla</h3>

    <ul class="drizzle-b-List drizzle-b-List--nested sprk-u-mbm">
      <li class="sprk-u-mvm">
        <p>Install the npm package.</p>
        <div class="drizzle-c-Command">
          <code class="drizzle-CodeHighlight">
            npm install --save-dev @sparkdesignsystem/spark-core</code>
        </div>
      </li>
      <li class="sprk-u-mvm">
        <p>Import the Sass setup file in your Sass build. This will bring all
          Spark-Core Sass patterns into your build. The Spark classes are
          namespaced so that they don't affect any existing css.</p>
        <div class="drizzle-c-Command">
          <code class="drizzle-CodeHighlight">
            @import &quot;node_modules/@sparkdesignsystem/spark-core/spark-core&quot;;
          </code>
        </div>
      </li>
      <li class="sprk-u-mvm">
        <p>Spark has two JavaScript files that need to be incorporated into your build in order for Spark's behavior to
        work.</p>
        <ul class="drizzle-b-List drizzle-b-List--nested">
          <li><p><strong>spark-core-prerender.js</strong> - This file detects if JavaScript is loaded and also sets up
            the type loader. It needs to execute it's code before the page is rendered and therefore needs to be
            imported in the head of the document.</p>
            <div class="drizzle-c-Command">
              <code class="drizzle-CodeHighlight">
                import sparkCorePrerender from  &quot;@sparkdesignsystem/spark-core/spark-core-prerender&quot;;
              </code>
            </div>
          </li>
          <li><p><strong>spark-core.js</strong> - This file contains the bulk of Spark's behavior and can be loaded
            after the page is rendered, this is best done before the closing body tag.</p>
            <div class="drizzle-c-Command">
              <code class="drizzle-CodeHighlight">
                import sparkCore from  &quot;@sparkdesignsystem/spark-core/spark-core&quot;;
              </code>
            </div>
          </li>
        </ul>
        <p>There are also ES5 versions if preferred. They're located in @sparkdesignsystem/spark-core/es5.</p>
      </li>
      <li class="sprk-u-mvm">
        <p>Init the Spark Core JS, passing in a config object (optional).</p>
        <div class="drizzle-c-Command">
          <code class="drizzle-CodeHighlight">
            sparkCorePrerender({ //config, see below });
          </code>
        </div>
        <div class="sprk-u-mvs">
          <p class="sprk-u-mbm">See below for available configuration options:</p>
          <table class="drizzle-c-Table drizzle-c-Table--wide sprk-u-mbm">
            <colgroup>
              <col class="sprk-u-Width-40">
              <col>
            </colgroup>
            <thead>
            <tr>
              <th>Key</th>
              <th>Description</th>
            </tr>
            </thead>
            <tbody>
            <tr>
              <td class="sprk-u-FontWeight--bold">typeConfig</td>
              <td></td>
            </tr>
            </tbody>
          </table>
        </div>
      </li>
      <li class="sprk-u-mvm">
        <p>
          Import the post-render ES6 setup file in your JS build. This is best done before the
          closing body tag. This will bring all the Spark-Core JS into your build. There is
          also an ES5 version if preferred. It's located in @sparkdesignsystem/spark-core/es5.
        </p>
        <div class="drizzle-c-Command">
          <code class="drizzle-CodeHighlight">
            import sparkCore from  &quot;@sparkdesignsystem/spark-core/spark-core&quot;;
          </code>
        </div>
      </li>
      <li class="sprk-u-mvm">
        <p>Init the Spark Core JS, passing in a config object (optional).</p>
        <div class="drizzle-c-Command">
          <code class="drizzle-CodeHighlight">
            sparkCore({ //config, see below });
          </code>
        </div>
        <div class="sprk-u-mvs">
          <p class="sprk-u-mbm">See below for available configuration options:</p>
          <table class="drizzle-c-Table drizzle-c-Table--wide sprk-u-mbm">
            <colgroup>
              <col class="sprk-u-Width-40">
              <col>
            </colgroup>
            <thead>
            <tr>
              <th>Key</th>
              <th>Description</th>
            </tr>
            </thead>
            <tbody>
            <tr>
              <td class="sprk-u-FontWeight--bold">datePickerConfig</td>
              <td>Exposes configuration provided by tiny-date-picker, see
                <a href="https://github.com/chrisdavies/tiny-date-picker" class="drizzle-b-Link">github</a> for
                documentation.</td>
            </tr>
            </tbody>
          </table>
        </div>
      </li>
      <li class="sprk-u-mvm">
        <p>Spark does not provide icons directly. What you see below are proprietary icons in use by Quicken Loans. To supply
          your own icon set, you need to import an svg that contains symbols for the ids referenced on the icon page. This symbol file
          should occur in the DOM before the first use element.</p>
      </li>
      <li class="sprk-u-mvm">
        <p>The main content area of your site will also need to have a data attribute set:</p>
        <div class="drizzle-c-Command">
          <code class="drizzle-CodeHighlight">
            data-sprk-main
          </code>
        </div>
      </li>
    </ul>

    <h3 class="drizzle-b-h3 sprk-u-mbm">Angular</h3>

    <div class="drizzle-o-ContentGrouping">
      <h4 class="drizzle-b-h4 sprk-u-mbm">Requirements</h4>
      <p>Spark's Angular implementation assumes a few things about your project.</p>

      <ul class="drizzle-b-List drizzle-b-List--nested sprk-u-mbm">
        <li class="sprk-u-mvm">
          <p>
            We assume that your project is processing
            <a href="https://sass-lang.com/" class="drizzle-b-Link">Sass</a> rather
            than plain CSS for style information. More information
            for converting an Angular project to SCSS is available at
            <a href="https://angular.io/guide/ajs-quick-reference" class="drizzle-b-Link">angular.io</a>.
          </p>
        </li>
        <li class="sprk-u-mvm">
          <p>
            We assume that your Angular project is using at
            least Angular 6 with Typescript or is an Angular-CLI based
            project.
          </p>
        </li>
        <li>
          <p>
            We assume that you have already installed
            @sparkdesignsystem/spark-core in your Angular project.
            Vanilla spark-core is a peer dependency of
            the Spark Angular packages.
          </p>
        </li>
      </ul>
    </div>

    <div class="drizzle-o-ContentGrouping">
      <h4 class="drizzle-b-h4">Getting Started</h4>
      <p>In order to get started with
        <span class="drizzle-c-Command">
        <code class="drizzle-CodeHighlight">
          spark-core-angular
        </code>
      </span>, you'll need to follow these steps:</p>

      <ul class="drizzle-b-List drizzle-b-List--nested sprk-u-mbm">
        <li class="sprk-u-mvm">
          <p>Install the npm package.</p>
          <div class="drizzle-c-Command">
            <code class="drizzle-CodeHighlight">
              npm install --save-dev @sparkdesignsystem/spark-core-angular</code>
          </div>
        </li>
        <li class="sprk-u-mvm">
          <p>
            Install the needed peer dependencies for our
            npm package. When you use the Angular CLI it
            should automatically install our peer
            dependencies besides the packages listed below. If your application
            does not have one of our peer dependencies
            then your console should show a warning for that missing
            dependency when you install spark-core-angular.
          </p>
          <ul class="drizzle-b-List sprk-u-mbm">
            <li class="sprk-u-mvm">
              <div class="drizzle-c-Command">
                <code class="drizzle-CodeHighlight">
                  npm install --save-dev tiny-date-picker</code>
              </div>
            </li>
            <li class="sprk-u-mvm">
              <div class="drizzle-c-Command">
                <code class="drizzle-CodeHighlight">
                  npm install --save-dev lodash</code>
              </div>
            </li>
          </ul>
        </li>
        <li class="sprk-u-mvm">
          <p>
            Import the Sass setup file in your Angular application's global styles Sass file.
            This can be done in the scss file specified
            at the highest level of your app.
            This will bring all Spark-Core patterns into your build. The .scss file extension
            is needed in the case of Angular so as to not conflict with JS files.
          </p>
          <div class="drizzle-c-Command">
            <code class="drizzle-CodeHighlight">
              @import &quot;node_modules/@sparkdesignsystem/spark-core/spark-core.scss&quot;;
            </code>
          </div>
        </li>
        <li>Your HTML element needs to have the following class:
          <div class="drizzle-c-Command">
            <code class="drizzle-CodeHighlight">
              sprk-u-JavaScript
            </code>
          </div>
        </li>
        <li class="sprk-u-mvm">
          <p>
            You'll need to
            import the
            <span class="drizzle-c-Command"><code class="drizzle-CodeHighlight">spark-core-angular</code></span> NgModule
            in your main app.module.ts file and add it to the NgModule imports array.
        </p>
          <div class="drizzle-c-Command">
            <code class="drizzle-CodeHighlight">
              import { SparkCoreAngularModule } from "@sparkdesignsystem/spark-core-angular";
            </code>
          </div>
        </li>
        <li class="sprk-u-mvm">
          <p>
            You'll need to
            import the
            <span class="drizzle-c-Command"><code class="drizzle-CodeHighlight">BrowserAnimationsModule</code></span>
            in your main app.module.ts file and add it to the NgModule imports array.
          </p>
          <div class="drizzle-c-Command">
            <code class="drizzle-CodeHighlight">
              import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
            </code>
          </div>
        </li>
        <li class="sprk-u-mvm">
          <p>Spark does not provide icons directly. What you see below are proprietary icons in use by Quicken Loans. To supply
            your own icon set, you need to import an svg that contains symbols for the ids referenced on the icon page. This symbol file
            should occur in the DOM before the first use element.</p>
        </li>
      </ul>
    </div>
  </div>

  <div class="drizzle-o-ContentGrouping">
    <h2 class="drizzle-b-h2">Spark Extras</h2>

    <ul class="drizzle-b-List drizzle-b-List--spacing-m drizzle-b-List--nested">
      <li>
        <p>Install the npm package.</p>
        <div class="drizzle-c-Command">
          <code class="drizzle-CodeHighlight">npm install --save-dev
            @sparkdesignsystem/spark-extras</code>
        </div>
      </li>
      <li>
        <p>Import any of the Spark-Extras Sass patterns that you need.</p>
        <div class="drizzle-c-Command">
          <code class="drizzle-CodeHighlight">
            @import &quot;node_modules/@sparkdesignsystem/spark-extras/components/&lt;pattern-name&gt;/&lt;pattern-name&gt;&quot;;
          </code>
        </div>
      </li>
      <li>
        <p>Import any of the Spark-Extras JS patterns that you need.</p>
        <div class="drizzle-c-Command">
          <code class="drizzle-CodeHighlight">
            import &lt;pattern-name&gt; from &quot;@sparkdesignsystem/spark-extras/components/&lt;pattern-name&gt;/&lt;pattern-name&gt;&quot;;
          </code>
        </div>
      </li>
    </ul>

    <h3 class="drizzle-b-h3">Angular</h3>

    <div class="drizzle-o-ContentGrouping">
      <p>
        The Spark Angular Extras components rely on the Spark Core
        Angular npm package and the SparkCoreAngularModule importation documented above.
        Make sure that is done in order to use the extras components.
        If your baseURL if not set in your Typescript config file then
        you will need the additional './' prepended to the path
        for the module imports.
      </p>

      <ul class="drizzle-b-List drizzle-b-List--nested sprk-u-mbm">
        <li class="sprk-u-mvm">
          <p>
            Install the npm package for the Spark Extra that you need.
          </p>
          <div class="drizzle-c-Command">
            <code class="drizzle-CodeHighlight">
              npm install --save-dev @sparkdesignsystem/spark-extras-angular-[package-name]</code>
          </div>
        </li>
        <li class="sprk-u-mvm">
          <p>You'll need to import the NgModule provided.</p>
          <div class="drizzle-c-Command">
            <code class="drizzle-CodeHighlight">
              import { Spark[PatternName]Module } from '@sparkdesignsystem/spark-extras-angular-[pattern-name]';
            </code>
          </div>
        </li>
      </ul>
    </div>
  </div>

  <div class="drizzle-o-ContentGrouping">
    <h2 class="drizzle-b-h2">Browser Support</h2>
    <p>Spark supports the following browsers (current version and 1 prior):</p>
    <ul class="drizzle-b-List drizzle-b-List--spacing-s drizzle-b-List--nested">
      <li>Google Chrome</li>
      <li>Google Chrome (Mobile)</li>
      <li>Mozilla Firefox</li>
      <li>Mozilla Firefox (Mobile)</li>
      <li>Microsoft Edge</li>
      <li>Apple Safari</li>
      <li>Apple Safari (Mobile)</li>
    </ul>
    <p>Spark also supports the following:</p>
    <ul class="drizzle-b-List drizzle-b-List--spacing-s drizzle-b-List--nested">
      <li>Microsoft Internet Explorer 11</li>
    </ul>
  </div>

  <div class="drizzle-o-ContentGrouping">

    <div class="drizzle-o-ContentGrouping">
      <h2 class="drizzle-b-h2">Change Workflow and Contribution Guide</h2>
      <p>If you are interested in contributing to Spark, please read our full
        <a class="drizzle-b-Link" href="/docs/change-workflow">change
          workflow</a> and <a class="drizzle-b-Link" href="/docs/contributions">
          contribution guide</a> to get started.</p>
    </div>

    <div class="drizzle-o-ContentGrouping">
      <h3 class="drizzle-b-h3">Code Style Standards</h3>
      <p>Spark follows specific coding styles for HTML, CSS and
        JavaScript to ensure maintainability and scalability.
        To successfully make a commit in this repo the code
        must pass the pre-commit hooks that will run
        automatically on commit. The pre-commit hooks run
        <a class="drizzle-b-Link" href="https://eslint.org/">ESLint</a>,
        <a class="drizzle-b-Link" href="https://github.com/stylelint/stylelint">
          Stylelint</a> and an additional code formatter,
          <a class="drizzle-b-Link" href="https://github.com/prettier/prettier">
            prettier</a>.
      </p>
    </div>

    <div class="drizzle-o-ContentGrouping">
      <h4 class="drizzle-b-h4">HTML</h4>
      <ul class="drizzle-b-List drizzle-b-List--nested">
        <li>Two spaces for indentation.</li>
        <li>For better code readability the attributes of elements should each
          be on their own line when the number of attributes makes that element
          exceed a line length of 80 characters.</li>
      </ul>
    </div>

    <div class="drizzle-o-ContentGrouping">
      <h4 class="drizzle-b-h4">CSS</h4>
      <ul class="drizzle-b-List drizzle-b-List--nested">
        <li>Two spaces for indentation.</li>
        <li>CSS is written in <a class="drizzle-b-Link"
          href="https://sass-lang.com/">Sass</a> and preprocessed.</li>
        <li>
          <a class="drizzle-b-Link" href="/docs/class-naming-convention">CSS
            Class Naming Conventions</a>
        </li>
        <li>
          <a class="drizzle-b-Link"
          href="https://github.com/stylelint/stylelint">Stylelint</a> is used to
          lint Sass files and all of Spark Sass coding conventions can be found
          in the <a class="drizzle-b-Link"
          href="https://github.com/sparkdesignsystem/spark-design-system/blob/master/.stylelintrc">
          Stylelint configuration file</a>.
        </li>
      </ul>
    </div>

    <div class="drizzle-o-ContentGrouping">
      <h4 class="drizzle-b-h4">JavaScript</h4>
      <ul class="drizzle-b-List drizzle-b-List--nested">
        <li>Two spaces for indentation.</li>
        <li>Spark JS will use new features from ESNext and assumes applications
          using Spark have a JavaScript compiler setup.</li>
        <li>Spark uses <a class="drizzle-b-Link" href="https://eslint.org/">
          ESLint</a> for JS linting.</li>
        <li>ESLint is setup to use the
          <a class="drizzle-b-Link" href="https://github.com/airbnb/javascript">
            Airbnb JavaScript Style Guide</a> and Spark JS coding conventions
            come from there.
        </li>
        <li>We follow JS recommendations from the
          <a class="drizzle-b-Link" href="https://github.com/QuickenLoans/js-concord/blob/master/rfc/cgr-0001-style-and-lint.md">
            Quicken Loans JS Concord Group</a>.
        </li>
        <li>Data attributes on DOM elements is the chosen method for DOM
          selection.</li>
      </ul>
    </div>

    <div class="drizzle-o-ContentGrouping">
      <h3 class="drizzle-b-h3">Code Organization</h3>
      <p>Spark is managed as a monorepo. All of the Spark source code lives in a
        single repo, but is released as separate packages using
        <a class="drizzle-b-Link" href="https://github.com/lerna/lerna">
          Lerna</a>.
      </p>
      <p>This repo consists of the design system packages, wrapped in an
        instance of <a class="drizzle-b-Link"
        href="https://github.com/cloudfour/drizzle">Drizzle</a>, a tool built
        by <a class="drizzle-b-Link" href="https://github.com/cloudfour">
        cloudfour</a>, for displaying pattern libraries. Spark uses Drizzle for
        documentation and plain html code examples.
      </p>
      <p>In the packages folder are Spark-Core and Spark-Extras. These are the
        files that are published to <a class="drizzle-b-Link"
        href="https://www.npmjs.com/settings/sparkdesignsystem/packages">
        npm</a>.
      </p>
    </div>

    <div class="drizzle-o-ContentGrouping">
      <h3 class="drizzle-b-h3 sprk-u-mbm">Running the Spark Docs site locally
      </h3>
      <ol
      class="drizzle-b-List drizzle-b-List--spacing-m drizzle-b-List--nested">
        <li>
          <div class="drizzle-c-Command">
            <code class="drizzle-CodeHighlight">
              npm install
            </code>
          </div>
        </li>
        <li>
          <div class="drizzle-c-Command">
            <code class="drizzle-CodeHighlight">
              gulp --dev
            </code>
          </div>
        </li>
        <li>
          <p>
            Open your browser to <a class="drizzle-b-Link"
            href="http://localhost:3000/">http://localhost:3000/</a>.
          </p>
        </li>
      </ol>
    </div>

  </div>

</div>
