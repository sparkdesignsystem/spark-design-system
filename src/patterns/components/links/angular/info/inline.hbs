<p class="sprk-u-mbs">
  For intra-page links to work in Angular you will need
  to set anchorScrolling: 'enabled' in
  your RouterModule configuration.
</p>

<div class="drizzle-c-Command sprk-u-mbm">
  <code class="drizzle-CodeHighlight">
    RouterModule.forRoot(appRoutes, {
      anchorScrolling: 'enabled'
    })
  </code>
</div>

<p class="sprk-u-mbm">
  See below for available customization options:
</p>

<table class="drizzle-c-Table drizzle-c-Table--wide sprk-u-mbm">
  <colgroup>
    <col class="sprk-u-Width-40">
    <col>
  </colgroup>

  <thead>
    <tr>
      <th>Input</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>

  <tbody>
    <tr>
      <td class="sprk-u-FontWeight--bold">
        linkType
      </td>

      <td>
        string
      </td>

      <td>
        Can be 'simple', 'icon', 'unstyled' or 'plain'. Will
        cause the appropriate variant type to render. If omitted,
        the default Spark Link class is applied. The 'unstyled'
        variant will render an href with no CSS classes.
      </td>
    </tr>

    <tr>
      <td class="sprk-u-FontWeight--bold">
        href
      </td>

      <td>
        string
      </td>

      <td>
        The URL of the link. If omitted, the
        link's href will be set to '#' and
        the routing will be disabled.
        If set to reference an ID then
        the page will scroll to that anchor
        as normal.
      </td>
    </tr>

    <tr>
      <td class="sprk-u-FontWeight--bold">
        analyticsString
      </td>

      <td>
        string
      </td>

      <td>
        The string that will be assigned to the
        data-analytics attribute of the link.
      </td>
    </tr>

    <tr>
      <td class="sprk-u-FontWeight--bold">
        id
      </td>

      <td>
        string
      </td>

      <td>
        The string that will be assigned to the
        id attribute of the link.
      </td>
    </tr>

    <tr>
      <td class="sprk-u-FontWeight--bold">
        idString
      </td>

      <td>
        string
      </td>

      <td>
        The value supplied will be assigned to the 'data-id' attribute on the component.
        This is intended to be used as a
        selector for automated tools. This value should be unique per page.
      </td>
    </tr>

    <tr>
      <td class="sprk-u-FontWeight--bold">
        target
      </td>

      <td>
        string
      </td>

      <td>
        Expects a value to assign to the target attribute of the link.
      </td>
    </tr>

    <tr>
      <td class="sprk-u-FontWeight--bold">
        additionalClasses
      </td>

      <td>
        string
      </td>

      <td>
        Expects a space-separated list of
        classes to append to the class
        attribute of the sprk-award component.
      </td>
    </tr>

    <tr>
      <td class="sprk-u-FontWeight--bold">
        role
      </td>

      <td>
        string
      </td>

      <td>
        Expects a value to assign to the role attribute of the link.
      </td>
    </tr>

    <tr>
      <td class="sprk-u-FontWeight--bold">
        ariaControls
      </td>

      <td>
        string
      </td>

      <td>
        Expects a value to assign to the aria-controls attribute of the link.
      </td>
    </tr>

    <tr>
      <td class="sprk-u-FontWeight--bold">
        ariaLabelledby
      </td>

      <td>
        string
      </td>

      <td>
        Expects a value to assign to the aria-labelledby attribute of the link.
      </td>
    </tr>

    <tr>
      <td class="sprk-u-FontWeight--bold">
        ariaHidden
      </td>

      <td>
        string
      </td>

      <td>
        Expects a value to assign to the aria-hidden attribute of the link.
      </td>
    </tr>

    <tr>
      <td class="sprk-u-FontWeight--bold">
        ariaCurrent
      </td>

      <td>
        string
      </td>

      <td>
        Expects a value to assign to the aria-current attribute of the link.
      </td>
    </tr>

    <tr>
      <td class="sprk-u-FontWeight--bold">
        ariaExpanded
      </td>

      <td>
        string
      </td>

      <td>
        Expects a value to assign to the aria-expanded attribute of the link.
      </td>
    </tr>

    <tr>
      <td class="sprk-u-FontWeight--bold">
        ariaSelected
      </td>

      <td>
        string
      </td>

      <td>
        Expects a value to assign to the aria-selected attribute of the link.
      </td>
    </tr>

    <tr>
      <td class="sprk-u-FontWeight--bold">
        ariaHasPopUp
      </td>

      <td>
        string
      </td>

      <td>
        Expects a value to assign to the aria-haspopup attribute of the link.
      </td>
    </tr>

    <tr>
      <td class="sprk-u-FontWeight--bold">
        ariaLabel
      </td>

      <td>
        string
      </td>

      <td>
        Expects a value to assign to the aria-label attribute of the link.
      </td>
    </tr>

    <tr>
      <td class="sprk-u-FontWeight--bold">
        isDisabled
      </td>

      <td>
        boolean
      </td>

      <td>
        If true, will set disabled styles on the link.
      </td>
    </tr>

    <tr>
      <td class="sprk-u-FontWeight--bold">
        isExternal
      </td>

      <td>
        boolean
      </td>

      <td>
        By default, the component determines if the href is an external or internal link
        by looking for the ':' character in the href string. If external link functionality is desired with
        an href value that contains a ':' set this input to true. This overrides the default
        and avoids using the Angular Router.
      </td>
    </tr>
  </tbody>
</table>
