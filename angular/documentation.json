{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "classes": [],
    "directives": [
        {
            "name": "SprkButtonDirective",
            "id": "directive-SprkButtonDirective-b047dc2dce8eb4638307966d34bd315f",
            "file": "projects/spark-angular/src/lib/directives/inputs/sprk-button/sprk-button.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, ElementRef, OnInit, Input } from '@angular/core';\n\n@Directive({\n  selector: '[sprkButton]'\n})\nexport class SprkButtonDirective implements OnInit {\n  constructor(public ref: ElementRef) {}\n\n  /**\n   * Will show a spinner inside the\n   * button if set to `true`.\n   */\n  @Input() isSpinning = false;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string[] {\n    const classArray: string[] = [];\n    classArray.push('sprk-c-Button');\n    return classArray;\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    this.getClasses().forEach(item => {\n      this.ref.nativeElement.classList.add(item);\n    });\n    if (this.isSpinning) {\n      this.setSpinning(this.ref.nativeElement);\n    }\n  }\n  /**\n   * @ignore\n   */\n  setSpinning = (element) => {\n    const el = element;\n    const width = element.offsetWidth;\n    el.setAttribute('data-sprk-spinner-text', el.textContent);\n    el.innerHTML = `<div class=\"sprk-c-Spinner sprk-c-Spinner--circle\"></div>`;\n    el.setAttribute('data-sprk-has-spinner', 'true');\n    el.setAttribute('style', `width: ${width}px`);\n  }\n}\n",
            "selector": "[sprkButton]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "isSpinning",
                    "defaultValue": "false",
                    "description": "<p>Will show a spinner inside the\nbutton if set to <code>true</code>.</p>\n",
                    "line": 13
                }
            ],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "ref",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [],
            "implements": [
                "OnInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "ref",
                        "type": "ElementRef"
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "ref",
                        "type": "ElementRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "SprkDatepickerDirective",
            "id": "directive-SprkDatepickerDirective-41bb9d18db14a13407092d79001db850",
            "file": "projects/spark-angular/src/lib/directives/inputs/sprk-datepicker/sprk-datepicker.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, ElementRef, Input, OnInit } from '@angular/core';\nimport TinyDatePicker from 'tiny-date-picker';\n\n@Directive({\n  selector: '[sprkDatepicker]'\n})\nexport class SprkDatepickerDirective implements OnInit {\n  constructor(public ref: ElementRef) {}\n\n  /**\n   * Exposes configuration provided\n   * by `tiny-date-picker`,\n   * see [github](https://github.com/chrisdavies/tiny-date-picker) for documentation.\n   */\n  @Input()\n  sprkDatePickerConfig: object;\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    const input = this.ref.nativeElement;\n    const tdpConfig = {\n      mode: 'dp-below',\n      lang: {\n        days: ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n      },\n      min: '01/1/2008',\n      max: '01/1/2068',\n      format: date =>\n        date\n          .toLocaleDateString('en-US', {\n            month: '2-digit',\n            day: '2-digit',\n            year: 'numeric'\n          })\n          .replace(/[^ -~]/g, '')\n    };\n\n    if (TinyDatePicker) {\n      TinyDatePicker(input, {\n        ...tdpConfig,\n        ...this.sprkDatePickerConfig\n      }).on('select', () => {\n\n        let event;\n\n        if (typeof(Event) === 'function') {\n          event = new Event('input');\n        } else {\n          event = document.createEvent('Event');\n          event.initEvent('input', true, true);\n        }\n\n        this.ref.nativeElement.dispatchEvent(event);\n        this.ref.nativeElement.focus();\n      });\n    }\n  }\n}\n",
            "selector": "[sprkDatepicker]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "sprkDatePickerConfig",
                    "description": "<p>Exposes configuration provided\nby <code>tiny-date-picker</code>,\nsee <a href=\"https://github.com/chrisdavies/tiny-date-picker\">github</a> for documentation.</p>\n",
                    "line": 16,
                    "type": "object"
                }
            ],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "ref",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [],
            "implements": [
                "OnInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "ref",
                        "type": "ElementRef"
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "ref",
                        "type": "ElementRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "SprkFieldErrorDirective",
            "id": "directive-SprkFieldErrorDirective-e7e5ec92ba12181cb7f2f771d7cbfee7",
            "file": "projects/spark-angular/src/lib/directives/inputs/sprk-field-error/sprk-field-error.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[sprkFieldError]'\n})\nexport class SprkFieldErrorDirective implements OnInit {\n  constructor(public ref: ElementRef) {}\n\n  /**\n   * @ignore\n   */\n  getClasses(): string[] {\n    const classArray: string[] = ['sprk-b-ErrorContainer'];\n    return classArray;\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    this.getClasses().forEach(item => {\n      this.ref.nativeElement.classList.add(item);\n    });\n  }\n}\n",
            "selector": "[sprkFieldError]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "ref",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [],
            "implements": [
                "OnInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "ref",
                        "type": "ElementRef"
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "ref",
                        "type": "ElementRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "SprkFormatterDateDirective",
            "id": "directive-SprkFormatterDateDirective-977bc184f3b0c9a298536d14506297f7",
            "file": "projects/spark-angular/src/lib/directives/inputs/formatters/sprk-formatter-date/sprk-formatter-date.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[sprkFormatterDate]'\n})\nexport class SprkFormatterDateDirective {\n  constructor(public ref: ElementRef) {}\n\n  @HostListener('input', ['$event.target.value'])\n  onFocus(value) {\n    this.ref.nativeElement.value = this.formatDate(value);\n  }\n\n  formatDate(value): string {\n    const m = value.match(\n      // tslint:disable-next-line:max-line-length\n      /^(((0[13578]|1[02])([/-]?)(0[1-9]|[12]\\d|3[01])|(0[469]|11)([/-]?)(0[1-9]|[12]\\d|30)|02([/-]?)((0[1-9])|[12]\\d))(\\4|\\7|\\9)[12]\\d{3})?$/\n    );\n\n    let newValue = '';\n    const cleanValue = value.replace(/[/-]/g, '');\n\n    if (m) {\n      for (let i = 0; i < cleanValue.length; i += 1) {\n        if (i === 1 || i === 3) {\n          newValue += `${cleanValue[i]}/`;\n        } else {\n          newValue += cleanValue[i];\n        }\n      }\n      return newValue;\n    } else {\n      return value;\n    }\n  }\n}\n",
            "selector": "[sprkFormatterDate]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "input",
                    "args": [
                        {
                            "name": "value",
                            "type": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event.target.value"
                    ],
                    "line": 10
                }
            ],
            "propertiesClass": [
                {
                    "name": "ref",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "formatDate",
                    "args": [
                        {
                            "name": "value",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 14,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "ref",
                        "type": "ElementRef"
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "ref",
                        "type": "ElementRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "SprkFormatterMonetaryDirective",
            "id": "directive-SprkFormatterMonetaryDirective-788e3d5e0801467f11858bc7598acdaa",
            "file": "projects/spark-angular/src/lib/directives/inputs/formatters/sprk-formatter-monetary/sprk-formatter-monetary.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[sprkFormatterMonetary]'\n})\nexport class SprkFormatterMonetaryDirective {\n  constructor(public ref: ElementRef) {}\n\n  @HostListener('blur', ['$event.target.value'])\n  onFocus(value) {\n    this.ref.nativeElement.value = this.formatMonetary(value);\n    this.ref.nativeElement.classList.add('sprk-b-TextInput--has-value');\n  }\n\n  formatMonetary(value): void {\n    const m = value.match(/(^\\$?(\\d+|\\d{1,3}(,\\d{3})*)(\\.\\d+)?$)|^$/);\n    let number;\n    if (m) {\n      number = Number(value.replace(/[\\$,]/g, ''));\n      return number\n        .toLocaleString('en-US', { style: 'currency', currency: 'USD' })\n        .replace(/\\$/g, '');\n    }\n\n    return value;\n  }\n}\n",
            "selector": "[sprkFormatterMonetary]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "blur",
                    "args": [
                        {
                            "name": "value",
                            "type": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event.target.value"
                    ],
                    "line": 10
                }
            ],
            "propertiesClass": [
                {
                    "name": "ref",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "formatMonetary",
                    "args": [
                        {
                            "name": "value",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "ref",
                        "type": "ElementRef"
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "ref",
                        "type": "ElementRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "SprkFormatterPhoneNumberDirective",
            "id": "directive-SprkFormatterPhoneNumberDirective-76194bd81e83eb90abb13484dd41d9bf",
            "file": "projects/spark-angular/src/lib/directives/inputs/formatters/sprk-formatter-phone-number/sprk-formatter-phone-number.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[sprkFormatterPhoneNumber]'\n})\nexport class SprkFormatterPhoneNumberDirective {\n  constructor(public ref: ElementRef) {}\n\n  @HostListener('input', ['$event.target.value'])\n  onFocus(value) {\n    this.ref.nativeElement.value = this.formatPhone(value);\n  }\n\n  formatPhone(value): string {\n    const newValue = `${value}`.replace(/\\D/g, '');\n    const m = newValue.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\n\n    if (m) {\n      return `(${m[1]}) ${m[2]}-${m[3]}`;\n    } else {\n      return value;\n    }\n  }\n}\n",
            "selector": "[sprkFormatterPhoneNumber]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "input",
                    "args": [
                        {
                            "name": "value",
                            "type": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event.target.value"
                    ],
                    "line": 10
                }
            ],
            "propertiesClass": [
                {
                    "name": "ref",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "formatPhone",
                    "args": [
                        {
                            "name": "value",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 14,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "ref",
                        "type": "ElementRef"
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "ref",
                        "type": "ElementRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "SprkFormatterSsnDirective",
            "id": "directive-SprkFormatterSsnDirective-c1456ed12bf59fd8779f4c7ad235b0d4",
            "file": "projects/spark-angular/src/lib/directives/inputs/formatters/sprk-formatter-ssn/sprk-formatter-ssn.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[sprkFormatterSsn]'\n})\nexport class SprkFormatterSsnDirective {\n  constructor(public ref: ElementRef) {}\n\n  @HostListener('input', ['$event.target.value'])\n  onFocus(value) {\n    this.ref.nativeElement.value = this.formatSSN(value);\n  }\n\n  formatSSN(value): string {\n    const m = value.match(\n      /(^(?!666|000|9\\d{2})\\d{3}([-]{0,1})(?!00)\\d{2}\\1(?!0{4})\\2\\d{4}$)|^$/\n    );\n    if (m) {\n      let val = value.trim().replace(/[ -]/g, '');\n      let newVal = '';\n      const sizes = [3, 2, 4];\n\n      sizes.forEach(size => {\n        if (val.length > size) {\n          newVal += `${val.substr(0, size)}-`;\n          val = val.substr(size);\n        }\n      });\n\n      newVal += val;\n      return newVal;\n    }\n    return value;\n  }\n}\n",
            "selector": "[sprkFormatterSsn]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "input",
                    "args": [
                        {
                            "name": "value",
                            "type": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event.target.value"
                    ],
                    "line": 10
                }
            ],
            "propertiesClass": [
                {
                    "name": "ref",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "formatSSN",
                    "args": [
                        {
                            "name": "value",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 14,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "ref",
                        "type": "ElementRef"
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "ref",
                        "type": "ElementRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "SprkHelperTextDirective",
            "id": "directive-SprkHelperTextDirective-34ecc71db7af7abb5d05ca785794a31f",
            "file": "projects/spark-angular/src/lib/directives/inputs/sprk-helper-text/sprk-helper-text.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[sprkHelperText]'\n})\nexport class SprkHelperTextDirective implements OnInit {\n  constructor(public ref: ElementRef) {}\n\n  /**\n   * @ignore\n   */\n  getClasses(): string[] {\n    const classArray: string[] = ['sprk-b-HelperText'];\n    return classArray;\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    this.getClasses().forEach(item => {\n      this.ref.nativeElement.classList.add(item);\n    });\n  }\n}\n",
            "selector": "[sprkHelperText]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "ref",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [],
            "implements": [
                "OnInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "ref",
                        "type": "ElementRef"
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "ref",
                        "type": "ElementRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "SprkInputDirective",
            "id": "directive-SprkInputDirective-38fd81ef6ceb436293c3e0de70540121",
            "file": "projects/spark-angular/src/lib/directives/inputs/sprk-input/sprk-input.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import {\n  Directive,\n  ElementRef,\n  OnInit,\n  HostListener,\n} from '@angular/core';\n\n@Directive({\n  selector: '[sprkInput]'\n})\nexport class SprkInputDirective implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n\n  /**\n   * @ignore\n   */\n  @HostListener('change', ['$event'])\n  OnChange($event) {\n    const value = (this.ref.nativeElement as HTMLInputElement).value;\n    if (value.length > 0) {\n      this.ref.nativeElement.classList.add('sprk-b-Input--has-floating-label');\n    } else {\n      this.ref.nativeElement.classList.remove('sprk-b-Input--has-floating-label');\n    }\n  }\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    if (this.ref.nativeElement.nodeName === 'SELECT') {\n      this.ref.nativeElement.classList.add('sprk-b-Select');\n    } else if (this.ref.nativeElement.nodeName === 'TEXTAREA') {\n      this.ref.nativeElement.classList.add('sprk-b-TextInput');\n      this.ref.nativeElement.classList.add('sprk-b-TextArea');\n    } else {\n      this.ref.nativeElement.classList.add('sprk-b-TextInput');\n    }\n\n    if ((this.ref.nativeElement as HTMLInputElement).value.length > 0 ) {\n      this.ref.nativeElement.classList.add('sprk-b-Input--has-floating-label');\n    }\n    this.ref.nativeElement.classList.add('sprk-u-Width-100');\n  }\n}\n",
            "selector": "[sprkInput]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "SprkLabelDirective",
            "id": "directive-SprkLabelDirective-46e1023000f59ab43af2d8a092b0cc90",
            "file": "projects/spark-angular/src/lib/directives/inputs/sprk-label/sprk-label.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[sprkLabel]'\n})\nexport class SprkLabelDirective implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n\n  /**\n   * @ignore\n   */\n  getClasses(): string[] {\n    const classArray: string[] = ['sprk-b-Label'];\n    return classArray;\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    this.getClasses().forEach(item => {\n      this.ref.nativeElement.classList.add(item);\n    });\n  }\n}\n",
            "selector": "[sprkLabel]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "SprkSelectionInputDirective",
            "id": "directive-SprkSelectionInputDirective-7c569f3aaf2d2e1017ce6184426558a2",
            "file": "projects/spark-angular/src/lib/directives/inputs/sprk-selection-input/sprk-selection-input.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[sprkSelectionInput]'\n})\nexport class SprkSelectionInputDirective implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n\n  /**\n   * @ignore\n   */\n  getClasses(): string[] {\n    const classArray: string[] = ['sprk-b-SelectionInput'];\n    return classArray;\n  }\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    this.getClasses().forEach(item => {\n      this.ref.nativeElement.classList.add(item);\n    });\n  }\n}\n",
            "selector": "[sprkSelectionInput]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "SprkSelectionLabelDirective",
            "id": "directive-SprkSelectionLabelDirective-7aaa7c65d6e090decc4e37a99678b4ba",
            "file": "projects/spark-angular/src/lib/directives/inputs/sprk-selection-label/sprk-selection-label.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[sprkSelectionLabel]'\n})\nexport class SprkSelectionLabelDirective implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n\n  /**\n   * @ignore\n   */\n  getClasses(): string[] {\n    const classArray: string[] = ['sprk-b-Label', 'sprk-b-Label--inline'];\n    return classArray;\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    this.getClasses().forEach(item => {\n      this.ref.nativeElement.classList.add(item);\n    });\n  }\n}\n",
            "selector": "[sprkSelectionLabel]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "SprkStackItemDirective",
            "id": "directive-SprkStackItemDirective-d7866daed58d797ed8c66c7ed11bec21",
            "file": "projects/spark-angular/src/lib/directives/sprk-stack-item/sprk-stack-item.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[sprkStackItem]'\n})\nexport class SprkStackItemDirective implements OnInit {\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    this.ref.nativeElement.classList.add('sprk-o-Stack__item');\n  }\n\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n}\n",
            "selector": "[sprkStackItem]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "SprkTabbedNavigationPanelDirective",
            "id": "directive-SprkTabbedNavigationPanelDirective-66963a4d04ad36dfeaa66565e23e0ff0",
            "file": "projects/spark-angular/src/lib/directives/tabbed-navigation/sprk-tabbed-navigation-panel/sprk-tabbed-navigation-panel.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, ElementRef, Input, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[sprkTabbedNavigationPanel]'\n})\nexport class SprkTabbedNavigationPanelDirective implements OnInit {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * element.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * If `true`, the Panel will\n   * be set as the active Panel on render.\n   */\n  @Input()\n  defaultActive: boolean;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string[] {\n    const classArray: string[] = ['sprk-c-Tabs__content'];\n\n    if (!this.defaultActive) {\n      classArray.push('sprk-u-HideWhenJs');\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray;\n  }\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    this.ref.nativeElement.setAttribute('role', 'tabpanel');\n    this.ref.nativeElement.setAttribute('tabindex', '0');\n\n    this.getClasses().forEach(item => {\n      this.ref.nativeElement.classList.add(item);\n    });\n  }\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n}\n",
            "selector": "[sprkTabbedNavigationPanel]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\nelement.</p>\n",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "defaultActive",
                    "description": "<p>If <code>true</code>, the Panel will\nbe set as the active Panel on render.</p>\n",
                    "line": 19,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "SprkTabbedNavigationTabDirective",
            "id": "directive-SprkTabbedNavigationTabDirective-6ebc32c3748f05e2c05bf6a28d613b60",
            "file": "projects/spark-angular/src/lib/directives/tabbed-navigation/sprk-tabbed-navigation-tab/sprk-tabbed-navigation-tab.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, ElementRef, Input, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[sprkTabbedNavigationTab]'\n})\nexport class SprkTabbedNavigationTabDirective implements OnInit {\n /**\n  * Expects a space separated string\n  * of classes to be added to the\n  * element.\n  */\n  @Input()\n  additionalClasses: string;\n  /**\n   * If `true`, the Tab will have\n   * active styles and aria attributes on render.\n   */\n  @Input()\n  defaultActive: boolean;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the component.\n   * Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsString: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string[] {\n    const classArray: string[] = ['sprk-c-Tabs__button'];\n\n    if (this.defaultActive) {\n      classArray.push('sprk-c-Tabs__button--active');\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray;\n  }\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    this.getClasses().forEach(item => {\n      this.ref.nativeElement.classList.add(item);\n    });\n\n    this.ref.nativeElement.setAttribute('role', 'tab');\n    this.ref.nativeElement.setAttribute(\n      'aria-selected',\n      this.defaultActive ? 'true' : 'false'\n    );\n\n    if (this.analyticsString) {\n      this.ref.nativeElement.setAttribute(\n        'data-analytics',\n        this.analyticsString\n      );\n    }\n  }\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n}\n",
            "selector": "[sprkTabbedNavigationTab]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\nelement.</p>\n",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "analyticsString",
                    "description": "<p>The value supplied will be assigned to the\n<code>data-analytics</code> attribute on the component.\nIntended for an outside\nlibrary to capture data.</p>\n",
                    "line": 27,
                    "type": "string"
                },
                {
                    "name": "defaultActive",
                    "description": "<p>If <code>true</code>, the Tab will have\nactive styles and aria attributes on render.</p>\n",
                    "line": 19,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "SprkTableEmptyHeadingDirective",
            "id": "directive-SprkTableEmptyHeadingDirective-b8eefbf8c2cfe1e1999424a6a540692e",
            "file": "projects/spark-angular/src/lib/directives/sprk-table-empty-heading/sprk-table-empty-heading.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, ElementRef, Input, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[sprkTableEmptyHeading]'\n})\nexport class SprkTableEmptyHeadingDirective implements OnInit {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * element.\n   */\n  @Input()\n  additionalClasses: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string[] {\n    const classArray = ['sprk-b-Table__empty-heading'];\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n    return classArray;\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    this.getClasses().forEach(className => {\n      this.ref.nativeElement.classList.add(className);\n    });\n  }\n\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n}\n",
            "selector": "[sprkTableEmptyHeading]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\nelement.</p>\n",
                    "line": 13,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "SprkTableGroupedColumnDirective",
            "id": "directive-SprkTableGroupedColumnDirective-f3711a7e151cb51677e8078c108f6d91",
            "file": "projects/spark-angular/src/lib/directives/sprk-table-grouped-column/sprk-table-grouped-column.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, ElementRef, Input, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[sprkTableGroupedColumn]'\n})\nexport class SprkTableGroupedColumnDirective implements OnInit {\n /**\n  * Expects a space separated string\n  * of classes to be added to the\n  * element.\n  */\n  @Input()\n  additionalClasses: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string[] {\n    const classArray = ['sprk-b-Table__grouped-column'];\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n    return classArray;\n  }\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    this.getClasses().forEach(className => {\n      this.ref.nativeElement.classList.add(className);\n    });\n  }\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n}\n",
            "selector": "[sprkTableGroupedColumn]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\nelement.</p>\n",
                    "line": 13,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "SprkTableHeadDirective",
            "id": "directive-SprkTableHeadDirective-5c37872b835a944314f94dd5e73003dc",
            "file": "projects/spark-angular/src/lib/directives/sprk-table-head/sprk-table-head.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, ElementRef, Input, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[sprkTableHead]'\n})\nexport class SprkTableHeadDirective implements OnInit {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * element.\n   */\n  @Input()\n  additionalClasses: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string[] {\n    const classArray = ['sprk-b-Table__head'];\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n    return classArray;\n  }\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    this.getClasses().forEach(className => {\n      this.ref.nativeElement.classList.add(className);\n    });\n  }\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n}\n",
            "selector": "[sprkTableHead]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\nelement.</p>\n",
                    "line": 13,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "SprkTableRowHeadingDirective",
            "id": "directive-SprkTableRowHeadingDirective-1a975d4a1807a1ed802d670fa28464e1",
            "file": "projects/spark-angular/src/lib/directives/sprk-table-row-heading/sprk-table-row-heading.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, ElementRef, Input, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[sprkTableRowHeading]'\n})\nexport class SprkTableRowHeadingDirective implements OnInit {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * element.\n   */\n  @Input()\n  additionalClasses: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string[] {\n    const classArray = ['sprk-b-Table__row-heading'];\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n    return classArray;\n  }\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    this.getClasses().forEach(className => {\n      this.ref.nativeElement.classList.add(className);\n    });\n  }\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n}\n",
            "selector": "[sprkTableRowHeading]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\nelement.</p>\n",
                    "line": 13,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "implements": [
                "OnInit"
            ]
        }
    ],
    "components": [
        {
            "name": "SparkInputContainerComponent",
            "id": "component-SparkInputContainerComponent-adc49d9c2d14a3b1900763b9275f0e17",
            "file": "projects/spark-angular/src/lib/components/inputs/sprk-input-container/sprk-input-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sprk-input-container",
            "styleUrls": [],
            "styles": [],
            "template": "<div [ngClass]=\"getClasses()\">\n  <ng-content select=\"[sprkLabel]\"></ng-content>\n  <ng-content select=\"[sprkInput]\"></ng-content>\n  <ng-content select=\"[sprk-select-icon]\"></ng-content>\n  <ng-content select=\"sprk-selection-item-container\"></ng-content>\n  <ng-content select=\"[sprkHelperText]\"></ng-content>\n  <ng-content select=\"[sprkFieldError]\"></ng-content>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\ncomponent.</p>\n",
                    "line": 27,
                    "type": "string"
                },
                {
                    "name": "iconContainerClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\nicon container.</p>\n",
                    "line": 34,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "error",
                    "type": "SprkFieldErrorDirective",
                    "optional": false,
                    "description": "<p>This component expects a child element\nwith the <code>sprkFieldError</code> directive.</p>\n",
                    "line": 53,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "SprkFieldErrorDirective, {static: true}"
                        }
                    ]
                },
                {
                    "name": "input",
                    "type": "SprkInputDirective",
                    "optional": false,
                    "description": "<p>This component expects a child input element\nwith the <code>sprkInput</code> directive.</p>\n",
                    "line": 47,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "SprkInputDirective, {static: true}"
                        }
                    ]
                },
                {
                    "name": "label",
                    "type": "SprkLabelDirective",
                    "optional": false,
                    "description": "<p>This component expects a child label element\nwith the <code>sprkLabel</code> directive.</p>\n",
                    "line": 41,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "SprkLabelDirective, {static: true}"
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ContentChild, Input, OnInit } from '@angular/core';\nimport * as _ from 'lodash';\nimport { SprkFieldErrorDirective } from '../../../directives/inputs/sprk-field-error/sprk-field-error.directive';\nimport { SprkInputDirective } from '../../../directives/inputs/sprk-input/sprk-input.directive';\nimport { SprkLabelDirective } from '../../../directives/inputs/sprk-label/sprk-label.directive';\n\n@Component({\n  selector: 'sprk-input-container',\n  template: `\n    <div [ngClass]=\"getClasses()\">\n      <ng-content select=\"[sprkLabel]\"></ng-content>\n      <ng-content select=\"[sprkInput]\"></ng-content>\n      <ng-content select=\"[sprk-select-icon]\"></ng-content>\n      <ng-content select=\"sprk-selection-item-container\"></ng-content>\n      <ng-content select=\"[sprkHelperText]\"></ng-content>\n      <ng-content select=\"[sprkFieldError]\"></ng-content>\n    </div>\n  `\n})\nexport class SparkInputContainerComponent implements OnInit {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * icon container.\n   */\n  @Input()\n  iconContainerClasses: string;\n\n  /**\n   * This component expects a child label element\n   * with the `sprkLabel` directive.\n   */\n  @ContentChild(SprkLabelDirective, { static: true })\n  label: SprkLabelDirective;\n  /**\n   * This component expects a child input element\n   * with the `sprkInput` directive.\n   */\n  @ContentChild(SprkInputDirective, { static: true })\n  input: SprkInputDirective;\n  /**\n   * This component expects a child element\n   * with the `sprkFieldError` directive.\n   */\n  @ContentChild(SprkFieldErrorDirective, { static: true })\n  error: SprkFieldErrorDirective;\n\n  /**\n   * @ignore\n   */\n  id = _.uniqueId();\n  /**\n   * @ignore\n   */\n  input_id = `input_${this.id}`;\n  /**\n   * @ignore\n   */\n  error_id = `error_${this.id}`;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-b-InputContainer'];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    if (this.label && this.input) {\n      this.label.ref.nativeElement.setAttribute('for', this.input_id);\n      this.input.ref.nativeElement.id = this.input_id;\n    }\n    if (this.input && this.error) {\n      this.input.ref.nativeElement.setAttribute(\n        'aria-describedby',\n        this.error_id\n      );\n      this.error.ref.nativeElement.id = this.error_id;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "SprkAccordionComponent",
            "id": "component-SprkAccordionComponent-c64c18e8ec57ebbe5ebacf3c388ab699",
            "file": "projects/spark-angular/src/lib/components/sprk-accordion/sprk-accordion.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sprk-accordion",
            "styleUrls": [],
            "styles": [],
            "template": "<ul [ngClass]=\"getClasses()\">\n  <ng-content></ng-content>\n</ul>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\ncomponent.</p>\n",
                    "line": 18,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-accordion',\n  template: `\n    <ul [ngClass]=\"getClasses()\">\n      <ng-content></ng-content>\n    </ul>\n  `\n})\nexport class SprkAccordionComponent {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-c-Accordion', 'sprk-o-VerticalList'];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SprkAccordionItemComponent",
            "id": "component-SprkAccordionItemComponent-1077c824821ceed54f89827838a8b4b2",
            "file": "projects/spark-angular/src/lib/components/sprk-accordion-item/sprk-accordion-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sprk-accordion-item",
            "styleUrls": [],
            "styles": [],
            "template": "<li [ngClass]=\"getClasses()\">\n  <sprk-link\n    linkType=\"unstyled\"\n    [ariaControls]=\"accordion_controls_id\"\n    additionalClasses=\"sprk-c-Accordion__summary\"\n    [analyticsString]=\"analyticsString\"\n    [idString]=\"idString\"\n    (click)=\"toggleAccordion($event)\"\n  >\n    <span [ngClass]=\"getHeadingClasses()\">\n      <sprk-icon\n        [iconType]=\"leadingIcon\"\n        additionalClasses=\"sprk-c-Icon--stroke-current-color sprk-c-Icon--l sprk-u-mrs\"\n        *ngIf=\"leadingIcon\"\n      ></sprk-icon>\n      {{ title }}\n    </span>\n\n    <sprk-icon\n      additionalClasses=\"sprk-c-Accordion__icon sprk-c-Icon--toggle sprk-c-Icon--l {{\n        iconStateClass\n      }}\"\n      [iconType]=\"currentIconType\"\n    ></sprk-icon>\n  </sprk-link>\n\n  <div [@toggleContent]=\"animState\">\n    <div\n      [id]=\"accordion_controls_id\"\n      class=\"sprk-c-Accordion__content sprk-b-TypeBodyTwo\"\n    >\n      <ng-content></ng-content>\n    </div>\n  </div>\n</li>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\ncomponent.</p>\n",
                    "line": 77,
                    "type": "string"
                },
                {
                    "name": "additionalHeadingClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\nheading in the Accordion item.</p>\n",
                    "line": 84,
                    "type": "string"
                },
                {
                    "name": "analyticsString",
                    "description": "<p>The value supplied will be assigned to the\n<code>data-analytics</code> attribute on the component.\nIntended for an outside\nlibrary to capture data.</p>\n",
                    "line": 60,
                    "type": "string"
                },
                {
                    "name": "iconTypeClosed",
                    "defaultValue": "'chevron-up-circle-two-color'",
                    "description": "<p>The name of the icon to use for\na closed Accordion item.</p>\n",
                    "line": 103
                },
                {
                    "name": "iconTypeOpen",
                    "defaultValue": "'chevron-up-circle-two-color'",
                    "description": "<p>The name of the icon to use for\nan open Accordion item.</p>\n",
                    "line": 109
                },
                {
                    "name": "idString",
                    "description": "<p>The value supplied will be assigned\nto the <code>data-id</code> attribute on the\ncomponent. This is intended to be\nused as a selector for automated\ntools. This value should be unique\nper page.</p>\n",
                    "line": 70,
                    "type": "string"
                },
                {
                    "name": "isActive",
                    "description": "<p>If <code>true</code>, the active CSS class\nwill be applied to the item.</p>\n",
                    "line": 97,
                    "type": "boolean"
                },
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "description": "<p>The Accordion item will use this to decide\nif it should be open or closed on first render.\n(Interacting with the toggle will override this input.)</p>\n",
                    "line": 91
                },
                {
                    "name": "leadingIcon",
                    "description": "<p>The name of the icon to use before\nthe title in the Accordion item.\nThis is optional.</p>\n",
                    "line": 116,
                    "type": "string"
                },
                {
                    "name": "title",
                    "description": "<p>The value supplied will be rendered\ninside the title area of the Accordion item.</p>\n",
                    "line": 52,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 206
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport * as _ from 'lodash';\nimport { toggleAnimations } from '../sprk-toggle/sprk-toggle-animations';\n\n@Component({\n  selector: 'sprk-accordion-item',\n  template: `\n    <li [ngClass]=\"getClasses()\">\n      <sprk-link\n        linkType=\"unstyled\"\n        [ariaControls]=\"accordion_controls_id\"\n        additionalClasses=\"sprk-c-Accordion__summary\"\n        [analyticsString]=\"analyticsString\"\n        [idString]=\"idString\"\n        (click)=\"toggleAccordion($event)\"\n      >\n        <span [ngClass]=\"getHeadingClasses()\">\n          <sprk-icon\n            [iconType]=\"leadingIcon\"\n            additionalClasses=\"sprk-c-Icon--stroke-current-color sprk-c-Icon--l sprk-u-mrs\"\n            *ngIf=\"leadingIcon\"\n          ></sprk-icon>\n          {{ title }}\n        </span>\n\n        <sprk-icon\n          additionalClasses=\"sprk-c-Accordion__icon sprk-c-Icon--toggle sprk-c-Icon--l {{\n            iconStateClass\n          }}\"\n          [iconType]=\"currentIconType\"\n        ></sprk-icon>\n      </sprk-link>\n\n      <div [@toggleContent]=\"animState\">\n        <div\n          [id]=\"accordion_controls_id\"\n          class=\"sprk-c-Accordion__content sprk-b-TypeBodyTwo\"\n        >\n          <ng-content></ng-content>\n        </div>\n      </div>\n    </li>\n  `,\n  animations: [toggleAnimations.toggleContent]\n})\nexport class SprkAccordionItemComponent implements OnInit {\n  /**\n   * The value supplied will be rendered\n   * inside the title area of the Accordion item.\n   */\n  @Input()\n  title: string;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the component.\n   * Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsString: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * heading in the Accordion item.\n   */\n  @Input()\n  additionalHeadingClasses: string;\n  /**\n   * The Accordion item will use this to decide\n   * if it should be open or closed on first render.\n   * (Interacting with the toggle will override this input.)\n   */\n  @Input()\n  isOpen = false;\n  /**\n   * If `true`, the active CSS class\n   * will be applied to the item.\n   */\n  @Input()\n  isActive: boolean;\n  /**\n   * The name of the icon to use for\n   * a closed Accordion item.\n   */\n  @Input()\n  iconTypeClosed = 'chevron-up-circle-two-color';\n  /**\n   * The name of the icon to use for\n   * an open Accordion item.\n   */\n  @Input()\n  iconTypeOpen = 'chevron-up-circle-two-color';\n  /**\n   * The name of the icon to use before\n   * the title in the Accordion item.\n   * This is optional.\n   */\n  @Input()\n  leadingIcon: string;\n\n  /**\n   * @ignore\n   */\n  componentID = _.uniqueId();\n  /**\n   * @ignore\n   */\n  accordion_controls_id = `accordionHeading__${this.componentID}`;\n  /**\n   * @ignore\n   */\n  public currentIconType = this.iconTypeClosed;\n  /**\n   * @ignore\n   */\n  public iconStateClass = '';\n  /**\n   * @ignore\n   */\n  public animState = 'closed';\n\n  /**\n   * @ignore\n   */\n  accordionState(): void {\n    this.isOpen === false\n      ? (this.animState = 'closed')\n      : (this.animState = 'open');\n\n    this.isOpen === false\n      ? (this.currentIconType = this.iconTypeClosed)\n      : (this.currentIconType = this.iconTypeOpen);\n\n    this.isOpen === false\n      ? (this.iconStateClass = '')\n      : (this.iconStateClass = 'sprk-c-Icon--open');\n  }\n\n  /**\n   * @ignore\n   */\n  toggleAccordion(event): void {\n    event.preventDefault();\n    this.isOpen = !this.isOpen;\n    this.accordionState();\n  }\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = [\n      'sprk-c-Accordion__item',\n      'sprk-u-Overflow--hidden'\n    ];\n\n    if (this.isOpen) {\n      classArray.push('sprk-c-Accordion__item--open');\n    }\n\n    if (this.isActive) {\n      classArray.push('sprk-c-Accordion__item--active');\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getHeadingClasses(): string {\n    const classArray: string[] = ['sprk-c-Accordion__heading'];\n\n    if (this.additionalHeadingClasses) {\n      this.additionalHeadingClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  ngOnInit() {\n    this.accordionState();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "SprkAlertComponent",
            "id": "component-SprkAlertComponent-7a49b8f588a4b0e3965e2abca42afe4b",
            "file": "projects/spark-angular/src/lib/components/sprk-alert/sprk-alert.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sprk-alert",
            "styleUrls": [],
            "styles": [],
            "template": "<div\n  *ngIf=\"visible\"\n  [ngClass]=\"getClassesAlertContainer()\"\n  role=\"alert\"\n  [attr.data-analytics]=\"analyticsString\"\n  [attr.data-id]=\"idString\"\n>\n  <div class=\"sprk-c-Alert__content\">\n    <sprk-icon\n      iconType=\"{{ icon }}\"\n      additionalClasses=\"sprk-c-Alert__icon sprk-c-Icon--l sprk-c-Icon--stroke-current-color\"\n      aria-hidden=\"true\"\n    ></sprk-icon>\n\n    <p class=\"sprk-c-Alert__text\"><ng-content></ng-content></p>\n  </div>\n\n  <button\n    *ngIf=\"dismissible !== false\"\n    class=\"sprk-c-Alert__icon sprk-c-Alert__icon--dismiss\"\n    type=\"button\"\n    title=\"Dismiss\"\n    (click)=\"alertDismiss($event)\"\n  >\n    <sprk-icon\n      iconType=\"close\"\n      additionalClasses=\"sprk-c-Icon--stroke-current-color\"\n      aria-hidden=\"true\"\n    ></sprk-icon>\n  </button>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\ncomponent.</p>\n",
                    "line": 70,
                    "type": "string"
                },
                {
                    "name": "alertType",
                    "description": "<p>The type of Alert variant to render.\n     Can be <code>info</code>, <code>fail</code>, or <code>success</code>.</p>\n",
                    "line": 45,
                    "type": "string"
                },
                {
                    "name": "analyticsString",
                    "description": "<p>The value supplied will be assigned to the\n<code>data-analytics</code> attribute on the component.\nIntended for an outside\nlibrary to capture data.</p>\n",
                    "line": 53,
                    "type": "string"
                },
                {
                    "name": "dismissible",
                    "description": "<p>If <code>false</code>, the dismiss button will not be rendered and\nthe Alert will not dismissible.\nIf <code>true</code>, the dismiss button will be rendered and\nthe Alert will be dismissible.</p>\n",
                    "line": 78,
                    "type": "boolean"
                },
                {
                    "name": "idString",
                    "description": "<p>The value supplied will be assigned\nto the <code>data-id</code> attribute on the\ncomponent. This is intended to be\nused as a selector for automated\ntools. This value should be unique\nper page.</p>\n",
                    "line": 63,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "alertDismiss",
                    "args": [
                        {
                            "name": "event",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 126,
                    "description": "<p>When the dismiss button is clicked\nthis method sets the visable state to <code>false</code>\nand hides the Alert component.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-alert',\n  template: `\n    <div\n      *ngIf=\"visible\"\n      [ngClass]=\"getClassesAlertContainer()\"\n      role=\"alert\"\n      [attr.data-analytics]=\"analyticsString\"\n      [attr.data-id]=\"idString\"\n    >\n      <div class=\"sprk-c-Alert__content\">\n        <sprk-icon\n          iconType=\"{{ icon }}\"\n          additionalClasses=\"sprk-c-Alert__icon sprk-c-Icon--l sprk-c-Icon--stroke-current-color\"\n          aria-hidden=\"true\"\n        ></sprk-icon>\n\n        <p class=\"sprk-c-Alert__text\"><ng-content></ng-content></p>\n      </div>\n\n      <button\n        *ngIf=\"dismissible !== false\"\n        class=\"sprk-c-Alert__icon sprk-c-Alert__icon--dismiss\"\n        type=\"button\"\n        title=\"Dismiss\"\n        (click)=\"alertDismiss($event)\"\n      >\n        <sprk-icon\n          iconType=\"close\"\n          additionalClasses=\"sprk-c-Icon--stroke-current-color\"\n          aria-hidden=\"true\"\n        ></sprk-icon>\n      </button>\n    </div>\n  `\n})\nexport class SprkAlertComponent {\n  /**\n   * The type of Alert variant to render.\n   * \tCan be `info`, `fail`, or `success`.\n   */\n  @Input()\n  alertType: string;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the component.\n   * Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsString: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * If `false`, the dismiss button will not be rendered and\n   * the Alert will not dismissible.\n   * If `true`, the dismiss button will be rendered and\n   * the Alert will be dismissible.\n   */\n  @Input()\n  dismissible: boolean;\n\n  /**\n   * @ignore\n   */\n  public icon: string;\n  /**\n   * @ignore\n   */\n  public visible = true;\n\n  /**\n   * @ignore\n   */\n  getClassesAlertContainer(): string {\n    const alertClassArray: string[] = ['sprk-c-Alert'];\n\n    switch (this.alertType) {\n      case 'success':\n        alertClassArray.push('sprk-c-Alert--success');\n        this.icon = 'check-mark';\n        break;\n      case 'info':\n        alertClassArray.push('sprk-c-Alert--info');\n        this.icon = 'bell';\n        break;\n      case 'fail':\n        alertClassArray.push('sprk-c-Alert--fail');\n        this.icon = 'exclamation';\n        break;\n      default:\n        break;\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        alertClassArray.push(className);\n      });\n    }\n\n    return alertClassArray.join(' ');\n  }\n\n  /**\n   * When the dismiss button is clicked\n   * this method sets the visable state to `false`\n   * and hides the Alert component.\n   */\n  alertDismiss(event): void {\n    this.visible = false;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SprkAwardComponent",
            "id": "component-SprkAwardComponent-d579a3971c6da7f2b9e0867e8b9ee71f",
            "file": "projects/spark-angular/src/lib/components/sprk-award/sprk-award.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sprk-award",
            "styleUrls": [],
            "styles": [
                ""
            ],
            "template": "<sprk-stack\n  itemSpacing=\"medium\"\n  additionalClasses=\"{{ additionalClasses }}\"\n>\n  <h2\n    sprkStackItem\n    [attr.data-id]=\"idString\"\n    class=\"\n    sprk-o-Stack__item\n    sprk-b-TypeDisplayFive\n    sprk-b-Measure sprk-b-Measure--narrow\n    sprk-u-TextAlign--center\n    sprk-o-Stack__item--center-column\"\n  >\n    {{ title }}\n  </h2>\n\n  <div sprkStackItem [ngClass]=\"getClasses()\">\n    <sprk-link\n      linkType=\"unstyled\"\n      additionalClasses=\"sprk-o-Stack__item sprk-o-Stack__item--flex@s sprk-o-Stack\"\n      [href]=\"imgOneHref\"\n      [analyticsString]=\"analyticsStringImgOne\"\n    >\n      <img\n        [ngClass]=\"getClassesImgOne()\"\n        alt=\"{{ imgOneAlt }}\"\n        src=\"{{ imgOneSrc }}\"\n      />\n    </sprk-link>\n\n    <sprk-link\n      linkType=\"unstyled\"\n      additionalClasses=\"sprk-o-Stack__item sprk-o-Stack__item--flex@s sprk-o-Stack\"\n      [href]=\"imgTwoHref\"\n      [analyticsString]=\"analyticsStringImgTwo\"\n    >\n      <img\n        [ngClass]=\"getClassesImgTwo()\"\n        alt=\"{{ imgTwoAlt }}\"\n        src=\"{{ imgTwoSrc }}\"\n      />\n    </sprk-link>\n  </div>\n\n  <sprk-toggle\n    *ngIf=\"disclaimer !== 'false'\"\n    sprkStackItem\n    additionalClasses=\"sprk-o-Stack__item--start-column\"\n    toggleType=\"base\"\n    title=\"{{ disclaimerTitle }}\"\n    analyticsString=\"{{ analyticsStringDisclaimer }}\"\n  >\n    <p class=\"sprk-b-TypeBodyFour\">{{ disclaimerCopy }}</p>\n  </sprk-toggle>\n</sprk-stack>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\ncomponent.</p>\n",
                    "line": 138,
                    "type": "string"
                },
                {
                    "name": "additionalClassesImgOne",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\nfirst image.</p>\n",
                    "line": 145,
                    "type": "string"
                },
                {
                    "name": "additionalClassesImgTwo",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\nsecond image.</p>\n",
                    "line": 152,
                    "type": "string"
                },
                {
                    "name": "analyticsStringDisclaimer",
                    "description": "<p>The string that will be assigned to the\n<code>data-analytics</code> attribute of\nthe clickable disclaimer.</p>\n",
                    "line": 131,
                    "type": "string"
                },
                {
                    "name": "analyticsStringImgOne",
                    "description": "<p>The string that will be assigned to the\n<code>data-analytics</code> attribute of the first image.</p>\n",
                    "line": 118,
                    "type": "string"
                },
                {
                    "name": "analyticsStringImgTwo",
                    "description": "<p>The string that will be assigned to the\n<code>data-analytics</code> attribute of the second image.</p>\n",
                    "line": 124,
                    "type": "string"
                },
                {
                    "name": "disclaimer",
                    "description": "<p>If <code>false</code>, the disclaimer\ntoggle will not be rendered.</p>\n",
                    "line": 177,
                    "type": "string"
                },
                {
                    "name": "disclaimerCopy",
                    "description": "<p>The text that will be inside the\ndisclaimer toggle.</p>\n",
                    "line": 171,
                    "type": "string"
                },
                {
                    "name": "disclaimerTitle",
                    "description": "<p>The text that will be the clickable\ntitle of the disclaimer toggle.</p>\n",
                    "line": 165,
                    "type": "string"
                },
                {
                    "name": "idString",
                    "description": "<p>The value supplied will be assigned\nto the <code>data-id</code> attribute on the\ncomponent. This is intended to be\nused as a selector for automated\ntools. This value should be unique\nper page.</p>\n",
                    "line": 187,
                    "type": "string"
                },
                {
                    "name": "imgOneAlt",
                    "description": "<p>The <code>alt</code> text that will be applied\nto the first image.</p>\n",
                    "line": 82,
                    "type": "string"
                },
                {
                    "name": "imgOneHref",
                    "description": "<p>The image <code>href</code> value that will be\napplied to the first image.</p>\n",
                    "line": 88,
                    "type": "string"
                },
                {
                    "name": "imgOneSrc",
                    "description": "<p>The image source that will be\napplied to the first image.</p>\n",
                    "line": 106,
                    "type": "string"
                },
                {
                    "name": "imgTwoAlt",
                    "description": "<p>The <code>alt</code> text that will be applied\n&#39;to the second image.</p>\n",
                    "line": 100,
                    "type": "string"
                },
                {
                    "name": "imgTwoHref",
                    "description": "<p>The image <code>href</code> value that will be\napplied to the second image.</p>\n",
                    "line": 94,
                    "type": "string"
                },
                {
                    "name": "imgTwoSrc",
                    "description": "<p>The image source that will be\napplied to the second image.</p>\n",
                    "line": 112,
                    "type": "string"
                },
                {
                    "name": "splitAt",
                    "description": "<p>The relative size of the viewport that\nthe Award component should switch\nfrom a stacked layout to a side by side\nlayout. You will need to experiment\nwith your content to see which value\nis the best fit. Can be <code>tiny</code>,\n<code>small</code>, <code>medium</code>, <code>large</code> or <code>huge</code>.</p>\n",
                    "line": 76,
                    "type": "string"
                },
                {
                    "name": "title",
                    "description": "<p>The text that appears above the\nimages and serves as the heading\nfor the Award.</p>\n",
                    "line": 159,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-award',\n  template: `\n    <sprk-stack\n      itemSpacing=\"medium\"\n      additionalClasses=\"{{ additionalClasses }}\"\n    >\n      <h2\n        sprkStackItem\n        [attr.data-id]=\"idString\"\n        class=\"\n        sprk-o-Stack__item\n        sprk-b-TypeDisplayFive\n        sprk-b-Measure sprk-b-Measure--narrow\n        sprk-u-TextAlign--center\n        sprk-o-Stack__item--center-column\"\n      >\n        {{ title }}\n      </h2>\n\n      <div sprkStackItem [ngClass]=\"getClasses()\">\n        <sprk-link\n          linkType=\"unstyled\"\n          additionalClasses=\"sprk-o-Stack__item sprk-o-Stack__item--flex@s sprk-o-Stack\"\n          [href]=\"imgOneHref\"\n          [analyticsString]=\"analyticsStringImgOne\"\n        >\n          <img\n            [ngClass]=\"getClassesImgOne()\"\n            alt=\"{{ imgOneAlt }}\"\n            src=\"{{ imgOneSrc }}\"\n          />\n        </sprk-link>\n\n        <sprk-link\n          linkType=\"unstyled\"\n          additionalClasses=\"sprk-o-Stack__item sprk-o-Stack__item--flex@s sprk-o-Stack\"\n          [href]=\"imgTwoHref\"\n          [analyticsString]=\"analyticsStringImgTwo\"\n        >\n          <img\n            [ngClass]=\"getClassesImgTwo()\"\n            alt=\"{{ imgTwoAlt }}\"\n            src=\"{{ imgTwoSrc }}\"\n          />\n        </sprk-link>\n      </div>\n\n      <sprk-toggle\n        *ngIf=\"disclaimer !== 'false'\"\n        sprkStackItem\n        additionalClasses=\"sprk-o-Stack__item--start-column\"\n        toggleType=\"base\"\n        title=\"{{ disclaimerTitle }}\"\n        analyticsString=\"{{ analyticsStringDisclaimer }}\"\n      >\n        <p class=\"sprk-b-TypeBodyFour\">{{ disclaimerCopy }}</p>\n      </sprk-toggle>\n    </sprk-stack>\n  `,\n  styles: ['']\n})\nexport class SprkAwardComponent {\n  /**\n   * The relative size of the viewport that\n   * the Award component should switch\n   * from a stacked layout to a side by side\n   * layout. You will need to experiment\n   * with your content to see which value\n   * is the best fit. Can be `tiny`,\n   * `small`, `medium`, `large` or `huge`.\n   */\n  @Input()\n  splitAt: string;\n  /**\n   * The `alt` text that will be applied\n   * to the first image.\n   */\n  @Input()\n  imgOneAlt: string;\n  /**\n   * The image `href` value that will be\n   * applied to the first image.\n   */\n  @Input()\n  imgOneHref: string;\n  /**\n   * The image `href` value that will be\n   * applied to the second image.\n   */\n  @Input()\n  imgTwoHref: string;\n  /**\n   * The `alt` text that will be applied\n   * 'to the second image.\n   */\n  @Input()\n  imgTwoAlt: string;\n  /**\n   * The image source that will be\n   * applied to the first image.\n   */\n  @Input()\n  imgOneSrc: string;\n  /**\n   * The image source that will be\n   * applied to the second image.\n   */\n  @Input()\n  imgTwoSrc: string;\n  /**\n   * The string that will be assigned to the\n   * `data-analytics` attribute of the first image.\n   */\n  @Input()\n  analyticsStringImgOne: string;\n  /**\n   * The string that will be assigned to the\n   * `data-analytics` attribute of the second image.\n   */\n  @Input()\n  analyticsStringImgTwo: string;\n  /**\n   * The string that will be assigned to the\n   * `data-analytics` attribute of\n   * the clickable disclaimer.\n   */\n  @Input()\n  analyticsStringDisclaimer: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * first image.\n   */\n  @Input()\n  additionalClassesImgOne: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * second image.\n   */\n  @Input()\n  additionalClassesImgTwo: string;\n  /**\n   * The text that appears above the\n   * images and serves as the heading\n   * for the Award.\n   */\n  @Input()\n  title: string;\n  /**\n   * The text that will be the clickable\n   * title of the disclaimer toggle.\n   */\n  @Input()\n  disclaimerTitle: string;\n  /**\n   * The text that will be inside the\n   * disclaimer toggle.\n   */\n  @Input()\n  disclaimerCopy: string;\n  /**\n   * If `false`, the disclaimer\n   * toggle will not be rendered.\n   */\n  @Input()\n  disclaimer: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = [\n      'sprk-o-Stack sprk-o-Stack--medium sprk-o-Stack__item sprk-o-Stack__item--center-column'\n    ];\n\n    // Handle the choice of item split\n    // breakpoint by adding CSS class\n    switch (this.splitAt) {\n      case 'tiny':\n        classArray.push('sprk-o-Stack--split@xs');\n        break;\n      case 'small':\n        classArray.push('sprk-o-Stack--split@s');\n        break;\n      case 'medium':\n        classArray.push('sprk-o-Stack--split@m');\n        break;\n      case 'large':\n        classArray.push('sprk-o-Stack--split@l');\n        break;\n      case 'huge':\n        classArray.push('sprk-o-Stack--split@xl');\n        break;\n      default:\n        break;\n    }\n\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getClassesImgOne(): string {\n    const classArray: string[] = [\n      'sprk-o-Stack__item sprk-o-Stack__item--center-column'\n    ];\n\n    if (this.additionalClassesImgOne) {\n      this.additionalClassesImgOne.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getClassesImgTwo(): string {\n    const classArray: string[] = [\n      'sprk-o-Stack__item sprk-o-Stack__item--center-column'\n    ];\n\n    if (this.additionalClassesImgTwo) {\n      this.additionalClassesImgTwo.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n    return classArray.join(' ');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n"
        },
        {
            "name": "SprkCardComponent",
            "id": "component-SprkCardComponent-90bb09b38f8ebcddfb8ed3e1bf7b99dc",
            "file": "projects/spark-angular/src/lib/components/sprk-card/sprk-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sprk-card",
            "styleUrls": [],
            "styles": [],
            "template": "<div\n  [ngClass]=\"getClassesCard()\"\n  *ngIf=\"cardType === 'teaser'\"\n  [attr.data-id]=\"idString\"\n>\n  <sprk-link\n    linkType=\"unstyled\"\n    *ngIf=\"media === 'img'\"\n    [href]=\"imgHref\"\n    additionalClasses=\"sprk-o-Stack__item\"\n    [analyticsString]=\"imgLinkAnalytics\"\n  >\n    <img\n      class=\"sprk-c-Card__media\"\n      [attr.alt]=\"imgAlt\"\n      [attr.src]=\"imgSrc\"\n    />\n  </sprk-link>\n\n  <div\n    [ngClass]=\"{\n      'sprk-o-Stack__item': true,\n      'sprk-c-Card__content': true,\n      'sprk-o-Stack': true,\n      'sprk-o-Stack--medium': true,\n      'sprk-u-TextAlign--center': media === 'icon'\n    }\"\n  >\n    <sprk-link\n      linkType=\"unstyled\"\n      *ngIf=\"media === 'icon'\"\n      [href]=\"iconHref\"\n      additionalClasses=\"sprk-o-Stack__item sprk-u-AbsoluteCenter\"\n      [analyticsString]=\"iconLinkAnalytics\"\n    >\n      <sprk-icon\n        [iconType]=\"iconType\"\n        [additionalClasses]=\"additionalClassesIcon\"\n      ></sprk-icon>\n    </sprk-link>\n\n    <h3 class=\"sprk-b-TypeDisplayFive sprk-o-Stack__item\">{{ title }}</h3>\n\n    <p class=\"sprk-b-TypeBodyTwo sprk-o-Stack__item\">{{ body }}</p>\n\n    <div class=\"sprk-o-Stack__item\">\n      <sprk-link\n        linkType=\"unstyled\"\n        [href]=\"ctaHref\"\n        [additionalClasses]=\"getClassesCta()\"\n        [analyticsString]=\"ctaAnalytics\"\n      >\n        {{ ctaText }}\n      </sprk-link>\n    </div>\n  </div>\n</div>\n\n<div\n  [ngClass]=\"getClassesCard()\"\n  *ngIf=\"cardType === 'base'\"\n  [attr.data-id]=\"idString\"\n>\n  <ng-content></ng-content>\n</div>\n\n<div\n  [ngClass]=\"getClassesCard()\"\n  *ngIf=\"cardType === 'teaserHeading'\"\n  [attr.data-id]=\"idString\"\n>\n  <h3\n    class=\"sprk-o-Stack__item sprk-c-Card__content sprk-b-TypeDisplayFive\"\n  >\n    {{ title }}\n  </h3>\n\n  <div\n    class=\"sprk-o-Stack__item sprk-c-Card__content sprk-o-Stack sprk-o-Stack--medium\"\n  >\n    <sprk-link\n      linkType=\"unstyled\"\n      *ngIf=\"media === 'img'\"\n      [href]=\"imgHref\"\n      additionalClasses=\"sprk-o-Stack__item\"\n      [analyticsString]=\"imgLinkAnalytics\"\n    >\n      <img [attr.alt]=\"imgAlt\" [attr.src]=\"imgSrc\" />\n    </sprk-link>\n\n    <sprk-link\n      *ngIf=\"media === 'icon'\"\n      [href]=\"iconHref\"\n      linkType=\"unstyled\"\n      additionalClasses=\"sprk-o-Stack__item sprk-o-Stack__item--center\"\n      [analyticsString]=\"iconLinkAnalytics\"\n    >\n      <sprk-icon\n        [iconType]=\"iconType\"\n        [additionalClasses]=\"additionalClassesIcon\"\n      ></sprk-icon>\n    </sprk-link>\n\n    <p class=\"sprk-b-TypeBodyTwo sprk-o-Stack__item\">{{ body }}</p>\n\n    <div class=\"sprk-o-Stack__item\">\n      <sprk-link\n        linkType=\"unstyled\"\n        [href]=\"ctaHref\"\n        [additionalClasses]=\"getClassesCta()\"\n        [analyticsString]=\"ctaAnalytics\"\n      >\n        {{ ctaText }}\n      </sprk-link>\n    </div>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\ncomponent.</p>\n",
                    "line": 229,
                    "type": "string"
                },
                {
                    "name": "additionalClassesIcon",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\nicon if the media type is icon.</p>\n",
                    "line": 151,
                    "type": "string"
                },
                {
                    "name": "additionalCtaClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\ncall-to-action.</p>\n",
                    "line": 236,
                    "type": "string"
                },
                {
                    "name": "body",
                    "description": "<p>The main content\nof the Card. Placed between\nthe title and call-to-action.</p>\n",
                    "line": 138,
                    "type": "string"
                },
                {
                    "name": "cardType",
                    "defaultValue": "'base'",
                    "description": "<p>The type of Card variant to render.\nThe available values are <code>base</code>, <code>teaser</code>, and <code>teaserHeading</code>.</p>\n",
                    "line": 131
                },
                {
                    "name": "ctaAnalytics",
                    "description": "<p>The text that will be applied to the <code>data-analytics</code> attribute\nof the call-to-action.</p>\n",
                    "line": 205,
                    "type": "string"
                },
                {
                    "name": "ctaHref",
                    "description": "<p>The <code>href</code> value for the call-to-action.</p>\n",
                    "line": 222,
                    "type": "string"
                },
                {
                    "name": "ctaText",
                    "description": "<p>The text content of the call-to-action.</p>\n",
                    "line": 199,
                    "type": "string"
                },
                {
                    "name": "ctaType",
                    "defaultValue": "'link'",
                    "description": "<p>Determines which type of call-to-action is rendered.\nThe available values are <code>link</code> and <code>button</code>.</p>\n",
                    "line": 194
                },
                {
                    "name": "iconHref",
                    "description": "<p>If the <code>media</code> input is set to <code>icon</code>, this\nis used to supply the <code>href</code> for the icon.</p>\n",
                    "line": 182,
                    "type": "string"
                },
                {
                    "name": "iconLinkAnalytics",
                    "description": "<p>The text that will be applied to the <code>data-analytics</code> attribute\nof the link surrounding the icon.</p>\n",
                    "line": 217,
                    "type": "string"
                },
                {
                    "name": "iconType",
                    "description": "<p>If the <code>media</code> input is set to <code>icon</code>, this\nis used to supply the name of the icon to use.</p>\n",
                    "line": 176,
                    "type": "string"
                },
                {
                    "name": "idString",
                    "description": "<p>The value supplied will be assigned\nto the <code>data-id</code> attribute on the\ncomponent. This is intended to be\nused as a selector for automated\ntools. This value should be unique\nper page.</p>\n",
                    "line": 246,
                    "type": "string"
                },
                {
                    "name": "imgAlt",
                    "description": "<p>If the <code>media</code> input is set to <code>image</code>,\nthis is the text that is applied to\nthe <code>alt</code> attribute of the image.</p>\n",
                    "line": 170,
                    "type": "string"
                },
                {
                    "name": "imgHref",
                    "description": "<p>If the <code>media</code> input is set to <code>img</code>, this\nis used to supply the <code>href</code> of the image.</p>\n",
                    "line": 188,
                    "type": "string"
                },
                {
                    "name": "imgLinkAnalytics",
                    "description": "<p>The text that will be applied to the <code>data-analytics</code> attribute\nof the link surrounding the image.</p>\n",
                    "line": 211,
                    "type": "string"
                },
                {
                    "name": "imgSrc",
                    "description": "<p>If the <code>media</code> input is set to <code>image</code>,\nthis is the text that will be applied to the\n<code>src</code> attribute of the image.</p>\n",
                    "line": 163,
                    "type": "string"
                },
                {
                    "name": "media",
                    "description": "<p>Determines which type of media will be rendered.\nThe available values are <code>image</code> and <code>icon</code>.</p>\n",
                    "line": 144,
                    "type": "string"
                },
                {
                    "name": "title",
                    "description": "<p>The title of the Card.</p>\n",
                    "line": 156,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-card',\n  template: `\n    <div\n      [ngClass]=\"getClassesCard()\"\n      *ngIf=\"cardType === 'teaser'\"\n      [attr.data-id]=\"idString\"\n    >\n      <sprk-link\n        linkType=\"unstyled\"\n        *ngIf=\"media === 'img'\"\n        [href]=\"imgHref\"\n        additionalClasses=\"sprk-o-Stack__item\"\n        [analyticsString]=\"imgLinkAnalytics\"\n      >\n        <img\n          class=\"sprk-c-Card__media\"\n          [attr.alt]=\"imgAlt\"\n          [attr.src]=\"imgSrc\"\n        />\n      </sprk-link>\n\n      <div\n        [ngClass]=\"{\n          'sprk-o-Stack__item': true,\n          'sprk-c-Card__content': true,\n          'sprk-o-Stack': true,\n          'sprk-o-Stack--medium': true,\n          'sprk-u-TextAlign--center': media === 'icon'\n        }\"\n      >\n        <sprk-link\n          linkType=\"unstyled\"\n          *ngIf=\"media === 'icon'\"\n          [href]=\"iconHref\"\n          additionalClasses=\"sprk-o-Stack__item sprk-u-AbsoluteCenter\"\n          [analyticsString]=\"iconLinkAnalytics\"\n        >\n          <sprk-icon\n            [iconType]=\"iconType\"\n            [additionalClasses]=\"additionalClassesIcon\"\n          ></sprk-icon>\n        </sprk-link>\n\n        <h3 class=\"sprk-b-TypeDisplayFive sprk-o-Stack__item\">{{ title }}</h3>\n\n        <p class=\"sprk-b-TypeBodyTwo sprk-o-Stack__item\">{{ body }}</p>\n\n        <div class=\"sprk-o-Stack__item\">\n          <sprk-link\n            linkType=\"unstyled\"\n            [href]=\"ctaHref\"\n            [additionalClasses]=\"getClassesCta()\"\n            [analyticsString]=\"ctaAnalytics\"\n          >\n            {{ ctaText }}\n          </sprk-link>\n        </div>\n      </div>\n    </div>\n\n    <div\n      [ngClass]=\"getClassesCard()\"\n      *ngIf=\"cardType === 'base'\"\n      [attr.data-id]=\"idString\"\n    >\n      <ng-content></ng-content>\n    </div>\n\n    <div\n      [ngClass]=\"getClassesCard()\"\n      *ngIf=\"cardType === 'teaserHeading'\"\n      [attr.data-id]=\"idString\"\n    >\n      <h3\n        class=\"sprk-o-Stack__item sprk-c-Card__content sprk-b-TypeDisplayFive\"\n      >\n        {{ title }}\n      </h3>\n\n      <div\n        class=\"sprk-o-Stack__item sprk-c-Card__content sprk-o-Stack sprk-o-Stack--medium\"\n      >\n        <sprk-link\n          linkType=\"unstyled\"\n          *ngIf=\"media === 'img'\"\n          [href]=\"imgHref\"\n          additionalClasses=\"sprk-o-Stack__item\"\n          [analyticsString]=\"imgLinkAnalytics\"\n        >\n          <img [attr.alt]=\"imgAlt\" [attr.src]=\"imgSrc\" />\n        </sprk-link>\n\n        <sprk-link\n          *ngIf=\"media === 'icon'\"\n          [href]=\"iconHref\"\n          linkType=\"unstyled\"\n          additionalClasses=\"sprk-o-Stack__item sprk-o-Stack__item--center\"\n          [analyticsString]=\"iconLinkAnalytics\"\n        >\n          <sprk-icon\n            [iconType]=\"iconType\"\n            [additionalClasses]=\"additionalClassesIcon\"\n          ></sprk-icon>\n        </sprk-link>\n\n        <p class=\"sprk-b-TypeBodyTwo sprk-o-Stack__item\">{{ body }}</p>\n\n        <div class=\"sprk-o-Stack__item\">\n          <sprk-link\n            linkType=\"unstyled\"\n            [href]=\"ctaHref\"\n            [additionalClasses]=\"getClassesCta()\"\n            [analyticsString]=\"ctaAnalytics\"\n          >\n            {{ ctaText }}\n          </sprk-link>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class SprkCardComponent {\n  /**\n   * The type of Card variant to render.\n   * The available values are `base`, `teaser`, and `teaserHeading`.\n   */\n  @Input()\n  cardType = 'base';\n  /**\n   * The main content\n   * of the Card. Placed between\n   * the title and call-to-action.\n   */\n  @Input()\n  body: string;\n  /**\n   * Determines which type of media will be rendered.\n   * The available values are `image` and `icon`.\n   */\n  @Input()\n  media: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * icon if the media type is icon.\n   */\n  @Input()\n  additionalClassesIcon: string;\n  /**\n   * The title of the Card.\n   */\n  @Input()\n  title: string;\n  /**\n   * If the `media` input is set to `image`,\n   * this is the text that will be applied to the\n   * `src` attribute of the image.\n   */\n  @Input()\n  imgSrc: string;\n  /**\n   * If the `media` input is set to `image`,\n   * this is the text that is applied to\n   * the `alt` attribute of the image.\n   */\n  @Input()\n  imgAlt: string;\n  /**\n   * If the `media` input is set to `icon`, this\n   * is used to supply the name of the icon to use.\n   */\n  @Input()\n  iconType: string;\n  /**\n   * If the `media` input is set to `icon`, this\n   * is used to supply the `href` for the icon.\n   */\n  @Input()\n  iconHref: string;\n  /**\n   * If the `media` input is set to `img`, this\n   * is used to supply the `href` of the image.\n   */\n  @Input()\n  imgHref: string;\n  /**\n   * Determines which type of call-to-action is rendered.\n   * The available values are `link` and `button`.\n   */\n  @Input()\n  ctaType = 'link';\n  /**\n   * The text content of the call-to-action.\n   */\n  @Input()\n  ctaText: string;\n  /**\n   * The text that will be applied to the `data-analytics` attribute\n   * of the call-to-action.\n   */\n  @Input()\n  ctaAnalytics: string;\n  /**\n   * The text that will be applied to the `data-analytics` attribute\n   * of the link surrounding the image.\n   */\n  @Input()\n  imgLinkAnalytics: string;\n  /**\n   * The text that will be applied to the `data-analytics` attribute\n   * of the link surrounding the icon.\n   */\n  @Input()\n  iconLinkAnalytics: string;\n  /**\n   * The `href` value for the call-to-action.\n   */\n  @Input()\n  ctaHref: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * call-to-action.\n   */\n  @Input()\n  additionalCtaClasses: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n\n  /**\n   * @ignore\n   */\n  getClassesCta(): string {\n    const ctaClassArray: string[] = [];\n\n    if (this.ctaType === 'button') {\n      ctaClassArray.push('sprk-c-Button');\n    } else {\n      ctaClassArray.push('sprk-b-Link');\n    }\n\n    if (this.additionalCtaClasses) {\n      this.additionalCtaClasses.split(' ').forEach(className => {\n        ctaClassArray.push(className);\n      });\n    }\n\n    return ctaClassArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getClassesCard(): string {\n    const classArray: string[] = ['sprk-c-Card', 'sprk-o-Stack'];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SprkCarouselComponent",
            "id": "component-SprkCarouselComponent-973ee1f321aa423e32a2d8cfd1eef1c1",
            "file": "projects/spark-angular/src/lib/components/sprk-carousel/sprk-carousel.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sprk-carousel",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"sprk-c-Carousel\" data-sprk-carousel=\"stepper-carousel-01\">\n  <div\n    class=\"\n    sprk-c-Carousel__controls\n    sprk-o-Stack sprk-o-Stack--split@xxs\n    sprk-o-Stack--center-row\n    sprk-o-Stack--center-column\"\n  >\n    <span class=\"sprk-c-Carousel__prev sprk-o-Stack__item\">\n      <sprk-icon\n        iconType=\"chevron-left-circle\"\n        additionalClasses=\"\n          sprk-c-Icon--stroke-current-color\n          sprk-c-Icon--l\"\n      >\n      </sprk-icon>\n    </span>\n\n    <div class=\"sprk-c-Carousel__frame\">\n      <ul class=\"sprk-c-Carousel__slides\">\n        <ng-content select=\"sprk-carousel-item\"></ng-content>\n      </ul>\n      <ul\n        class=\"sprk-c-Carousel__dots\"\n        data-sprk-carousel-dots=\"stepper-carousel-01\"\n      ></ul>\n    </div>\n\n    <span class=\"sprk-c-Carousel__next sprk-o-Stack__item\">\n      <sprk-icon\n        iconType=\"chevron-right-circle\"\n        additionalClasses=\"\n          sprk-c-Icon--stroke-current-color\n          sprk-c-Icon--l\"\n      >\n      </sprk-icon>\n    </span>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "line": 53,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "carouselInstance",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "ref",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "carousel",
                    "args": [
                        {
                            "name": "carouselElement",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 57,
                    "jsdoctags": [
                        {
                            "name": "carouselElement",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, AfterViewInit, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'sprk-carousel',\n  template: `\n    <div class=\"sprk-c-Carousel\" data-sprk-carousel=\"stepper-carousel-01\">\n      <div\n        class=\"\n        sprk-c-Carousel__controls\n        sprk-o-Stack sprk-o-Stack--split@xxs\n        sprk-o-Stack--center-row\n        sprk-o-Stack--center-column\"\n      >\n        <span class=\"sprk-c-Carousel__prev sprk-o-Stack__item\">\n          <sprk-icon\n            iconType=\"chevron-left-circle\"\n            additionalClasses=\"\n              sprk-c-Icon--stroke-current-color\n              sprk-c-Icon--l\"\n          >\n          </sprk-icon>\n        </span>\n\n        <div class=\"sprk-c-Carousel__frame\">\n          <ul class=\"sprk-c-Carousel__slides\">\n            <ng-content select=\"sprk-carousel-item\"></ng-content>\n          </ul>\n          <ul\n            class=\"sprk-c-Carousel__dots\"\n            data-sprk-carousel-dots=\"stepper-carousel-01\"\n          ></ul>\n        </div>\n\n        <span class=\"sprk-c-Carousel__next sprk-o-Stack__item\">\n          <sprk-icon\n            iconType=\"chevron-right-circle\"\n            additionalClasses=\"\n              sprk-c-Icon--stroke-current-color\n              sprk-c-Icon--l\"\n          >\n          </sprk-icon>\n        </span>\n      </div>\n    </div>\n  `\n})\nexport class SprkCarouselComponent implements AfterViewInit {\n  constructor(public ref: ElementRef) {\n    this.carouselInstance = {};\n  }\n\n  @Input()\n  additionalClasses: string;\n\n  carouselInstance: object;\n\n  carousel(carouselElement): any {\n    // TODO: implement\n  }\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-c-Carousel'];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  ngAfterViewInit(): void {\n    const carouselElement = this.ref.nativeElement;\n    this.carouselInstance = this.carousel(carouselElement);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "ref",
                        "type": "ElementRef"
                    }
                ],
                "line": 47,
                "jsdoctags": [
                    {
                        "name": "ref",
                        "type": "ElementRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "SprkCarouselItemComponent",
            "id": "component-SprkCarouselItemComponent-c8e38a538398352967daea1ac2e08a90",
            "file": "projects/spark-angular/src/lib/components/sprk-carousel-item/sprk-carousel-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sprk-carousel-item",
            "styleUrls": [],
            "styles": [],
            "template": "<li class=\"sprk-c-Carousel__frame-item\">\n  <img [src]=\"imageSrc\" [attr.alt]=\"altText\" />\n</li>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "altText",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "imageSrc",
                    "line": 15,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-carousel-item',\n  template: `\n    <li class=\"sprk-c-Carousel__frame-item\">\n      <img [src]=\"imageSrc\" [attr.alt]=\"altText\" />\n    </li>\n  `\n})\nexport class SprkCarouselItemComponent {\n  @Input()\n  additionalClasses: string;\n  @Input()\n  imageSrc: string;\n  @Input()\n  altText: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = [''];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SprkDictionaryComponent",
            "id": "component-SprkDictionaryComponent-c5e4e586f5b37d7e9157ff3f3e2b223c",
            "file": "projects/spark-angular/src/lib/components/sprk-dictionary/sprk-dictionary.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sprk-dictionary",
            "styleUrls": [],
            "styles": [],
            "template": "<div [ngClass]=\"getClasses()\" [attr.data-id]=\"idString\">\n  <dl class=\"sprk-c-Dictionary__keyvaluepairs\">\n    <div\n      *ngFor=\"let key of objectKeys(data)\"\n      class=\"sprk-c-Dictionary__keyvaluepair\"\n    >\n      <dt\n        class=\"sprk-c-Dictionary__key sprk-b-Label sprk-b-Label--no-input\"\n      >\n        {{ key }}\n      </dt>\n      <dd class=\"sprk-c-Dictionary__value\">{{ data[key] }}</dd>\n    </div>\n  </dl>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\ncomponent.</p>\n",
                    "line": 43,
                    "type": "string"
                },
                {
                    "name": "data",
                    "defaultValue": "{}",
                    "description": "<p>The collection of key-value pairs to be rendered\ninto the component.</p>\n",
                    "line": 29,
                    "type": "object"
                },
                {
                    "name": "dictionaryType",
                    "defaultValue": "'base'",
                    "description": "<p>Determines the variant of the dictionary component to render.\nThe only available option is <code>striped</code>.\nSupplying no value will cause the base variant to be used.</p>\n",
                    "line": 36
                },
                {
                    "name": "idString",
                    "description": "<p>The value supplied will be assigned\nto the <code>data-id</code> attribute on the\ncomponent. This is intended to be\nused as a selector for automated\ntools. This value should be unique\nper page.</p>\n",
                    "line": 53,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-dictionary',\n  template: `\n    <div [ngClass]=\"getClasses()\" [attr.data-id]=\"idString\">\n      <dl class=\"sprk-c-Dictionary__keyvaluepairs\">\n        <div\n          *ngFor=\"let key of objectKeys(data)\"\n          class=\"sprk-c-Dictionary__keyvaluepair\"\n        >\n          <dt\n            class=\"sprk-c-Dictionary__key sprk-b-Label sprk-b-Label--no-input\"\n          >\n            {{ key }}\n          </dt>\n          <dd class=\"sprk-c-Dictionary__value\">{{ data[key] }}</dd>\n        </div>\n      </dl>\n    </div>\n  `\n})\nexport class SprkDictionaryComponent {\n  /**\n   * The collection of key-value pairs to be rendered\n   * into the component.\n   */\n  @Input()\n  data: object = {};\n  /**\n   * Determines the variant of the dictionary component to render.\n   * The only available option is `striped`.\n   * Supplying no value will cause the base variant to be used.\n   */\n  @Input()\n  dictionaryType = 'base';\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  /**\n   * @ignore\n   */\n  objectKeys = Object.keys;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-c-Dictionary'];\n\n    if (this.dictionaryType === 'striped') {\n      classArray.push('sprk-c-Dictionary--striped');\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SprkDividerComponent",
            "id": "component-SprkDividerComponent-002fc29f1bebfe95d64100e35ff73dcb",
            "file": "projects/spark-angular/src/lib/components/sprk-divider/sprk-divider.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sprk-divider",
            "styleUrls": [],
            "styles": [],
            "template": "<span [ngClass]=\"getClasses()\" [attr.data-id]=\"idString\"> </span>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\ncomponent.</p>\n",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "idString",
                    "description": "<p>The value supplied will be assigned\nto the <code>data-id</code> attribute on the\ncomponent. This is intended to be\nused as a selector for automated\ntools. This value should be unique\nper page.</p>\n",
                    "line": 26,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-divider',\n  template: `\n    <span [ngClass]=\"getClasses()\" [attr.data-id]=\"idString\"> </span>\n  `\n})\nexport class SprkDividerComponent {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-c-Divider'];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SprkDropdownComponent",
            "id": "component-SprkDropdownComponent-7a47108d63c0e485b207a508d77ac1d8",
            "file": "projects/spark-angular/src/lib/components/sprk-dropdown/sprk-dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sprk-dropdown",
            "styleUrls": [],
            "styles": [],
            "template": "<div\n  [ngClass]=\"{\n    'sprk-c-MastheadMask': isOpen && dropdownType === 'mastheadSelector'\n  }\"\n>\n  <div [ngClass]=\"{ 'sprk-o-Box': dropdownType === 'mastheadSelector' }\">\n    <sprk-link\n      [additionalClasses]=\"getTriggerClasses()\"\n      ariaHasPopUp=\"true\"\n      (click)=\"toggle($event)\"\n      [idString]=\"idString\"\n      [analyticsString]=\"analyticsString\"\n      role=\"combobox\"\n    >\n      <span [ngClass]=\"getTriggerTextClasses()\">{{ triggerText }}</span>\n      <span class=\"sprk-u-ScreenReaderText\">{{ screenReaderText }}</span>\n      <sprk-icon\n        [iconType]=\"triggerIconType\"\n        additionalClasses=\"sprk-u-mls sprk-c-Icon--stroke-current-color {{\n          additionalIconClasses\n        }}\"\n      ></sprk-icon>\n    </sprk-link>\n  </div>\n\n  <div [ngClass]=\"getClasses()\" *ngIf=\"isOpen\">\n    <div\n      class=\"sprk-c-Dropdown__header\"\n      *ngIf=\"dropdownType === 'mastheadSelector' || title || selector\"\n    >\n      <h2 class=\"sprk-c-Dropdown__title sprk-b-TypeBodyTwo\" *ngIf=\"title\">\n        {{ title }}\n      </h2>\n\n      <sprk-link\n        *ngIf=\"selector && !title\"\n        linkType=\"plain\"\n        additionalClasses=\"sprk-o-Stack sprk-o-Stack--split@xxs sprk-o-Stack--center-column sprk-u-Width-100\"\n        ariaHasPopUp=\"true\"\n        (click)=\"toggle($event)\"\n      >\n        <span\n          class=\"sprk-c-Dropdown__title sprk-b-TypeBodyTwo sprk-o-Stack__item sprk-o-Stack__item--flex@xxs\"\n          >{{ selector }}</span\n        >\n        <sprk-icon\n          [iconType]=\"triggerIconType\"\n          additionalClasses=\"sprk-c-Icon--stroke-current-color sprk-u-mls sprk-c-Icon--toggle sprk-Stack__item {{\n            additionalIconClasses\n          }}\"\n        ></sprk-icon>\n      </sprk-link>\n    </div>\n\n    <ul class=\"sprk-c-Dropdown__links\">\n      <li\n        class=\"sprk-c-Dropdown__item\"\n        *ngFor=\"let choice of choices; let i = index\"\n        [attr.data-sprk-dropdown-choice-index]=\"i\"\n        (click)=\"choiceClick($event)\"\n      >\n        <div *ngIf=\"choice.content; then content; else link\"></div>\n        <ng-template #link>\n          <sprk-link\n            linkType=\"unstyled\"\n            [href]=\"choice.href\"\n            additionalClasses=\"sprk-c-Dropdown__link {{\n              choice.active && 'sprk-c-Dropdown__link--active'\n            }}\"\n            role=\"option\"\n            >{{ choice.text }}\n          </sprk-link>\n        </ng-template>\n        <ng-template #content>\n          <sprk-link\n            linkType=\"unstyled\"\n            [href]=\"choice.href\"\n            additionalClasses=\"sprk-c-Dropdown__link {{\n              choice.active && 'sprk-c-Dropdown__link--active'\n            }}\"\n            role=\"option\"\n          >\n            <p class=\"sprk-b-TypeBodyOne\">{{ choice.content.title }}</p>\n            <p>{{ choice.content.infoLine1 }}</p>\n            <p>{{ choice.content.infoLine2 }}</p>\n          </sprk-link>\n        </ng-template>\n      </li>\n    </ul>\n    <ng-content select=\"[sprkDropdownFooter]\"></ng-content>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\ncomponent.</p>\n",
                    "line": 119,
                    "type": "string"
                },
                {
                    "name": "additionalIconClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\nicon.</p>\n",
                    "line": 126,
                    "type": "string"
                },
                {
                    "name": "additionalTriggerClasses",
                    "description": "<p>Expects a space separated string of\nclasses to be added to the trigger link element.</p>\n",
                    "line": 132,
                    "type": "string"
                },
                {
                    "name": "additionalTriggerTextClasses",
                    "description": "<p>Expects a space separated string of\nclasses to be added to the trigger text.</p>\n",
                    "line": 138,
                    "type": "string"
                },
                {
                    "name": "analyticsString",
                    "description": "<p>The value supplied will be assigned to the\n<code>data-analytics</code> attribute on the component.\nIntended for an outside\nlibrary to capture data.</p>\n",
                    "line": 156,
                    "type": "string"
                },
                {
                    "name": "choices",
                    "description": "<p>Expects an array of choice objects.</p>\n",
                    "line": 179,
                    "type": "any[]"
                },
                {
                    "name": "dropdownType",
                    "defaultValue": "'base'",
                    "description": "<p>The variant of the Dropdown to render.</p>\n",
                    "line": 112
                },
                {
                    "name": "idString",
                    "description": "<p>The value supplied will be assigned\nto the <code>data-id</code> attribute on the\ncomponent. This is intended to be\nused as a selector for automated\ntools. This value should be unique\nper page.</p>\n",
                    "line": 148,
                    "type": "string"
                },
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "description": "<p>If <code>true</code>, the Dropdown will be open when rendered.</p>\n",
                    "line": 161
                },
                {
                    "name": "screenReaderText",
                    "description": "<p>The value supplied will be visually hidden\ninside the trigger. Userful\nfor when title is empty,\nand only <code>triggerIconType</code> is supplied.</p>\n",
                    "line": 200,
                    "type": "string"
                },
                {
                    "name": "selector",
                    "description": "<p>The value supplied will be assigned to\nthe <code>.Dropdown__title</code> text.\nShould be used if using the <code>mastheadSelector</code> type.</p>\n",
                    "line": 174,
                    "type": "string"
                },
                {
                    "name": "title",
                    "description": "<p>The value supplied will be displayed\nin a box above the choices.</p>\n",
                    "line": 167,
                    "type": "string"
                },
                {
                    "name": "triggerIconType",
                    "description": "<p>If supplied, will render the icon\nto the right of the trigger text.</p>\n",
                    "line": 185,
                    "type": "string"
                },
                {
                    "name": "triggerText",
                    "description": "<p>The text that is initially rendered to the trigger.\nIf <code>dropdownType</code> is <code>informational</code>,\nclicking on a choice will change the trigger text.</p>\n",
                    "line": 192,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "choiceMade",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>When the <code>dropdownType</code> is\n  <code>informational</code> and a\nuser clicks on a choice from\nthe menu, the <code>choiceMade</code> event is\nemitted from the Dropdown and it\ncontains the value of the clicked choice.</p>\n",
                    "line": 210,
                    "type": "EventEmitter<string>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:click",
                    "args": [
                        {
                            "name": "event",
                            "type": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 223
                },
                {
                    "name": "document:focusin",
                    "args": [
                        {
                            "name": "event",
                            "type": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 233
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  Output,\n  ElementRef,\n  HostListener,\n  EventEmitter\n} from '@angular/core';\n\n@Component({\n  selector: 'sprk-dropdown',\n  template: `\n    <div\n      [ngClass]=\"{\n        'sprk-c-MastheadMask': isOpen && dropdownType === 'mastheadSelector'\n      }\"\n    >\n      <div [ngClass]=\"{ 'sprk-o-Box': dropdownType === 'mastheadSelector' }\">\n        <sprk-link\n          [additionalClasses]=\"getTriggerClasses()\"\n          ariaHasPopUp=\"true\"\n          (click)=\"toggle($event)\"\n          [idString]=\"idString\"\n          [analyticsString]=\"analyticsString\"\n          role=\"combobox\"\n        >\n          <span [ngClass]=\"getTriggerTextClasses()\">{{ triggerText }}</span>\n          <span class=\"sprk-u-ScreenReaderText\">{{ screenReaderText }}</span>\n          <sprk-icon\n            [iconType]=\"triggerIconType\"\n            additionalClasses=\"sprk-u-mls sprk-c-Icon--stroke-current-color {{\n              additionalIconClasses\n            }}\"\n          ></sprk-icon>\n        </sprk-link>\n      </div>\n\n      <div [ngClass]=\"getClasses()\" *ngIf=\"isOpen\">\n        <div\n          class=\"sprk-c-Dropdown__header\"\n          *ngIf=\"dropdownType === 'mastheadSelector' || title || selector\"\n        >\n          <h2 class=\"sprk-c-Dropdown__title sprk-b-TypeBodyTwo\" *ngIf=\"title\">\n            {{ title }}\n          </h2>\n\n          <sprk-link\n            *ngIf=\"selector && !title\"\n            linkType=\"plain\"\n            additionalClasses=\"sprk-o-Stack sprk-o-Stack--split@xxs sprk-o-Stack--center-column sprk-u-Width-100\"\n            ariaHasPopUp=\"true\"\n            (click)=\"toggle($event)\"\n          >\n            <span\n              class=\"sprk-c-Dropdown__title sprk-b-TypeBodyTwo sprk-o-Stack__item sprk-o-Stack__item--flex@xxs\"\n              >{{ selector }}</span\n            >\n            <sprk-icon\n              [iconType]=\"triggerIconType\"\n              additionalClasses=\"sprk-c-Icon--stroke-current-color sprk-u-mls sprk-c-Icon--toggle sprk-Stack__item {{\n                additionalIconClasses\n              }}\"\n            ></sprk-icon>\n          </sprk-link>\n        </div>\n\n        <ul class=\"sprk-c-Dropdown__links\">\n          <li\n            class=\"sprk-c-Dropdown__item\"\n            *ngFor=\"let choice of choices; let i = index\"\n            [attr.data-sprk-dropdown-choice-index]=\"i\"\n            (click)=\"choiceClick($event)\"\n          >\n            <div *ngIf=\"choice.content; then content; else link\"></div>\n            <ng-template #link>\n              <sprk-link\n                linkType=\"unstyled\"\n                [href]=\"choice.href\"\n                additionalClasses=\"sprk-c-Dropdown__link {{\n                  choice.active && 'sprk-c-Dropdown__link--active'\n                }}\"\n                role=\"option\"\n                >{{ choice.text }}\n              </sprk-link>\n            </ng-template>\n            <ng-template #content>\n              <sprk-link\n                linkType=\"unstyled\"\n                [href]=\"choice.href\"\n                additionalClasses=\"sprk-c-Dropdown__link {{\n                  choice.active && 'sprk-c-Dropdown__link--active'\n                }}\"\n                role=\"option\"\n              >\n                <p class=\"sprk-b-TypeBodyOne\">{{ choice.content.title }}</p>\n                <p>{{ choice.content.infoLine1 }}</p>\n                <p>{{ choice.content.infoLine2 }}</p>\n              </sprk-link>\n            </ng-template>\n          </li>\n        </ul>\n        <ng-content select=\"[sprkDropdownFooter]\"></ng-content>\n      </div>\n    </div>\n  `\n})\nexport class SprkDropdownComponent {\n  /**\n   * The variant of the Dropdown to render.\n   */\n  @Input()\n  dropdownType = 'base';\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * icon.\n   */\n  @Input()\n  additionalIconClasses: string;\n  /**\n   * Expects a space separated string of\n   * classes to be added to the trigger link element.\n   */\n  @Input()\n  additionalTriggerClasses: string;\n  /**\n   * Expects a space separated string of\n   * classes to be added to the trigger text.\n   */\n  @Input()\n  additionalTriggerTextClasses: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the component.\n   * Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsString: string;\n  /**\n   * If `true`, the Dropdown will be open when rendered.\n   */\n  @Input()\n  isOpen = false;\n  /**\n   * The value supplied will be displayed\n   * in a box above the choices.\n   */\n  @Input()\n  title: string;\n  /**\n   * The value supplied will be assigned to\n   * the `.Dropdown__title` text.\n   * Should be used if using the `mastheadSelector` type.\n   */\n  @Input()\n  selector: string;\n  /**\n   * Expects an array of choice objects.\n   */\n  @Input()\n  choices: any[];\n  /**\n   * If supplied, will render the icon\n   * to the right of the trigger text.\n   */\n  @Input()\n  triggerIconType: string;\n  /**\n   * The text that is initially rendered to the trigger.\n   * If `dropdownType` is `informational`,\n   * clicking on a choice will change the trigger text.\n   */\n  @Input()\n  triggerText: string;\n  /**\n   * The value supplied will be visually hidden\n   * inside the trigger. Userful\n   * for when title is empty,\n   * and only `triggerIconType` is supplied.\n   */\n  @Input()\n  screenReaderText: string;\n  /**\n   * When the `dropdownType` is\n   *  `informational` and a\n   * user clicks on a choice from\n   * the menu, the `choiceMade` event is\n   * emitted from the Dropdown and it\n   * contains the value of the clicked choice.\n   */\n  @Output()\n  choiceMade: EventEmitter<string> = new EventEmitter();\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {}\n  /**\n   * @ignore\n   */\n  toggle(event): void {\n    this.isOpen = !this.isOpen;\n  }\n\n  @HostListener('document:click', ['$event'])\n  onClick(event): void {\n    if (\n      !this.ref.nativeElement.contains(event.target) ||\n      event.target.classList.contains('sprk-c-MastheadMask')\n    ) {\n      this.hideDropdown();\n    }\n  }\n\n  @HostListener('document:focusin', ['$event'])\n  onFocusin(event): void {\n    /* istanbul ignore else: angular focus event isnt setting e.target */\n    if (\n      !this.ref.nativeElement.contains(event.target) ||\n      event.target.classList.contains('sprk-c-MastheadMask')\n    ) {\n      this.hideDropdown();\n    }\n  }\n  /**\n   * @ignore\n   */\n  choiceClick(event) {\n    this.clearActiveChoices();\n    const choiceIndex = event.currentTarget.getAttribute(\n      'data-sprk-dropdown-choice-index'\n    );\n    const clickedChoice = this.choices[choiceIndex];\n    if (\n      this.dropdownType === 'informational' ||\n      this.dropdownType === 'mastheadSelector'\n    ) {\n      this.setActiveChoice(event);\n      this.updateTriggerText(event);\n    }\n    this.hideDropdown();\n    this.choiceMade.emit(clickedChoice['value']);\n  }\n  /**\n   * @ignore\n   */\n  setActiveChoice(event): void {\n    const choiceIndex = event.currentTarget.getAttribute(\n      'data-sprk-dropdown-choice-index'\n    );\n    this.choices[choiceIndex]['active'] = true;\n  }\n  /**\n   * @ignore\n   */\n  updateTriggerText(event): void {\n    const choiceIndex = event.currentTarget.getAttribute(\n      'data-sprk-dropdown-choice-index'\n    );\n    this.triggerText = this.choices[choiceIndex]['value'];\n  }\n\n  /**\n   * @ignore\n   */\n  clearActiveChoices(): void {\n    this.choices.forEach((choice: object) => {\n      choice['active'] = false;\n    });\n  }\n\n  /**\n   * @ignore\n   */\n  hideDropdown(): void {\n    this.isOpen = false;\n  }\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-c-Dropdown'];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getTriggerClasses(): string {\n    const classArray: string[] = [];\n\n    if (this.additionalTriggerClasses) {\n      this.additionalTriggerClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getTriggerTextClasses(): string {\n    const classArray: string[] = [''];\n\n    if (this.additionalTriggerTextClasses) {\n      this.additionalTriggerTextClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SprkFooterComponent",
            "id": "component-SprkFooterComponent-cd1a056102db439351a5065a0ecd5bbd",
            "file": "projects/spark-angular/src/lib/components/sprk-footer/sprk-footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sprk-footer",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"sprk-o-Box sprk-o-Box--large sprk-u-BackgroundColor--gray\">\n  <footer\n    [ngClass]=\"getClasses()\"\n    role=\"contentinfo\"\n    [attr.data-id]=\"idString\"\n  >\n    <div\n      class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--medium sprk-o-Stack--split@m\"\n    >\n      <div\n        *ngIf=\"globalLinks\"\n        class=\"sprk-o-Stack__item sprk-o-Stack__item--three-tenths@m sprk-o-Stack sprk-o-Stack--misc-b sprk-o-Box sprk-u-prh\"\n      >\n        <h3 class=\"sprk-o-Stack__item sprk-b-TypeBodyOne\">\n          {{ globalHeading }}\n        </h3>\n\n        <div\n          *ngFor=\"let item of globalLinks\"\n          class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--medium\"\n        >\n          <div class=\"sprk-o-Stack__item\">\n            <sprk-link\n              linkType=\"plain\"\n              href=\"{{ item.href }}\"\n              analyticsString=\"{{ item.analytics }}\"\n            >\n              <sprk-icon\n                *ngIf=\"item.icon\"\n                iconType=\"{{ item.icon }}\"\n                additionalClasses=\"{{ item.iconCSS }}\"\n              ></sprk-icon>\n              <span *ngIf=\"item.icon\" class=\"sprk-u-ScreenReaderText\">{{\n                item.iconScreenReaderText\n              }}</span>\n              <img\n                *ngIf=\"item.imgSrc\"\n                src=\"{{ item.imgSrc }}\"\n                alt=\"{{ item.imgAlt }}\"\n                class=\"{{ item.imgCSS }}\"\n              />\n            </sprk-link>\n          </div>\n\n          <p class=\"sprk-o-Stack__item sprk-b-TypeBodyFour\">\n            {{ item.text }}\n          </p>\n        </div>\n      </div>\n\n      <div\n        class=\"sprk-o-Stack__item sprk-o-Stack__item--seven-tenths@m sprk-o-Stack sprk-o-Stack--medium\"\n      >\n        <div\n          *ngIf=\"localLinks\"\n          class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--medium sprk-o-Stack--split@m\"\n        >\n          <div\n            *ngFor=\"let item of localLinks\"\n            class=\"sprk-o-Stack__item sprk-o-Stack__item--third@m sprk-o-Box sprk-u-PaddingRight--a sprk-o-Stack sprk-o-Stack--large\"\n          >\n            <h3 class=\"sprk-o-Stack__item sprk-b-TypeBodyOne\">\n              {{ item.heading }}\n            </h3>\n\n            <ul\n              class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--misc-a sprk-b-List sprk-b-List--bare\"\n            >\n              <li\n                class=\"sprk-o-Stack__item\"\n                *ngFor=\"let link of item.links\"\n              >\n                <sprk-link\n                  linkType=\"simple\"\n                  additionalClasses=\"sprk-u-FontWeight--normal\"\n                  href=\"{{ link.href }}\"\n                >\n                  {{ link.text }}\n                </sprk-link>\n              </li>\n            </ul>\n          </div>\n        </div>\n\n        <div\n          *ngIf=\"socialLinks\"\n          class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--large sprk-o-Box\"\n        >\n          <h3 class=\"sprk-o-Stack__item sprk-b-TypeBodyOne\">\n            {{ connectHeading }}\n          </h3>\n\n          <div\n            class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--large sprk-o-Stack--split@m\"\n          >\n            <ul\n              *ngIf=\"socialLinks\"\n              class=\"\n                sprk-o-Stack__item\n                sprk-o-Stack__item--flex@m\n                sprk-o-Stack\n                sprk-o-Stack--split@xxs\n                sprk-o-Stack--medium\n                sprk-b-List\n                sprk-b-List--bare\"\n            >\n              <li\n                *ngFor=\"let item of socialLinks\"\n                class=\"sprk-o-Stack__item\"\n              >\n                <sprk-link\n                  linkType=\"plain\"\n                  href=\"{{ item.href }}\"\n                  analyticsString=\"{{ item.analytics }}\"\n                >\n                  <sprk-icon\n                    *ngIf=\"item.icon\"\n                    iconType=\"{{ item.icon }}\"\n                    additionalClasses=\"{{ item.iconCSS }}\"\n                  ></sprk-icon>\n                  <span *ngIf=\"item.icon\" class=\"sprk-u-ScreenReaderText\">{{\n                    item.iconScreenReaderText\n                  }}</span>\n                </sprk-link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <span\n      class=\"sprk-c-Divider sprk-u-mvn sprk-u-mhm\"\n      data-id=\"divider-1\"\n    ></span>\n\n    <div\n      class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--misc-b sprk-o-Box sprk-u-PaddingTop--b\"\n    >\n      <div\n        *ngIf=\"awards\"\n        class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--large\"\n      >\n        <h3 class=\"sprk-o-Stack__item sprk-b-TypeBodyOne\">\n          {{ awardsHeading }}\n        </h3>\n\n        <div\n          class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--medium sprk-o-Stack--split@s sprk-u-mbm\"\n        >\n          <div class=\"sprk-o-Stack__item\" *ngFor=\"let award of awards\">\n            <sprk-link\n              additionalClasses=\"sprk-o-Stack__item\"\n              href=\"{{ award.href }}\"\n              analyticsString=\"{{ award.analytics }}\"\n            >\n              <img\n                *ngIf=\"award.imgSrc\"\n                src=\"{{ award.imgSrc }}\"\n                alt=\"{{ award.imgAlt }}\"\n                class=\"{{ award.imgCSS }}\"\n              />\n            </sprk-link>\n          </div>\n        </div>\n\n        <div\n          *ngFor=\"let toggle of disclaimerToggle\"\n          class=\"sprk-o-Stack__item\"\n        >\n          <sprk-toggle\n            title=\"{{ toggle.title }}\"\n            analyticsString=\"{{ toggle.analytics }}\"\n            iconClass=\"sprk-c-Icon--stroke-current-color\"\n            titleFontClass=\"sprk-b-TypeBodyFour\"\n          >\n            <p class=\"sprk-b-TypeBodyFour\">{{ toggle.body }}</p>\n          </sprk-toggle>\n        </div>\n      </div>\n\n      <div\n        *ngIf=\"disclaimerText\"\n        class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--large\"\n      >\n        <p\n          *ngFor=\"let disclaimer of disclaimerText\"\n          class=\"sprk-o-Stack__item sprk-b-TypeBodyFour\"\n        >\n          {{ disclaimer.text }}\n        </p>\n      </div>\n\n      <ul\n        *ngIf=\"badgeLinks\"\n        class=\"\n          sprk-o-Stack__item\n          sprk-o-Stack__item--flex@m\n          sprk-o-Stack\n          sprk-o-Stack--split@xxs\n          sprk-o-Stack--medium\n          sprk-b-List\n          sprk-b-List--bare\"\n      >\n        <li *ngFor=\"let item of badgeLinks\" class=\"sprk-o-Stack__item\">\n          <sprk-link\n            linkType=\"plain\"\n            href=\"{{ item.href }}\"\n            analyticsString=\"{{ item.analytics }}\"\n          >\n            <sprk-icon\n              *ngIf=\"item.icon\"\n              iconType=\"{{ item.icon }}\"\n              additionalClasses=\"{{ item.iconCSS }}\"\n            ></sprk-icon>\n            <span *ngIf=\"item.icon\" class=\"sprk-u-ScreenReaderText\">{{\n              item.iconScreenReaderText\n            }}</span>\n          </sprk-link>\n        </li>\n      </ul>\n    </div>\n  </footer>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\ncomponent.</p>\n",
                    "line": 239,
                    "type": "string"
                },
                {
                    "name": "awards",
                    "description": "<p>Array of objects to build the\nawards in the &quot;Awards&quot;.</p>\n",
                    "line": 286,
                    "type": "object[]"
                },
                {
                    "name": "awardsHeading",
                    "description": "<p>The heading for the &quot;Awards&quot; section.</p>\n",
                    "line": 259,
                    "type": "string"
                },
                {
                    "name": "badgeLinks",
                    "description": "<p>Array of objects to build the\nicon links in the icon sectin in the bottom\nof the Footer.</p>\n",
                    "line": 293,
                    "type": "object[]"
                },
                {
                    "name": "connectHeading",
                    "description": "<p>The heading for the &quot;Connect With Us&quot; section.</p>\n",
                    "line": 264,
                    "type": "string"
                },
                {
                    "name": "disclaimerText",
                    "description": "<p>Array of objects\nto build disclaimer text in the bottom\nof the Footer.</p>\n",
                    "line": 300,
                    "type": "object[]"
                },
                {
                    "name": "disclaimerToggle",
                    "description": "<p>Array of objects to build\nthe disclamer toggle(s) in\nthe bottom of the Footer.</p>\n",
                    "line": 307,
                    "type": "object[]"
                },
                {
                    "name": "globalHeading",
                    "description": "<p>The heading for the &quot;Global&quot; section.</p>\n",
                    "line": 254,
                    "type": "string"
                },
                {
                    "name": "globalLinks",
                    "description": "<p>Array of objects to build the links in the &quot;Global&quot; section.</p>\n",
                    "line": 269,
                    "type": "object[]"
                },
                {
                    "name": "idString",
                    "description": "<p>The value supplied will be assigned\nto the <code>data-id</code> attribute on the\ncomponent. This is intended to be\nused as a selector for automated\ntools. This value should be unique\nper page.</p>\n",
                    "line": 249,
                    "type": "string"
                },
                {
                    "name": "localLinks",
                    "description": "<p>Array of objects to build the links in the &quot;Site Links&quot; section.</p>\n",
                    "line": 274,
                    "type": "object[]"
                },
                {
                    "name": "socialLinks",
                    "description": "<p>Array of objects to build the\nicon links in the &quot;Connect With Us section&quot;.</p>\n",
                    "line": 280,
                    "type": "object[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-footer',\n  template: `\n    <div class=\"sprk-o-Box sprk-o-Box--large sprk-u-BackgroundColor--gray\">\n      <footer\n        [ngClass]=\"getClasses()\"\n        role=\"contentinfo\"\n        [attr.data-id]=\"idString\"\n      >\n        <div\n          class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--medium sprk-o-Stack--split@m\"\n        >\n          <div\n            *ngIf=\"globalLinks\"\n            class=\"sprk-o-Stack__item sprk-o-Stack__item--three-tenths@m sprk-o-Stack sprk-o-Stack--misc-b sprk-o-Box sprk-u-prh\"\n          >\n            <h3 class=\"sprk-o-Stack__item sprk-b-TypeBodyOne\">\n              {{ globalHeading }}\n            </h3>\n\n            <div\n              *ngFor=\"let item of globalLinks\"\n              class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--medium\"\n            >\n              <div class=\"sprk-o-Stack__item\">\n                <sprk-link\n                  linkType=\"plain\"\n                  href=\"{{ item.href }}\"\n                  analyticsString=\"{{ item.analytics }}\"\n                >\n                  <sprk-icon\n                    *ngIf=\"item.icon\"\n                    iconType=\"{{ item.icon }}\"\n                    additionalClasses=\"{{ item.iconCSS }}\"\n                  ></sprk-icon>\n                  <span *ngIf=\"item.icon\" class=\"sprk-u-ScreenReaderText\">{{\n                    item.iconScreenReaderText\n                  }}</span>\n                  <img\n                    *ngIf=\"item.imgSrc\"\n                    src=\"{{ item.imgSrc }}\"\n                    alt=\"{{ item.imgAlt }}\"\n                    class=\"{{ item.imgCSS }}\"\n                  />\n                </sprk-link>\n              </div>\n\n              <p class=\"sprk-o-Stack__item sprk-b-TypeBodyFour\">\n                {{ item.text }}\n              </p>\n            </div>\n          </div>\n\n          <div\n            class=\"sprk-o-Stack__item sprk-o-Stack__item--seven-tenths@m sprk-o-Stack sprk-o-Stack--medium\"\n          >\n            <div\n              *ngIf=\"localLinks\"\n              class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--medium sprk-o-Stack--split@m\"\n            >\n              <div\n                *ngFor=\"let item of localLinks\"\n                class=\"sprk-o-Stack__item sprk-o-Stack__item--third@m sprk-o-Box sprk-u-PaddingRight--a sprk-o-Stack sprk-o-Stack--large\"\n              >\n                <h3 class=\"sprk-o-Stack__item sprk-b-TypeBodyOne\">\n                  {{ item.heading }}\n                </h3>\n\n                <ul\n                  class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--misc-a sprk-b-List sprk-b-List--bare\"\n                >\n                  <li\n                    class=\"sprk-o-Stack__item\"\n                    *ngFor=\"let link of item.links\"\n                  >\n                    <sprk-link\n                      linkType=\"simple\"\n                      additionalClasses=\"sprk-u-FontWeight--normal\"\n                      href=\"{{ link.href }}\"\n                    >\n                      {{ link.text }}\n                    </sprk-link>\n                  </li>\n                </ul>\n              </div>\n            </div>\n\n            <div\n              *ngIf=\"socialLinks\"\n              class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--large sprk-o-Box\"\n            >\n              <h3 class=\"sprk-o-Stack__item sprk-b-TypeBodyOne\">\n                {{ connectHeading }}\n              </h3>\n\n              <div\n                class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--large sprk-o-Stack--split@m\"\n              >\n                <ul\n                  *ngIf=\"socialLinks\"\n                  class=\"\n                    sprk-o-Stack__item\n                    sprk-o-Stack__item--flex@m\n                    sprk-o-Stack\n                    sprk-o-Stack--split@xxs\n                    sprk-o-Stack--medium\n                    sprk-b-List\n                    sprk-b-List--bare\"\n                >\n                  <li\n                    *ngFor=\"let item of socialLinks\"\n                    class=\"sprk-o-Stack__item\"\n                  >\n                    <sprk-link\n                      linkType=\"plain\"\n                      href=\"{{ item.href }}\"\n                      analyticsString=\"{{ item.analytics }}\"\n                    >\n                      <sprk-icon\n                        *ngIf=\"item.icon\"\n                        iconType=\"{{ item.icon }}\"\n                        additionalClasses=\"{{ item.iconCSS }}\"\n                      ></sprk-icon>\n                      <span *ngIf=\"item.icon\" class=\"sprk-u-ScreenReaderText\">{{\n                        item.iconScreenReaderText\n                      }}</span>\n                    </sprk-link>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <span\n          class=\"sprk-c-Divider sprk-u-mvn sprk-u-mhm\"\n          data-id=\"divider-1\"\n        ></span>\n\n        <div\n          class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--misc-b sprk-o-Box sprk-u-PaddingTop--b\"\n        >\n          <div\n            *ngIf=\"awards\"\n            class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--large\"\n          >\n            <h3 class=\"sprk-o-Stack__item sprk-b-TypeBodyOne\">\n              {{ awardsHeading }}\n            </h3>\n\n            <div\n              class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--medium sprk-o-Stack--split@s sprk-u-mbm\"\n            >\n              <div class=\"sprk-o-Stack__item\" *ngFor=\"let award of awards\">\n                <sprk-link\n                  additionalClasses=\"sprk-o-Stack__item\"\n                  href=\"{{ award.href }}\"\n                  analyticsString=\"{{ award.analytics }}\"\n                >\n                  <img\n                    *ngIf=\"award.imgSrc\"\n                    src=\"{{ award.imgSrc }}\"\n                    alt=\"{{ award.imgAlt }}\"\n                    class=\"{{ award.imgCSS }}\"\n                  />\n                </sprk-link>\n              </div>\n            </div>\n\n            <div\n              *ngFor=\"let toggle of disclaimerToggle\"\n              class=\"sprk-o-Stack__item\"\n            >\n              <sprk-toggle\n                title=\"{{ toggle.title }}\"\n                analyticsString=\"{{ toggle.analytics }}\"\n                iconClass=\"sprk-c-Icon--stroke-current-color\"\n                titleFontClass=\"sprk-b-TypeBodyFour\"\n              >\n                <p class=\"sprk-b-TypeBodyFour\">{{ toggle.body }}</p>\n              </sprk-toggle>\n            </div>\n          </div>\n\n          <div\n            *ngIf=\"disclaimerText\"\n            class=\"sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--large\"\n          >\n            <p\n              *ngFor=\"let disclaimer of disclaimerText\"\n              class=\"sprk-o-Stack__item sprk-b-TypeBodyFour\"\n            >\n              {{ disclaimer.text }}\n            </p>\n          </div>\n\n          <ul\n            *ngIf=\"badgeLinks\"\n            class=\"\n              sprk-o-Stack__item\n              sprk-o-Stack__item--flex@m\n              sprk-o-Stack\n              sprk-o-Stack--split@xxs\n              sprk-o-Stack--medium\n              sprk-b-List\n              sprk-b-List--bare\"\n          >\n            <li *ngFor=\"let item of badgeLinks\" class=\"sprk-o-Stack__item\">\n              <sprk-link\n                linkType=\"plain\"\n                href=\"{{ item.href }}\"\n                analyticsString=\"{{ item.analytics }}\"\n              >\n                <sprk-icon\n                  *ngIf=\"item.icon\"\n                  iconType=\"{{ item.icon }}\"\n                  additionalClasses=\"{{ item.iconCSS }}\"\n                ></sprk-icon>\n                <span *ngIf=\"item.icon\" class=\"sprk-u-ScreenReaderText\">{{\n                  item.iconScreenReaderText\n                }}</span>\n              </sprk-link>\n            </li>\n          </ul>\n        </div>\n      </footer>\n    </div>\n  `\n})\nexport class SprkFooterComponent {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  /**\n   * The heading for the \"Global\" section.\n   */\n  @Input()\n  globalHeading: string;\n  /**\n   * The heading for the \"Awards\" section.\n   */\n  @Input()\n  awardsHeading: string;\n  /**\n   * The heading for the \"Connect With Us\" section.\n   */\n  @Input()\n  connectHeading: string;\n  /**\n   * Array of objects to build the links in the \"Global\" section.\n   */\n  @Input()\n  globalLinks: object[];\n  /**\n   * Array of objects to build the links in the \"Site Links\" section.\n   */\n  @Input()\n  localLinks: object[];\n  /**\n   * Array of objects to build the\n   * icon links in the \"Connect With Us section\".\n   */\n  @Input()\n  socialLinks: object[];\n  /**\n   * Array of objects to build the\n   * awards in the \"Awards\".\n   */\n  @Input()\n  awards: object[];\n  /**\n   * Array of objects to build the\n   * icon links in the icon sectin in the bottom\n   * of the Footer.\n   */\n  @Input()\n  badgeLinks: object[];\n  /**\n   * Array of objects\n   * to build disclaimer text in the bottom\n   * of the Footer.\n   */\n  @Input()\n  disclaimerText: object[];\n  /**\n   * Array of objects to build\n   * the disclamer toggle(s) in\n   * the bottom of the Footer.\n   */\n  @Input()\n  disclaimerToggle: object[];\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = [\n      'sprk-o-CenteredColumn sprk-o-Stack sprk-o-Stack--misc-b'\n    ];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SprkHighlightBoardComponent",
            "id": "component-SprkHighlightBoardComponent-706f4f560c7984a7cad6274f458a60ea",
            "file": "projects/spark-angular/src/lib/components/sprk-highlight-board/sprk-highlight-board.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sprk-highlight-board",
            "styleUrls": [],
            "styles": [],
            "template": "<div [ngClass]=\"getClasses()\" [attr.data-id]=\"idString\">\n  <img\n    *ngIf=\"type !== 'noImage'\"\n    class=\"sprk-c-HighlightBoard__image\"\n    src=\"{{ imgSrc }}\"\n    alt=\"{{ imgAlt }}\"\n  />\n\n  <sprk-stack\n    sprkStackItem\n    itemSpacing=\"large\"\n    additionalClasses=\"sprk-c-HighlightBoard__content\"\n  >\n    <h1\n      sprkStackItem\n      [ngClass]=\"{\n        'sprk-b-TypeDisplayTwo': type === 'noImage',\n        'sprk-b-TypeDisplayOne': type !== 'noImage',\n        'sprk-c-HighlightBoard__heading': true\n      }\"\n    >\n      {{ heading }}\n    </h1>\n\n    <sprk-stack\n      sprkStackItem\n      *ngIf=\"ctaText\"\n      itemSpacing=\"medium\"\n      splitAt=\"tiny\"\n      additionalClasses=\"sprk-o-Stack--center-column {{ centerBtns }}\"\n    >\n      <div sprkStackItem class=\"sprk-c-HighlightBoard__cta\">\n        <sprk-link\n          linkType=\"unstyled\"\n          [href]=\"ctaHref\"\n          additionalClasses=\"sprk-c-Button sprk-c-Button--primary sprk-c-Button--full@sm\"\n          [analyticsString]=\"analyticsStringCta\"\n        >\n          {{ ctaText }}\n        </sprk-link>\n      </div>\n\n      <div\n        sprkStackItem\n        *ngIf=\"ctaText2\"\n        class=\"sprk-c-HighlightBoard__cta\"\n      >\n        <sprk-link\n          linkType=\"unstyled\"\n          [href]=\"ctaHref2\"\n          additionalClasses=\"sprk-c-Button sprk-c-Button--secondary sprk-c-Button--full@sm\"\n          [analyticsString]=\"analyticsStringCta2\"\n        >\n          {{ ctaText2 }}\n        </sprk-link>\n      </div>\n    </sprk-stack>\n  </sprk-stack>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\ncomponent.</p>\n",
                    "line": 131,
                    "type": "string"
                },
                {
                    "name": "analyticsStringCta",
                    "description": "<p>The value supplied will be assigned to\nthe <code>data-analytics</code> attribute on the call-to-action.\nIntended for an outside library to capture data.</p>\n",
                    "line": 116,
                    "type": "string"
                },
                {
                    "name": "analyticsStringCta2",
                    "description": "<p>The value supplied will be assigned to the\n<code>data-analytics</code> attribute on the second\ncall-to-action. Intended for an outside\nlibrary to capture data.</p>\n",
                    "line": 124,
                    "type": "string"
                },
                {
                    "name": "ctaHref",
                    "description": "<p>The Highlight Board will use this as the\n<code>href</code> for the main call-to-action.</p>\n",
                    "line": 96,
                    "type": "string"
                },
                {
                    "name": "ctaHref2",
                    "description": "<p>The Highlight Board will use this\nas the <code>href</code> for the secondary\ncall-to-action.</p>\n",
                    "line": 109,
                    "type": "string"
                },
                {
                    "name": "ctaText",
                    "description": "<p>The Highlight Board will use this as\nthe text for the main call-to-action.</p>\n",
                    "line": 90,
                    "type": "string"
                },
                {
                    "name": "ctaText2",
                    "description": "<p>The Highlight Board will use this as\nthe text for the secondary call-to-action.</p>\n",
                    "line": 102,
                    "type": "string"
                },
                {
                    "name": "heading",
                    "description": "<p>The value supplied will be rendered as the heading.</p>\n",
                    "line": 72,
                    "type": "string"
                },
                {
                    "name": "idString",
                    "description": "<p>The value supplied will be assigned\nto the <code>data-id</code> attribute on the\ncomponent. This is intended to be\nused as a selector for automated\ntools. This value should be unique\nper page.</p>\n",
                    "line": 150,
                    "type": "string"
                },
                {
                    "name": "imgAlt",
                    "description": "<p>The Highlight Board will use this as\nthe <code>alt</code> text for the main image.</p>\n",
                    "line": 84,
                    "type": "string"
                },
                {
                    "name": "imgSrc",
                    "description": "<p>The Highlight Board will use this as the\nsource for the main image.</p>\n",
                    "line": 78,
                    "type": "string"
                },
                {
                    "name": "type",
                    "description": "<p>The variation of the\nHighlight Board that is rendered.\nCan be <code>noImage</code>, <code>stacked</code> or not\nset at all. The default if not set\nis the default variation of the Highlight Board.</p>\n",
                    "line": 140,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-highlight-board',\n  template: `\n    <div [ngClass]=\"getClasses()\" [attr.data-id]=\"idString\">\n      <img\n        *ngIf=\"type !== 'noImage'\"\n        class=\"sprk-c-HighlightBoard__image\"\n        src=\"{{ imgSrc }}\"\n        alt=\"{{ imgAlt }}\"\n      />\n\n      <sprk-stack\n        sprkStackItem\n        itemSpacing=\"large\"\n        additionalClasses=\"sprk-c-HighlightBoard__content\"\n      >\n        <h1\n          sprkStackItem\n          [ngClass]=\"{\n            'sprk-b-TypeDisplayTwo': type === 'noImage',\n            'sprk-b-TypeDisplayOne': type !== 'noImage',\n            'sprk-c-HighlightBoard__heading': true\n          }\"\n        >\n          {{ heading }}\n        </h1>\n\n        <sprk-stack\n          sprkStackItem\n          *ngIf=\"ctaText\"\n          itemSpacing=\"medium\"\n          splitAt=\"tiny\"\n          additionalClasses=\"sprk-o-Stack--center-column {{ centerBtns }}\"\n        >\n          <div sprkStackItem class=\"sprk-c-HighlightBoard__cta\">\n            <sprk-link\n              linkType=\"unstyled\"\n              [href]=\"ctaHref\"\n              additionalClasses=\"sprk-c-Button sprk-c-Button--primary sprk-c-Button--full@sm\"\n              [analyticsString]=\"analyticsStringCta\"\n            >\n              {{ ctaText }}\n            </sprk-link>\n          </div>\n\n          <div\n            sprkStackItem\n            *ngIf=\"ctaText2\"\n            class=\"sprk-c-HighlightBoard__cta\"\n          >\n            <sprk-link\n              linkType=\"unstyled\"\n              [href]=\"ctaHref2\"\n              additionalClasses=\"sprk-c-Button sprk-c-Button--secondary sprk-c-Button--full@sm\"\n              [analyticsString]=\"analyticsStringCta2\"\n            >\n              {{ ctaText2 }}\n            </sprk-link>\n          </div>\n        </sprk-stack>\n      </sprk-stack>\n    </div>\n  `\n})\nexport class SprkHighlightBoardComponent {\n  /**\n   * The value supplied will be rendered as the heading.\n   */\n  @Input()\n  heading: string;\n  /**\n   * The Highlight Board will use this as the\n   * source for the main image.\n   */\n  @Input()\n  imgSrc: string;\n  /**\n   * The Highlight Board will use this as\n   * the `alt` text for the main image.\n   */\n  @Input()\n  imgAlt: string;\n  /**\n   * The Highlight Board will use this as\n   * the text for the main call-to-action.\n   */\n  @Input()\n  ctaText: string;\n  /**\n   * The Highlight Board will use this as the\n   * `href` for the main call-to-action.\n   */\n  @Input()\n  ctaHref: string;\n  /**\n   * The Highlight Board will use this as\n   * the text for the secondary call-to-action.\n   */\n  @Input()\n  ctaText2: string;\n  /**\n   * The Highlight Board will use this\n   * as the `href` for the secondary\n   * call-to-action.\n   */\n  @Input()\n  ctaHref2: string;\n  /**\n   * The value supplied will be assigned to\n   * the `data-analytics` attribute on the call-to-action.\n   * Intended for an outside library to capture data.\n   */\n  @Input()\n  analyticsStringCta: string;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the second\n   * call-to-action. Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsStringCta2: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * The variation of the\n   * Highlight Board that is rendered.\n   * Can be `noImage`, `stacked` or not\n   * set at all. The default if not set\n   * is the default variation of the Highlight Board.\n   */\n  @Input()\n  type: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n\n  /**\n   * @ignore\n   */\n  public centerBtns = '';\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-c-HighlightBoard'];\n\n    switch (this.type) {\n      case 'noImage':\n        this.centerBtns = 'sprk-o-Stack--center-row';\n        break;\n      case 'stacked':\n        this.centerBtns = 'sprk-o-Stack--center-row';\n        classArray.push(\n          'sprk-c-HighlightBoard--has-image sprk-c-HighlightBoard--stacked'\n        );\n        break;\n      default:\n        classArray.push('sprk-c-HighlightBoard--has-image');\n        break;\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SprkHugeInputContainerComponent",
            "id": "component-SprkHugeInputContainerComponent-717e9d7f646bfd098b980c7ecda919ee",
            "file": "projects/spark-angular/src/lib/components/inputs/sprk-huge-input-container/sprk-huge-input-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sprk-huge-input-container",
            "styleUrls": [],
            "styles": [],
            "template": "<div [ngClass]=\"getClasses()\">\n  <ng-content select=\"[sprkInput]\"></ng-content>\n  <ng-content select=\"[sprkLabel]\"></ng-content>\n  <ng-content select=\"[sprk-select-icon]\"></ng-content>\n  <ng-content select=\"sprk-selection-item-container\"></ng-content>\n  <ng-content select=\"[sprkHelperText]\"></ng-content>\n  <ng-content select=\"[sprkFieldError]\"></ng-content>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\ncomponent.</p>\n",
                    "line": 27,
                    "type": "string"
                },
                {
                    "name": "iconContainerClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\nicon container.</p>\n",
                    "line": 34,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "error",
                    "type": "SprkFieldErrorDirective",
                    "optional": false,
                    "description": "<p>This component expects a child element\nwith the <code>sprkFieldError</code> directive.</p>\n",
                    "line": 53,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "SprkFieldErrorDirective, {static: true}"
                        }
                    ]
                },
                {
                    "name": "input",
                    "type": "SprkInputDirective",
                    "optional": false,
                    "description": "<p>This component expects a child input element\nwith the <code>sprkInput</code> directive.</p>\n",
                    "line": 47,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "SprkInputDirective, {static: true}"
                        }
                    ]
                },
                {
                    "name": "label",
                    "type": "SprkLabelDirective",
                    "optional": false,
                    "description": "<p>This component expects a child label element\nwith the <code>sprkLabel</code> directive.</p>\n",
                    "line": 41,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "SprkLabelDirective, {static: true}"
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ContentChild, Input, OnInit } from '@angular/core';\nimport { uniqueId } from 'lodash';\nimport { SprkFieldErrorDirective } from '../../../directives/inputs/sprk-field-error/sprk-field-error.directive';\nimport { SprkInputDirective } from '../../../directives/inputs/sprk-input/sprk-input.directive';\nimport { SprkLabelDirective } from '../../../directives/inputs/sprk-label/sprk-label.directive';\n\n@Component({\n  selector: 'sprk-huge-input-container',\n  template: `\n    <div [ngClass]=\"getClasses()\">\n      <ng-content select=\"[sprkInput]\"></ng-content>\n      <ng-content select=\"[sprkLabel]\"></ng-content>\n      <ng-content select=\"[sprk-select-icon]\"></ng-content>\n      <ng-content select=\"sprk-selection-item-container\"></ng-content>\n      <ng-content select=\"[sprkHelperText]\"></ng-content>\n      <ng-content select=\"[sprkFieldError]\"></ng-content>\n    </div>\n  `\n})\nexport class SprkHugeInputContainerComponent implements OnInit {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * icon container.\n   */\n  @Input()\n  iconContainerClasses: string;\n\n  /**\n   * This component expects a child label element\n   * with the `sprkLabel` directive.\n   */\n  @ContentChild(SprkLabelDirective, { static: true })\n  label: SprkLabelDirective;\n  /**\n   * This component expects a child input element\n   * with the `sprkInput` directive.\n   */\n  @ContentChild(SprkInputDirective, { static: true })\n  input: SprkInputDirective;\n  /**\n   * This component expects a child element\n   * with the `sprkFieldError` directive.\n   */\n  @ContentChild(SprkFieldErrorDirective, { static: true })\n  error: SprkFieldErrorDirective;\n\n  /**\n   * @ignore\n   */\n  id = uniqueId();\n  /**\n   * @ignore\n   */\n  input_id = `input_${this.id}`;\n  /**\n   * @ignore\n   */\n  error_id = `error_${this.id}`;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = [\n      'sprk-b-InputContainer',\n      'sprk-b-InputContainer--huge'\n    ];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    if (this.label && this.input) {\n      this.label.ref.nativeElement.setAttribute('for', this.input_id);\n      this.input.ref.nativeElement.id = this.input_id;\n    }\n    if (this.input && this.error) {\n      this.input.ref.nativeElement.setAttribute(\n        'aria-describedby',\n        this.error_id\n      );\n      this.error.ref.nativeElement.id = this.error_id;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "SprkIconComponent",
            "id": "component-SprkIconComponent-6c0b24d410f0f5ebf9a802420ea21aaf",
            "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sprk-icon",
            "styleUrls": [],
            "styles": [
                ":host { line-height: 1; }"
            ],
            "template": "<svg [ngClass]=\"getClasses()\" viewBox=\"0 0 64 64\" [attr.data-id]=\"idString\">\n  <use [attr.xlink:href]=\"icon\" />\n</svg>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\ncomponent.</p>\n",
                    "line": 27,
                    "type": "string"
                },
                {
                    "name": "iconType",
                    "description": "<p>Determines which icon is rendered.\nExpects the value to match the exact name\nof the icon found in the docs\n(i.e. <code>chevron-down</code>, instead of <code>chevron down</code>).</p>\n",
                    "line": 20,
                    "type": "string"
                },
                {
                    "name": "idString",
                    "description": "<p>The value supplied will be assigned\nto the <code>data-id</code> attribute on the\ncomponent. This is intended to be\nused as a selector for automated\ntools. This value should be unique\nper page.</p>\n",
                    "line": 37,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-icon',\n  template: `\n    <svg [ngClass]=\"getClasses()\" viewBox=\"0 0 64 64\" [attr.data-id]=\"idString\">\n      <use [attr.xlink:href]=\"icon\" />\n    </svg>\n  `,\n  styles: [':host { line-height: 1; }']\n})\nexport class SprkIconComponent {\n  /**\n   * Determines which icon is rendered.\n   * Expects the value to match the exact name\n   * of the icon found in the docs\n   * (i.e. `chevron-down`, instead of `chevron down`).\n   */\n  @Input()\n  iconType: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n\n  /**\n   * @ignore\n   */\n  public icon: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-c-Icon'];\n\n    this.icon = `#${this.iconType}`;\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ":host { line-height: 1; }\n"
        },
        {
            "name": "SprkIconInputContainerComponent",
            "id": "component-SprkIconInputContainerComponent-24a41bb94a6aad656211a7e3f6300cf0",
            "file": "projects/spark-angular/src/lib/components/inputs/sprk-icon-input-container/sprk-icon-input-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sprk-icon-input-container",
            "styleUrls": [],
            "styles": [],
            "template": "<div [ngClass]=\"getClasses()\">\n  <div [ngClass]=\"getIconContainerClasses()\">\n    <ng-content select=\"[sprkLabel]\"></ng-content>\n    <ng-content select=\"[sprk-input-icon]\"></ng-content>\n    <ng-content select=\"[sprkInput]\"></ng-content>\n  </div>\n  <ng-content select=\"sprk-selection-item-container\"></ng-content>\n  <ng-content select=\"[sprkHelperText]\"></ng-content>\n  <ng-content select=\"[sprkFieldError]\"></ng-content>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\ncomponent.</p>\n",
                    "line": 29,
                    "type": "string"
                },
                {
                    "name": "iconContainerClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\nicon container.</p>\n",
                    "line": 36,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "error",
                    "type": "SprkFieldErrorDirective",
                    "optional": false,
                    "description": "<p>This component expects a child element\nwith the <code>sprkFieldError</code> directive.</p>\n",
                    "line": 55,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "SprkFieldErrorDirective, {static: true}"
                        }
                    ]
                },
                {
                    "name": "input",
                    "type": "SprkInputDirective",
                    "optional": false,
                    "description": "<p>This component expects a child input element\nwith the <code>sprkInput</code> directive.</p>\n",
                    "line": 49,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "SprkInputDirective, {static: true}"
                        }
                    ]
                },
                {
                    "name": "label",
                    "type": "SprkLabelDirective",
                    "optional": false,
                    "description": "<p>This component expects a child label element\nwith the <code>sprkLabel</code> directive.</p>\n",
                    "line": 43,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "SprkLabelDirective, {static: true}"
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ContentChild, Input, OnInit } from '@angular/core';\nimport * as _ from 'lodash';\nimport { SprkFieldErrorDirective } from '../../../directives/inputs/sprk-field-error/sprk-field-error.directive';\nimport { SprkInputDirective } from '../../../directives/inputs/sprk-input/sprk-input.directive';\nimport { SprkLabelDirective } from '../../../directives/inputs/sprk-label/sprk-label.directive';\n\n@Component({\n  selector: 'sprk-icon-input-container',\n  template: `\n    <div [ngClass]=\"getClasses()\">\n      <div [ngClass]=\"getIconContainerClasses()\">\n        <ng-content select=\"[sprkLabel]\"></ng-content>\n        <ng-content select=\"[sprk-input-icon]\"></ng-content>\n        <ng-content select=\"[sprkInput]\"></ng-content>\n      </div>\n      <ng-content select=\"sprk-selection-item-container\"></ng-content>\n      <ng-content select=\"[sprkHelperText]\"></ng-content>\n      <ng-content select=\"[sprkFieldError]\"></ng-content>\n    </div>\n  `\n})\nexport class SprkIconInputContainerComponent implements OnInit {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * icon container.\n   */\n  @Input()\n  iconContainerClasses: string;\n\n  /**\n   * This component expects a child label element\n   * with the `sprkLabel` directive.\n   */\n  @ContentChild(SprkLabelDirective, { static: true })\n  label: SprkLabelDirective;\n  /**\n   * This component expects a child input element\n   * with the `sprkInput` directive.\n   */\n  @ContentChild(SprkInputDirective, { static: true })\n  input: SprkInputDirective;\n  /**\n   * This component expects a child element\n   * with the `sprkFieldError` directive.\n   */\n  @ContentChild(SprkFieldErrorDirective, { static: true })\n  error: SprkFieldErrorDirective;\n\n  /**\n   * @ignore\n   */\n  id = _.uniqueId();\n  /**\n   * @ignore\n   */\n  input_id = `input_${this.id}`;\n  /**\n   * @ignore\n   */\n  error_id = `error_${this.id}`;\n  /**\n   * @ignore\n   */\n  getIconContainerClasses(): string {\n    const classArray: string[] = ['sprk-b-InputContainer__icon-container'];\n\n    if (this.iconContainerClasses) {\n      this.iconContainerClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-b-InputContainer'];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    if (this.label && this.input) {\n      this.label.ref.nativeElement.setAttribute('for', this.input_id);\n      this.input.ref.nativeElement.id = this.input_id;\n    }\n    if (this.input && this.error) {\n      this.input.ref.nativeElement.setAttribute(\n        'aria-describedby',\n        this.error_id\n      );\n      this.error.ref.nativeElement.id = this.error_id;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "SprkLinkComponent",
            "id": "component-SprkLinkComponent-3a73c44e1d41625b1c452b228abbd5d8",
            "file": "projects/spark-angular/src/lib/components/sprk-link/sprk-link.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sprk-link",
            "styleUrls": [],
            "styles": [],
            "template": "<a\n  (click)=\"handleClick($event)\"\n  [ngClass]=\"getClasses()\"\n  [href]=\"href\"\n  [attr.data-analytics]=\"analyticsString\"\n  [attr.target]=\"target\"\n  [attr.data-id]=\"idString\"\n  [attr.disabled]=\"isDisabled\"\n  [attr.aria-controls]=\"ariaControls\"\n  [attr.aria-label]=\"ariaLabel\"\n  [attr.aria-labelledby]=\"ariaLabelledby\"\n  [attr.aria-haspopup]=\"ariaHasPopUp\"\n  [attr.role]=\"role\"\n  [attr.id]=\"id\"\n  [attr.aria-current]=\"ariaCurrent\"\n  [attr.aria-expanded]=\"ariaExpanded\"\n  [attr.aria-hidden]=\"ariaHidden\"\n  [attr.aria-selected]=\"ariaSelected\"\n>\n  <ng-content></ng-content>\n</a>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\ncomponent.</p>\n",
                    "line": 144,
                    "type": "string"
                },
                {
                    "name": "analyticsString",
                    "description": "<p>The value supplied will be assigned to the\n<code>data-analytics</code> attribute on the component.\nIntended for an outside\nlibrary to capture data.</p>\n",
                    "line": 131,
                    "type": "string"
                },
                {
                    "name": "ariaControls",
                    "description": "<p>Expects a value to assign to the\n<code>aria-controls</code> attribute of the link.</p>\n",
                    "line": 81,
                    "type": "string"
                },
                {
                    "name": "ariaCurrent",
                    "description": "<p>Expects a value to assign\nto the <code>aria-curren</code>t attribute of the link.</p>\n",
                    "line": 105,
                    "type": "string"
                },
                {
                    "name": "ariaExpanded",
                    "description": "<p>Expects a value to assign to\nthe <code>aria-expanded</code>attribute of the link.</p>\n",
                    "line": 111,
                    "type": "string"
                },
                {
                    "name": "ariaHasPopUp",
                    "description": "<p>Expects a value to assign\nto the <code>aria-haspopup</code> attribute of the link.</p>\n",
                    "line": 117,
                    "type": "string"
                },
                {
                    "name": "ariaHidden",
                    "description": "<p>Expects a value to assign to\nthe <code>aria-hidden</code> attribute of the link.</p>\n",
                    "line": 99,
                    "type": "string"
                },
                {
                    "name": "ariaLabel",
                    "description": "<p>Expects a value to assign to\nthe <code>aria-label</code> attribute of the link.</p>\n",
                    "line": 123,
                    "type": "string"
                },
                {
                    "name": "ariaLabelledby",
                    "description": "<p>Expects a value to assign to\nthe <code>aria-labelledby</code> attribute of the link.</p>\n",
                    "line": 87,
                    "type": "string"
                },
                {
                    "name": "ariaSelected",
                    "description": "<p>Expects a value to assign to\nthe <code>aria-selected</code> attribute of the link.</p>\n",
                    "line": 93,
                    "type": "string"
                },
                {
                    "name": "href",
                    "description": "<p>The <code>href</code> value of the link. If omitted,\nthe href will be set to <code>#</code>\nand the routing will be disabled. If\nset to reference an ID then the page\nwill scroll to that anchor as normal.</p>\n",
                    "line": 52,
                    "type": "string"
                },
                {
                    "name": "id",
                    "description": "<p>The string that will be\nassigned to the <code>id</code> attribute of\nthe link.</p>\n",
                    "line": 75,
                    "type": "string"
                },
                {
                    "name": "idString",
                    "description": "<p>The value supplied will be assigned\nto the <code>data-id</code> attribute on the\ncomponent. This is intended to be\nused as a selector for automated\ntools. This value should be unique\nper page.</p>\n",
                    "line": 62,
                    "type": "string"
                },
                {
                    "name": "isDisabled",
                    "description": "<p>If <code>true</code>, will set disabled styles on the link.</p>\n",
                    "line": 149,
                    "type": "boolean"
                },
                {
                    "name": "isExternal",
                    "defaultValue": "false",
                    "description": "<p>By default, the component determines if\nthe <code>href</code> is an external or internal link\nby looking for the <code>:</code> character in the\n<code>href</code> string. If external link functionality\nis desired with an <code>href</code> value that contains\na <code>:</code> set this input to true. This overrides\nthe default and avoids using the Angular Router.</p>\n",
                    "line": 160
                },
                {
                    "name": "linkType",
                    "description": "<p>Will cause the appropriate variant type to render.\nOptional values are: <code>simple</code>, <code>icon</code>, <code>unstyled</code> or <code>plain</code>.\nIf omitted, the default Spark Link class is applied.\nThe <code>unstyled</code> variant will render an <code>href</code> with no\nCSS classes.</p>\n",
                    "line": 43,
                    "type": "string"
                },
                {
                    "name": "role",
                    "description": "<p>Value for the <code>role</code>\nattribute of the link.</p>\n",
                    "line": 68,
                    "type": "string"
                },
                {
                    "name": "target",
                    "description": "<p>Expects a value to assign to\nthe <code>target</code> attribute of the link.</p>\n",
                    "line": 137,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'sprk-link',\n  template: `\n    <a\n      (click)=\"handleClick($event)\"\n      [ngClass]=\"getClasses()\"\n      [href]=\"href\"\n      [attr.data-analytics]=\"analyticsString\"\n      [attr.target]=\"target\"\n      [attr.data-id]=\"idString\"\n      [attr.disabled]=\"isDisabled\"\n      [attr.aria-controls]=\"ariaControls\"\n      [attr.aria-label]=\"ariaLabel\"\n      [attr.aria-labelledby]=\"ariaLabelledby\"\n      [attr.aria-haspopup]=\"ariaHasPopUp\"\n      [attr.role]=\"role\"\n      [attr.id]=\"id\"\n      [attr.aria-current]=\"ariaCurrent\"\n      [attr.aria-expanded]=\"ariaExpanded\"\n      [attr.aria-hidden]=\"ariaHidden\"\n      [attr.aria-selected]=\"ariaSelected\"\n    >\n      <ng-content></ng-content>\n    </a>\n  `\n})\nexport class SprkLinkComponent implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor(public router: Router) {}\n\n  /**\n   * Will cause the appropriate variant type to render.\n   * Optional values are: `simple`, `icon`, `unstyled` or `plain`.\n   * If omitted, the default Spark Link class is applied.\n   * The `unstyled` variant will render an `href` with no\n   * CSS classes.\n   */\n  @Input()\n  linkType: string;\n  /**\n   * The `href` value of the link. If omitted,\n   * the href will be set to `#`\n   * and the routing will be disabled. If\n   * set to reference an ID then the page\n   * will scroll to that anchor as normal.\n   */\n  @Input()\n  href: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  /**\n   * Value for the `role`\n   * attribute of the link.\n   */\n  @Input()\n  role: string;\n  /**\n   * The string that will be\n   * assigned to the `id` attribute of\n   * the link.\n   */\n  @Input()\n  id: string;\n  /**\n   * Expects a value to assign to the\n   * `aria-controls` attribute of the link.\n   */\n  @Input()\n  ariaControls: string;\n  /**\n   * Expects a value to assign to\n   * the `aria-labelledby` attribute of the link.\n   */\n  @Input()\n  ariaLabelledby: string;\n  /**\n   * Expects a value to assign to\n   * the `aria-selected` attribute of the link.\n   */\n  @Input()\n  ariaSelected: string;\n  /**\n   * Expects a value to assign to\n   * the `aria-hidden` attribute of the link.\n   */\n  @Input()\n  ariaHidden: string;\n  /**\n   * Expects a value to assign\n   * to the `aria-curren`t attribute of the link.\n   */\n  @Input()\n  ariaCurrent: string;\n  /**\n   * Expects a value to assign to\n   * the `aria-expanded `attribute of the link.\n   */\n  @Input()\n  ariaExpanded: string;\n  /**\n   * Expects a value to assign\n   * to the `aria-haspopup` attribute of the link.\n   */\n  @Input()\n  ariaHasPopUp: string;\n  /**\n   * Expects a value to assign to\n   * the `aria-label` attribute of the link.\n   */\n  @Input()\n  ariaLabel: string;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the component.\n   * Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsString: string;\n  /**\n   * Expects a value to assign to\n   * the `target` attribute of the link.\n   */\n  @Input()\n  target: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * If `true`, will set disabled styles on the link.\n   */\n  @Input()\n  isDisabled: boolean;\n  /**\n   * By default, the component determines if\n   * the `href` is an external or internal link\n   * by looking for the `:` character in the\n   * `href` string. If external link functionality\n   * is desired with an `href` value that contains\n   * a `:` set this input to true. This overrides\n   * the default and avoids using the Angular Router.\n   */\n  @Input()\n  isExternal = false;\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n    // Sets the default href if none provided\n    if (this.href === '' || this.href === null || this.href === undefined) {\n      this.href = '#';\n      return;\n    }\n    // Build jump link's href\n    if (this.isJumpLink(this.href)) {\n      this.href = `${this.getPathWithoutHash(this.router.url)}${this.href}`;\n    }\n  }\n  /**\n   * @ignore\n   */\n  isExternalLink(value): boolean {\n    return new RegExp('^.*:', 'i').test(value);\n  }\n  /**\n   * @ignore\n   */\n  isJumpLinkWithPage(value): boolean {\n    return new RegExp('^.*#.+', 'i').test(value);\n  }\n  /**\n   * @ignore\n   */\n  isJumpLink(value): boolean {\n    return new RegExp('^#.+', 'i').test(value);\n  }\n  /**\n   * @ignore\n   */\n  isNoActionLink(value): boolean {\n    return value === '#';\n  }\n  /**\n   * @ignore\n   */\n  getPathWithoutHash(value): string {\n    return value.split('#')[0];\n  }\n  /**\n   * @ignore\n   */\n  scrollToId() {\n    const elementID = this.href.split('#').pop();\n    const element: HTMLElement = document.getElementById(elementID);\n    if (element) {\n      element.scrollIntoView();\n    }\n  }\n  /**\n   * @ignore\n   */\n  handleClick(event): void {\n    // Let browser handle route if external Link\n    if (this.isExternalLink(this.href) || this.isExternal) {\n      return;\n    }\n\n    event.preventDefault();\n\n    // Prevent default and return\n    if (this.isNoActionLink(this.href)) {\n      return;\n    } else if (this.isJumpLinkWithPage(this.href)) {\n      if (\n        this.getPathWithoutHash(this.href) ===\n        this.getPathWithoutHash(this.router.url)\n      ) {\n        this.scrollToId();\n      } else {\n        this.router.navigateByUrl(this.href);\n      }\n    } else {\n      this.router.navigateByUrl(this.href);\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = [];\n\n    switch (this.linkType) {\n      case 'unstyled':\n        break;\n      case 'simple':\n        classArray.push('sprk-b-Link sprk-b-Link--simple');\n        break;\n      case 'plain':\n        classArray.push('sprk-b-Link sprk-b-Link--plain');\n        break;\n      case 'icon':\n        classArray.push(\n          'sprk-b-Link sprk-b-Link--simple sprk-b-Link--has-icon'\n        );\n        break;\n      default:\n        classArray.push('sprk-b-Link');\n        break;\n    }\n\n    if (this.isDisabled) {\n      classArray.push('sprk-b-Link--disabled');\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "SprkListItemComponent",
            "id": "component-SprkListItemComponent-b42fcd2c59c3197f77e0e92e6d62d0d3",
            "file": "projects/spark-angular/src/lib/components/sprk-list-item/sprk-list-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sprk-list-item",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-template>\n  <ng-content></ng-content>\n</ng-template>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\ncomponent.</p>\n",
                    "line": 36,
                    "type": "string"
                },
                {
                    "name": "analyticsString",
                    "description": "<p>The value supplied will be assigned to the\n<code>data-analytics</code> attribute on the component.\nIntended for an outside\nlibrary to capture data.</p>\n",
                    "line": 19,
                    "type": "string"
                },
                {
                    "name": "idString",
                    "description": "<p>The value supplied will be assigned\nto the <code>data-id</code> attribute on the\ncomponent. This is intended to be\nused as a selector for automated\ntools. This value should be unique\nper page.</p>\n",
                    "line": 29,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, TemplateRef, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'sprk-list-item',\n  template: `\n    <ng-template>\n      <ng-content></ng-content>\n    </ng-template>\n  `\n})\nexport class SprkListItemComponent {\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the component.\n   * Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsString: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n\n  /**\n   * @ignore\n   */\n  @ViewChild(TemplateRef, { static: true }) content: TemplateRef<any>;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SprkMastheadAccordionComponent",
            "id": "component-SprkMastheadAccordionComponent-930b1faed4daa1443040b0553784dcfb",
            "file": "projects/spark-angular/src/lib/components/sprk-masthead/sprk-masthead-accordion/sprk-masthead-accordion.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sprk-masthead-accordion",
            "styleUrls": [],
            "styles": [],
            "template": "<nav role=\"navigation\" [attr.data-id]=\"idString\">\n  <ul [ngClass]=\"getClasses()\">\n    <ng-content></ng-content>\n  </ul>\n</nav>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\ncomponent.</p>\n",
                    "line": 20,
                    "type": "string"
                },
                {
                    "name": "idString",
                    "description": "<p>The value supplied will be assigned\nto the <code>data-id</code> attribute on the\ncomponent. This is intended to be\nused as a selector for automated\ntools. This value should be unique\nper page.</p>\n",
                    "line": 30,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-masthead-accordion',\n  template: `\n    <nav role=\"navigation\" [attr.data-id]=\"idString\">\n      <ul [ngClass]=\"getClasses()\">\n        <ng-content></ng-content>\n      </ul>\n    </nav>\n  `\n})\nexport class SprkMastheadAccordionComponent {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = [\n      'sprk-c-MastheadAccordion',\n      'sprk-b-List',\n      'sprk-b-List--bare'\n    ];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SprkMastheadAccordionItemComponent",
            "id": "component-SprkMastheadAccordionItemComponent-96bdca14d07964187a9f9da5b93e420e",
            "file": "projects/spark-angular/src/lib/components/sprk-masthead/sprk-masthead-accordion-item/sprk-masthead-accordion-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sprk-masthead-accordion-item",
            "styleUrls": [],
            "styles": [],
            "template": "<li [ngClass]=\"getClasses()\">\n  <div\n    class=\"sprk-u-Position--relative sprk-o-Stack__item sprk-u-Width-100\"\n  >\n    <sprk-link\n      linkType=\"unstyled\"\n      [ariaControls]=\"accordion_controls_id\"\n      additionalClasses=\"sprk-c-MastheadAccordion__summary\"\n      [analyticsString]=\"analyticsString\"\n      [idString]=\"idString\"\n      (click)=\"toggleAccordion($event)\"\n    >\n      <span [ngClass]=\"getHeadingClasses()\">\n        <sprk-icon\n          [iconType]=\"leadingIcon\"\n          additionalClasses=\"sprk-c-Icon--stroke-current-color sprk-c-Icon--l sprk-c-Icon--toggle sprk-u-mrs\"\n          *ngIf=\"leadingIcon\"\n        ></sprk-icon>\n        {{ title }}\n      </span>\n\n      <sprk-icon\n        additionalClasses=\"sprk-c-MastheadAccordion__icon sprk-c-Icon--stroke-current-color sprk-c-Icon--toggle {{\n          iconStateClass\n        }}\"\n        [iconType]=\"currentIconType\"\n      ></sprk-icon>\n    </sprk-link>\n  </div>\n\n  <div [@toggleContent]=\"animState\">\n    <div [id]=\"accordion_controls_id\"><ng-content></ng-content></div>\n  </div>\n</li>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\ncomponent.</p>\n",
                    "line": 72,
                    "type": "string"
                },
                {
                    "name": "additionalHeadingClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\nheading.</p>\n",
                    "line": 79,
                    "type": "string"
                },
                {
                    "name": "analyticsString",
                    "description": "<p>The value supplied will be assigned to the\n<code>data-analytics</code> attribute on the component.\nIntended for an outside\nlibrary to capture data.</p>\n",
                    "line": 55,
                    "type": "string"
                },
                {
                    "name": "iconTypeClosed",
                    "defaultValue": "'chevron-up-circle-two-color'",
                    "description": "<p>The name of the icon to use\nfor the clickable close icon.</p>\n",
                    "line": 97
                },
                {
                    "name": "iconTypeOpen",
                    "defaultValue": "'chevron-up-circle-two-color'",
                    "description": "<p>The name of the icon to use\nfor the clickable open icon.</p>\n",
                    "line": 103
                },
                {
                    "name": "idString",
                    "description": "<p>The value supplied will be assigned\nto the <code>data-id</code> attribute on the\ncomponent. This is intended to be\nused as a selector for automated\ntools. This value should be unique\nper page.</p>\n",
                    "line": 65,
                    "type": "string"
                },
                {
                    "name": "isActive",
                    "description": "<p>If <code>true</code>, the Masthead ccordion item\nwill be active when it is rendered.</p>\n",
                    "line": 91,
                    "type": "boolean"
                },
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "description": "<p>If <code>true</code>, the Masthead accordion item\nwill be open when it is rendered.</p>\n",
                    "line": 85
                },
                {
                    "name": "leadingIcon",
                    "description": "<p>Expects a name of an icon to use\nas a leading icon for the Masthead accordion item.</p>\n",
                    "line": 109,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 47,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport * as _ from 'lodash';\nimport { toggleAnimations } from '../../sprk-toggle/sprk-toggle-animations';\n\n@Component({\n  selector: 'sprk-masthead-accordion-item',\n  template: `\n    <li [ngClass]=\"getClasses()\">\n      <div\n        class=\"sprk-u-Position--relative sprk-o-Stack__item sprk-u-Width-100\"\n      >\n        <sprk-link\n          linkType=\"unstyled\"\n          [ariaControls]=\"accordion_controls_id\"\n          additionalClasses=\"sprk-c-MastheadAccordion__summary\"\n          [analyticsString]=\"analyticsString\"\n          [idString]=\"idString\"\n          (click)=\"toggleAccordion($event)\"\n        >\n          <span [ngClass]=\"getHeadingClasses()\">\n            <sprk-icon\n              [iconType]=\"leadingIcon\"\n              additionalClasses=\"sprk-c-Icon--stroke-current-color sprk-c-Icon--l sprk-c-Icon--toggle sprk-u-mrs\"\n              *ngIf=\"leadingIcon\"\n            ></sprk-icon>\n            {{ title }}\n          </span>\n\n          <sprk-icon\n            additionalClasses=\"sprk-c-MastheadAccordion__icon sprk-c-Icon--stroke-current-color sprk-c-Icon--toggle {{\n              iconStateClass\n            }}\"\n            [iconType]=\"currentIconType\"\n          ></sprk-icon>\n        </sprk-link>\n      </div>\n\n      <div [@toggleContent]=\"animState\">\n        <div [id]=\"accordion_controls_id\"><ng-content></ng-content></div>\n      </div>\n    </li>\n  `,\n  animations: [toggleAnimations.toggleContent]\n})\nexport class SprkMastheadAccordionItemComponent implements OnInit {\n  @Input()\n  title: string;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the component.\n   * Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsString: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * heading.\n   */\n  @Input()\n  additionalHeadingClasses: string;\n  /**\n   * If `true`, the Masthead accordion item\n   * will be open when it is rendered.\n   */\n  @Input()\n  isOpen = false;\n  /**\n   * If `true`, the Masthead ccordion item\n   * will be active when it is rendered.\n   */\n  @Input()\n  isActive: boolean;\n  /**\n   * The name of the icon to use\n   * for the clickable close icon.\n   */\n  @Input()\n  iconTypeClosed = 'chevron-up-circle-two-color';\n  /**\n   * The name of the icon to use\n   * for the clickable open icon.\n   */\n  @Input()\n  iconTypeOpen = 'chevron-up-circle-two-color';\n  /**\n   * Expects a name of an icon to use\n   * as a leading icon for the Masthead accordion item.\n   */\n  @Input()\n  leadingIcon: string;\n\n  /**\n   * @ignore\n   */\n  componentID = _.uniqueId();\n  /**\n   * @ignore\n   */\n  accordion_controls_id = `accordionHeading__${this.componentID}`;\n  /**\n   * @ignore\n   */\n  public currentIconType = this.iconTypeClosed;\n  /**\n   * @ignore\n   */\n  public iconStateClass = '';\n  /**\n   * @ignore\n   */\n  public animState = 'closed';\n\n  /**\n   * @ignore\n   */\n  accordionState(): void {\n    this.isOpen === false\n      ? (this.animState = 'closed')\n      : (this.animState = 'open');\n\n    this.isOpen === false\n      ? (this.currentIconType = this.iconTypeClosed)\n      : (this.currentIconType = this.iconTypeOpen);\n\n    this.isOpen === false\n      ? (this.iconStateClass = '')\n      : (this.iconStateClass = 'sprk-c-Icon--open');\n  }\n  /**\n   * @ignore\n   */\n  toggleAccordion(event): void {\n    event.preventDefault();\n    this.isOpen = !this.isOpen;\n    this.accordionState();\n  }\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = [\n      'sprk-c-MastheadAccordion__item',\n      'sprk-u-Overflow--hidden'\n    ];\n\n    if (this.isOpen) {\n      classArray.push('sprk-c-MastheadAccordion__item--open');\n    }\n\n    if (this.isActive) {\n      classArray.push('sprk-c-MastheadAccordion__item--active');\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n  /**\n   * @ignore\n   */\n  getHeadingClasses(): string {\n    const classArray: string[] = ['sprk-c-MastheadAccordion__heading'];\n\n    if (this.additionalHeadingClasses) {\n      this.additionalHeadingClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n    this.accordionState();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "SprkMastheadComponent",
            "id": "component-SprkMastheadComponent-bd38537e4d623cca0120990ae0ba3d57",
            "file": "projects/spark-angular/src/lib/components/sprk-masthead/sprk-masthead.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sprk-masthead",
            "styleUrls": [],
            "styles": [],
            "template": "<header [ngClass]=\"getClasses()\" role=\"banner\" [attr.data-id]=\"idString\">\n  <div\n    class=\"sprk-c-Masthead__content sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--split@xxs\"\n  >\n    <div\n      class=\"sprk-c-Masthead__menu sprk-o-Stack__item sprk-o-Stack__item--center-column@xxs\"\n    >\n      <button\n        class=\"sprk-c-Menu\"\n        type=\"button\"\n        [attr.aria-expanded]=\"isNarrowNavOpen ? true : false\"\n        (click)=\"toggleNarrowNav($event)\"\n        data-sprk-mobile-nav-trigger=\"mobileNav\"\n      >\n        <span class=\"sprk-u-ScreenReaderText\">Toggle Navigation</span>\n        <svg\n          [ngClass]=\"{\n            'sprk-c-Icon': true,\n            'sprk-c-Icon--l': true,\n            'sprk-c-Menu__icon': true,\n            'sprk-c-Menu__icon--open': isNarrowNavOpen\n          }\"\n          aria-hidden=\"true\"\n          viewBox=\"0 0 64 64\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <g>\n            <path\n              class=\"sprk-c-Menu__line sprk-c-Menu__line--two\"\n              d=\"m8 32h48\"\n            />\n            <path\n              class=\"sprk-c-Menu__line sprk-c-Menu__line--one\"\n              d=\"m8 18.68h48\"\n            />\n            <path\n              class=\"sprk-c-Menu__line sprk-c-Menu__line--three\"\n              d=\"m8 45.32h48\"\n            />\n          </g>\n        </svg>\n      </button>\n    </div>\n\n    <div\n      class=\"sprk-c-Masthead__branding sprk-o-Stack__item sprk-o-Stack__item--center-column@xxs\"\n    >\n      <sprk-link [href]=\"logoHref\" linkType=\"unstyled\">\n        <ng-content select=\"[logo-slot]\"></ng-content>\n        <span class=\"sprk-u-ScreenReaderText\">{{\n          logoLinkScreenReaderText\n        }}</span>\n      </sprk-link>\n    </div>\n\n    <div\n      class=\"sprk-c-Masthead__nav-item sprk-o-Stack__item sprk-o-Stack__item--center-column@xxs\"\n    >\n      <ng-content select=\"[navItem-slot]\"></ng-content>\n    </div>\n    <nav\n      class=\"\n      sprk-c-Masthead__little-nav\n      sprk-o-Stack__item\n      sprk-o-Stack__item--flex@xxs\n      sprk-o-Stack\n      sprk-o-Stack--misc-a\n      sprk-o-Stack--split@xxs\n      sprk-o-Stack--end-row\"\n      role=\"navigation\"\n    >\n      <ng-content select=\"[little-nav-slot]\"></ng-content>\n\n      <ng-content select=\"[utility-slot]\"></ng-content>\n    </nav>\n  </div>\n\n  <div class=\"sprk-o-Stack__item\">\n    <nav\n      class=\"sprk-c-Masthead__big-nav\"\n      role=\"navigation\"\n      [attr.data-id]=\"idString\"\n      *ngIf=\"bigNavLinks\"\n    >\n      <ul [ngClass]=\"getSecondaryNavClasses()\">\n        <li\n          *ngFor=\"let link of bigNavLinks\"\n          [ngClass]=\"{\n            'sprk-c-Masthead__big-nav-item': true,\n            'sprk-o-Stack__item': true,\n            'sprk-c-Masthead__big-nav-item--open':\n              link.focused && link.subNav\n          }\"\n          routerLinkActive=\"sprk-c-Masthead__big-nav-item--active\"\n          [attr.aria-haspopup]=\"link.subNav ? 'true' : null\"\n        >\n          <div *ngIf=\"link.subNav\">\n            <sprk-dropdown\n              [choices]=\"link.subNav\"\n              additionalTriggerClasses=\"sprk-b-Link--plain sprk-c-Masthead__link sprk-c-Masthead__link--big-nav\"\n              additionalClasses=\"sprk-u-TextAlign--left\"\n              triggerIconType=\"chevron-down\"\n              [triggerText]=\"link.text\"\n            ></sprk-dropdown>\n          </div>\n          <div *ngIf=\"!link.subNav\">\n            <sprk-link\n              linkType=\"plain\"\n              additionalClasses=\"sprk-c-Masthead__link sprk-c-Masthead__link--big-nav\"\n              [href]=\"link.href\"\n            >\n              {{ link.text }}\n            </sprk-link>\n          </div>\n        </li>\n      </ul>\n    </nav>\n  </div>\n\n  <nav\n    *ngIf=\"isNarrowNavOpen\"\n    class=\"sprk-c-Masthead__narrow-nav\"\n    data-sprk-mobile-nav=\"mobileNav\"\n    role=\"navigation\"\n  >\n    <sprk-dropdown\n      *ngIf=\"narrowSelector\"\n      dropdownType=\"mastheadSelector\"\n      additionalClasses=\"sprk-c-Masthead__selector-dropdown\"\n      additionalTriggerClasses=\"\n        sprk-c-Masthead__selector\n        sprk-b-Link\n        sprk-b-Link--plain\n        sprk-o-Stack\n        sprk-o-Stack--split@xxs\n        sprk-o-Stack--center-column\"\n      additionalTriggerTextClasses=\"sprk-o-Stack__item sprk-o-Stack__item--flex@xxs\"\n      additionalIconClasses=\"sprk-Stack__item sprk-u-mrs\"\n      [triggerText]=\"narrowSelector['trigger'].text\"\n      selector=\"Select One\"\n      triggerIconType=\"chevron-down\"\n      [choices]=\"narrowSelector['choices']\"\n    >\n      <div\n        *ngIf=\"narrowSelector['footer']\"\n        class=\"sprk-c-Dropdown__footer sprk-u-TextAlign--center\"\n        sprkDropdownFooter\n      >\n        <sprk-link\n          linkType=\"unstyled\"\n          [analyticsString]=\"narrowSelector['footer'].analyticsString\"\n          [href]=\"narrowSelector['footer'].href\"\n          additionalClasses=\"sprk-c-Button sprk-c-Button--tertiary\"\n        >\n          {{ narrowSelector['footer'].text }}\n        </sprk-link>\n      </div>\n    </sprk-dropdown>\n\n    <sprk-masthead-accordion [additionalClasses]=\"getNarrowNavClasses()\">\n      <div *ngFor=\"let narrowLink of narrowNavLinks\">\n        <div *ngIf=\"narrowLink.subNav\">\n          <sprk-masthead-accordion-item\n            iconTypeOpen=\"chevron-down\"\n            iconTypeClosed=\"chevron-down\"\n            [leadingIcon]=\"narrowLink.leadingIcon\"\n            [isActive]=\"narrowLink.active\"\n            [title]=\"narrowLink.text\"\n          >\n            <ul\n              class=\"sprk-b-List sprk-b-List--bare sprk-c-MastheadAccordion__details\"\n            >\n              <li\n                class=\"sprk-c-MastheadAccordion__item\"\n                *ngFor=\"let subNavLink of narrowLink.subNav\"\n              >\n                <sprk-link\n                  linkType=\"unstyled\"\n                  additionalClasses=\"sprk-c-MastheadAccordion__summary\"\n                  [href]=\"subNavLink.href\"\n                >\n                  <sprk-icon\n                    [iconType]=\"subNavLink.leadingIcon\"\n                    additionalClasses=\"sprk-c-Icon--stroke-current-color sprk-u-mrs\"\n                    *ngIf=\"subNavLink.leadingIcon\"\n                  ></sprk-icon>\n                  {{ subNavLink.text }}\n                </sprk-link>\n              </li>\n            </ul>\n          </sprk-masthead-accordion-item>\n        </div>\n        <div *ngIf=\"!narrowLink.subNav\">\n          <li\n            [ngClass]=\"{\n              'sprk-c-MastheadAccordion__item': true,\n              'sprk-c-MastheadAccordion__item--active': narrowLink.active\n            }\"\n          >\n            <sprk-link\n              linkType=\"unstyled\"\n              additionalClasses=\"sprk-c-MastheadAccordion__summary\"\n              [href]=\"narrowLink.href\"\n            >\n              <span class=\"sprk-c-MastheadAccordion__heading\">\n                <sprk-icon\n                  [iconType]=\"narrowLink.leadingIcon\"\n                  additionalClasses=\"sprk-c-Icon--stroke-current-color sprk-u-mrs\"\n                  *ngIf=\"narrowLink.leadingIcon\"\n                ></sprk-icon>\n                {{ narrowLink.text }}\n              </span>\n            </sprk-link>\n          </li>\n        </div>\n      </div>\n    </sprk-masthead-accordion>\n    <ng-content select=\"[narrowNavFooter]\"></ng-content>\n  </nav>\n</header>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "additionalBigNavClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\nbig navigation link container.</p>\n",
                    "line": 273,
                    "type": "string"
                },
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\ncomponent.</p>\n",
                    "line": 266,
                    "type": "string"
                },
                {
                    "name": "additionalNarrowNavClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\nnarrow navigation container.</p>\n",
                    "line": 280,
                    "type": "string"
                },
                {
                    "name": "bigNavLinks",
                    "description": "<p>Expects an array of link objects, to be\nrepresented in the big nav element of\nthe Masthead component.</p>\n",
                    "line": 310,
                    "type": "any[]"
                },
                {
                    "name": "idString",
                    "description": "<p>The value supplied will be assigned\nto the <code>data-id</code> attribute on the\ncomponent. This is intended to be\nused as a selector for automated\ntools. This value should be unique\nper page.</p>\n",
                    "line": 303,
                    "type": "string"
                },
                {
                    "name": "isNarrowNavOpen",
                    "defaultValue": "false",
                    "description": "<p>Represents the initial state of the\nnarrow nav element of the Masthead component.</p>\n",
                    "line": 293
                },
                {
                    "name": "logoHref",
                    "defaultValue": "'/'",
                    "description": "<p>The <code>href</code> value of the logo.</p>\n",
                    "line": 252
                },
                {
                    "name": "logoLinkScreenReaderText",
                    "defaultValue": "'Go to the homepage'",
                    "description": "<p>The value supplied will be used as\nscreen reader text that is visually hidden\nfor the link that wraps the logo.</p>\n",
                    "line": 259
                },
                {
                    "name": "narrowNavLinks",
                    "description": "<p>Expects an array of link objects, to be\nrepresented in the narrow nav element\nof the Masthead component.</p>\n",
                    "line": 287,
                    "type": "any[]"
                },
                {
                    "name": "narrowSelector",
                    "description": "<p>Expects a <code>narrowSelector</code> object that\nrepresents choices to be supplied to\nthe dropdown above the narrow navigation\nof link objects.</p>\n",
                    "line": 318,
                    "type": "object"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  HostListener,\n  Input,\n  Renderer2,\n  AfterContentInit\n} from '@angular/core';\nimport { Router, Event, NavigationEnd } from '@angular/router';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'sprk-masthead',\n  template: `\n    <header [ngClass]=\"getClasses()\" role=\"banner\" [attr.data-id]=\"idString\">\n      <div\n        class=\"sprk-c-Masthead__content sprk-o-Stack__item sprk-o-Stack sprk-o-Stack--split@xxs\"\n      >\n        <div\n          class=\"sprk-c-Masthead__menu sprk-o-Stack__item sprk-o-Stack__item--center-column@xxs\"\n        >\n          <button\n            class=\"sprk-c-Menu\"\n            type=\"button\"\n            [attr.aria-expanded]=\"isNarrowNavOpen ? true : false\"\n            (click)=\"toggleNarrowNav($event)\"\n            data-sprk-mobile-nav-trigger=\"mobileNav\"\n          >\n            <span class=\"sprk-u-ScreenReaderText\">Toggle Navigation</span>\n            <svg\n              [ngClass]=\"{\n                'sprk-c-Icon': true,\n                'sprk-c-Icon--l': true,\n                'sprk-c-Menu__icon': true,\n                'sprk-c-Menu__icon--open': isNarrowNavOpen\n              }\"\n              aria-hidden=\"true\"\n              viewBox=\"0 0 64 64\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <g>\n                <path\n                  class=\"sprk-c-Menu__line sprk-c-Menu__line--two\"\n                  d=\"m8 32h48\"\n                />\n                <path\n                  class=\"sprk-c-Menu__line sprk-c-Menu__line--one\"\n                  d=\"m8 18.68h48\"\n                />\n                <path\n                  class=\"sprk-c-Menu__line sprk-c-Menu__line--three\"\n                  d=\"m8 45.32h48\"\n                />\n              </g>\n            </svg>\n          </button>\n        </div>\n\n        <div\n          class=\"sprk-c-Masthead__branding sprk-o-Stack__item sprk-o-Stack__item--center-column@xxs\"\n        >\n          <sprk-link [href]=\"logoHref\" linkType=\"unstyled\">\n            <ng-content select=\"[logo-slot]\"></ng-content>\n            <span class=\"sprk-u-ScreenReaderText\">{{\n              logoLinkScreenReaderText\n            }}</span>\n          </sprk-link>\n        </div>\n\n        <div\n          class=\"sprk-c-Masthead__nav-item sprk-o-Stack__item sprk-o-Stack__item--center-column@xxs\"\n        >\n          <ng-content select=\"[navItem-slot]\"></ng-content>\n        </div>\n        <nav\n          class=\"\n          sprk-c-Masthead__little-nav\n          sprk-o-Stack__item\n          sprk-o-Stack__item--flex@xxs\n          sprk-o-Stack\n          sprk-o-Stack--misc-a\n          sprk-o-Stack--split@xxs\n          sprk-o-Stack--end-row\"\n          role=\"navigation\"\n        >\n          <ng-content select=\"[little-nav-slot]\"></ng-content>\n\n          <ng-content select=\"[utility-slot]\"></ng-content>\n        </nav>\n      </div>\n\n      <div class=\"sprk-o-Stack__item\">\n        <nav\n          class=\"sprk-c-Masthead__big-nav\"\n          role=\"navigation\"\n          [attr.data-id]=\"idString\"\n          *ngIf=\"bigNavLinks\"\n        >\n          <ul [ngClass]=\"getSecondaryNavClasses()\">\n            <li\n              *ngFor=\"let link of bigNavLinks\"\n              [ngClass]=\"{\n                'sprk-c-Masthead__big-nav-item': true,\n                'sprk-o-Stack__item': true,\n                'sprk-c-Masthead__big-nav-item--open':\n                  link.focused && link.subNav\n              }\"\n              routerLinkActive=\"sprk-c-Masthead__big-nav-item--active\"\n              [attr.aria-haspopup]=\"link.subNav ? 'true' : null\"\n            >\n              <div *ngIf=\"link.subNav\">\n                <sprk-dropdown\n                  [choices]=\"link.subNav\"\n                  additionalTriggerClasses=\"sprk-b-Link--plain sprk-c-Masthead__link sprk-c-Masthead__link--big-nav\"\n                  additionalClasses=\"sprk-u-TextAlign--left\"\n                  triggerIconType=\"chevron-down\"\n                  [triggerText]=\"link.text\"\n                ></sprk-dropdown>\n              </div>\n              <div *ngIf=\"!link.subNav\">\n                <sprk-link\n                  linkType=\"plain\"\n                  additionalClasses=\"sprk-c-Masthead__link sprk-c-Masthead__link--big-nav\"\n                  [href]=\"link.href\"\n                >\n                  {{ link.text }}\n                </sprk-link>\n              </div>\n            </li>\n          </ul>\n        </nav>\n      </div>\n\n      <nav\n        *ngIf=\"isNarrowNavOpen\"\n        class=\"sprk-c-Masthead__narrow-nav\"\n        data-sprk-mobile-nav=\"mobileNav\"\n        role=\"navigation\"\n      >\n        <sprk-dropdown\n          *ngIf=\"narrowSelector\"\n          dropdownType=\"mastheadSelector\"\n          additionalClasses=\"sprk-c-Masthead__selector-dropdown\"\n          additionalTriggerClasses=\"\n            sprk-c-Masthead__selector\n            sprk-b-Link\n            sprk-b-Link--plain\n            sprk-o-Stack\n            sprk-o-Stack--split@xxs\n            sprk-o-Stack--center-column\"\n          additionalTriggerTextClasses=\"sprk-o-Stack__item sprk-o-Stack__item--flex@xxs\"\n          additionalIconClasses=\"sprk-Stack__item sprk-u-mrs\"\n          [triggerText]=\"narrowSelector['trigger'].text\"\n          selector=\"Select One\"\n          triggerIconType=\"chevron-down\"\n          [choices]=\"narrowSelector['choices']\"\n        >\n          <div\n            *ngIf=\"narrowSelector['footer']\"\n            class=\"sprk-c-Dropdown__footer sprk-u-TextAlign--center\"\n            sprkDropdownFooter\n          >\n            <sprk-link\n              linkType=\"unstyled\"\n              [analyticsString]=\"narrowSelector['footer'].analyticsString\"\n              [href]=\"narrowSelector['footer'].href\"\n              additionalClasses=\"sprk-c-Button sprk-c-Button--tertiary\"\n            >\n              {{ narrowSelector['footer'].text }}\n            </sprk-link>\n          </div>\n        </sprk-dropdown>\n\n        <sprk-masthead-accordion [additionalClasses]=\"getNarrowNavClasses()\">\n          <div *ngFor=\"let narrowLink of narrowNavLinks\">\n            <div *ngIf=\"narrowLink.subNav\">\n              <sprk-masthead-accordion-item\n                iconTypeOpen=\"chevron-down\"\n                iconTypeClosed=\"chevron-down\"\n                [leadingIcon]=\"narrowLink.leadingIcon\"\n                [isActive]=\"narrowLink.active\"\n                [title]=\"narrowLink.text\"\n              >\n                <ul\n                  class=\"sprk-b-List sprk-b-List--bare sprk-c-MastheadAccordion__details\"\n                >\n                  <li\n                    class=\"sprk-c-MastheadAccordion__item\"\n                    *ngFor=\"let subNavLink of narrowLink.subNav\"\n                  >\n                    <sprk-link\n                      linkType=\"unstyled\"\n                      additionalClasses=\"sprk-c-MastheadAccordion__summary\"\n                      [href]=\"subNavLink.href\"\n                    >\n                      <sprk-icon\n                        [iconType]=\"subNavLink.leadingIcon\"\n                        additionalClasses=\"sprk-c-Icon--stroke-current-color sprk-u-mrs\"\n                        *ngIf=\"subNavLink.leadingIcon\"\n                      ></sprk-icon>\n                      {{ subNavLink.text }}\n                    </sprk-link>\n                  </li>\n                </ul>\n              </sprk-masthead-accordion-item>\n            </div>\n            <div *ngIf=\"!narrowLink.subNav\">\n              <li\n                [ngClass]=\"{\n                  'sprk-c-MastheadAccordion__item': true,\n                  'sprk-c-MastheadAccordion__item--active': narrowLink.active\n                }\"\n              >\n                <sprk-link\n                  linkType=\"unstyled\"\n                  additionalClasses=\"sprk-c-MastheadAccordion__summary\"\n                  [href]=\"narrowLink.href\"\n                >\n                  <span class=\"sprk-c-MastheadAccordion__heading\">\n                    <sprk-icon\n                      [iconType]=\"narrowLink.leadingIcon\"\n                      additionalClasses=\"sprk-c-Icon--stroke-current-color sprk-u-mrs\"\n                      *ngIf=\"narrowLink.leadingIcon\"\n                    ></sprk-icon>\n                    {{ narrowLink.text }}\n                  </span>\n                </sprk-link>\n              </li>\n            </div>\n          </div>\n        </sprk-masthead-accordion>\n        <ng-content select=\"[narrowNavFooter]\"></ng-content>\n      </nav>\n    </header>\n  `\n})\nexport class SprkMastheadComponent implements AfterContentInit {\n  /**\n   * @ignore\n   */\n  constructor(private renderer: Renderer2, router: Router) {\n    router.events.subscribe((event: Event) => {\n      if (event instanceof NavigationEnd) {\n        this.closeNarrowNav();\n      }\n    });\n  }\n\n /**\n  *  The `href` value of the logo.\n  */\n  @Input()\n  logoHref = '/';\n  /**\n   * The value supplied will be used as\n   * screen reader text that is visually hidden\n   * for the link that wraps the logo.\n   */\n  @Input()\n  logoLinkScreenReaderText = 'Go to the homepage';\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * big navigation link container.\n   */\n  @Input()\n  additionalBigNavClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * narrow navigation container.\n   */\n  @Input()\n  additionalNarrowNavClasses: string;\n  /**\n   * Expects an array of link objects, to be\n   * represented in the narrow nav element\n   * of the Masthead component.\n   */\n  @Input()\n  narrowNavLinks: any[];\n  /**\n   * Represents the initial state of the\n   * narrow nav element of the Masthead component.\n   */\n  @Input()\n  isNarrowNavOpen = false;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  /**\n   * Expects an array of link objects, to be\n   * represented in the big nav element of\n   * the Masthead component.\n   */\n  @Input()\n  bigNavLinks: any[];\n  /**\n   * Expects a `narrowSelector` object that\n   * represents choices to be supplied to\n   * the dropdown above the narrow navigation\n   * of link objects.\n   */\n  @Input()\n  narrowSelector: object;\n\n  /**\n   * @ignore\n   */\n  iconType = 'chevron-down';\n  /**\n   * @ignore\n   */\n  componentID = _.uniqueId();\n  /**\n   * @ignore\n   */\n  controls_id = `sprk-narrow-navigation-item__${this.componentID}`;\n  /**\n   * @ignore\n   */\n  isScrolled = false;\n  /**\n   * @ignore\n   */\n  isNarrowLayout = false;\n  /**\n   * @ignore\n   */\n  scrollDirection = 'up';\n  /**\n   * @ignore\n   */\n  isHidden = false;\n  /**\n   * @ignore\n   */\n  isNarrowOnResize = false;\n  /**\n   * @ignore\n   */\n  scrollPosition = 0;\n  /**\n   * @ignore\n   */\n  throttledCheckScrollDirection = _.throttle(this.checkScrollDirection, 500);\n  /**\n   * @ignore\n   */\n  throttledUpdateLayoutState = _.throttle(this.updateLayoutState, 500);\n\n  /**\n   * @ignore\n   * Closes the narrow navigation menu\n   * if it is left open when\n   * the viewport is expanded.\n   */\n  @HostListener('window:orientationchange')\n  handleResizeEvent() {\n    this.closeNarrowNav();\n  }\n\n  /**\n   * @ignore\n   */\n  @HostListener('window:scroll', ['$event'])\n  onScroll(event): void {\n    window.scrollY >= 10 ? (this.isScrolled = true) : (this.isScrolled = false);\n    if (this.isNarrowLayout) {\n      this.throttledCheckScrollDirection();\n    }\n  }\n\n  /**\n   * @ignore\n   * Handles when viewport size changes to\n   * large while narrow nav is hidden.\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize(event): void {\n    this.isNarrowOnResize = this.isElementVisible('.sprk-c-Masthead__menu');\n    this.throttledUpdateLayoutState();\n  }\n\n  /**\n   * @ignore\n   */\n  updateLayoutState() {\n    if (this.isNarrowLayout !== this.isNarrowOnResize) {\n      this.isNarrowLayout = this.isNarrowOnResize;\n\n      // If is not narrow on resize update, make sure it's visible\n      if (!this.isNarrowLayout) {\n        this.isHidden = false;\n      }\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  ngAfterContentInit() {\n    this.isNarrowLayout = this.isElementVisible('.sprk-c-Masthead__menu');\n  }\n\n  /**\n   * @ignore\n   */\n  isElementVisible(selector) {\n    const element = document.querySelector(selector);\n    if (!element) {\n      return;\n    }\n    const elementDisplayValue = window.getComputedStyle(element).display;\n    const elementVisibilityValue = window.getComputedStyle(element).visibility;\n    const elementIsVisible =\n      elementDisplayValue === 'none' || elementVisibilityValue === 'hidden'\n        ? false\n        : true;\n    return elementIsVisible;\n  }\n\n  /**\n   * @ignore\n   */\n  scrollYDirection() {\n    const newScrollPos = window.scrollY;\n    if (newScrollPos < 0) {\n      return;\n    }\n    const diff = newScrollPos - this.scrollPosition;\n    const direction = diff > 0 ? 'down' : 'up';\n    this.scrollPosition = newScrollPos;\n    return direction;\n  }\n\n  /**\n   * @ignore\n   */\n  checkScrollDirection() {\n    const newDirection = this.scrollYDirection();\n    if (this.scrollDirection !== newDirection) {\n      this.scrollDirection = newDirection;\n      this.scrollDirection === 'down'\n        ? (this.isHidden = true)\n        : (this.isHidden = false);\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-c-Masthead', 'sprk-o-Stack'];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    if (this.isNarrowNavOpen) {\n      classArray.push('sprk-c-Masthead--open');\n    }\n\n    if (this.isScrolled) {\n      classArray.push('sprk-c-Masthead--scroll');\n    }\n\n    if (this.isHidden) {\n      classArray.push('sprk-c-Masthead--hidden');\n    }\n\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getNarrowNavClasses(): string {\n    const classArray: string[] = [];\n\n    if (this.additionalNarrowNavClasses) {\n      this.additionalNarrowNavClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getSecondaryNavClasses(): string {\n    const classArray: string[] = [\n      'sprk-c-Masthead__big-nav-items',\n      'sprk-o-Stack',\n      'sprk-o-Stack--misc-a',\n      'sprk-o-Stack--center-row',\n      'sprk-o-Stack--split@xxs',\n      'sprk-b-List',\n      'sprk-b-List--bare'\n    ];\n\n    if (this.additionalBigNavClasses) {\n      this.additionalBigNavClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  toggleNarrowNav(event): void {\n    event.preventDefault();\n    if (this.isNarrowNavOpen) {\n      this.closeNarrowNav();\n    } else {\n      this.openNarrowNav();\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  openNarrowNav(): void {\n    this.renderer.addClass(document.body, 'sprk-u-Overflow--hidden');\n    this.renderer.addClass(\n      document.body.parentElement,\n      'sprk-u-Overflow--hidden'\n    );\n    this.renderer.addClass(document.body, 'sprk-u-Height--100');\n    this.renderer.addClass(document.body.parentElement, 'sprk-u-Height--100');\n    this.isNarrowNavOpen = true;\n  }\n\n  /**\n   * @ignore\n   */\n  closeNarrowNav(): void {\n    this.renderer.removeClass(document.body, 'sprk-u-Overflow--hidden');\n    this.renderer.removeClass(\n      document.body.parentElement,\n      'sprk-u-Overflow--hidden'\n    );\n    this.renderer.removeClass(document.body, 'sprk-u-Height--100');\n    this.renderer.removeClass(\n      document.body.parentElement,\n      'sprk-u-Height--100'\n    );\n    this.isNarrowNavOpen = false;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "AfterContentInit"
            ]
        },
        {
            "name": "SprkModalComponent",
            "id": "component-SprkModalComponent-fd4c2dcb465db8b1810cc320efb3da5a",
            "file": "projects/spark-angular/src/lib/components/sprk-modal/sprk-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sprk-modal",
            "styleUrls": [],
            "styles": [],
            "template": "<div\n  *ngIf=\"isVisible\"\n  [ngClass]=\"{\n    'sprk-c-Modal': true,\n    'sprk-c-Modal--wait': modalType === 'wait'\n  }\"\n  role=\"dialog\"\n  tabindex=\"1\"\n  [attr.aria-labelledby]=\"heading_id\"\n  aria-modal=\"true\"\n  [attr.aria-describedby]=\"content_id\"\n  [attr.data-id]=\"idString\"\n>\n  <div class=\"sprk-o-Stack sprk-o-Stack--large\">\n    <header class=\"sprk-o-Stack__item sprk-c-Modal__header\">\n      <h2\n        class=\"sprk-c-Modal__heading sprk-b-TypeDisplayFour\"\n        [id]=\"heading_id\"\n      >\n        {{ title }}\n      </h2>\n\n      <button\n        *ngIf=\"modalType != 'wait'\"\n        class=\"sprk-c-Modal__icon\"\n        type=\"button\"\n        aria-label=\"Close Modal\"\n        (click)=\"closeModal($event)\"\n      >\n        <sprk-icon\n          iconType=\"close\"\n          additionalClasses=\"sprk-c-Icon--stroke-current-color\"\n        ></sprk-icon>\n      </button>\n    </header>\n\n    <div\n      class=\"sprk-o-Stack__item sprk-c-Modal__body sprk-o-Stack sprk-o-Stack--medium\"\n    >\n      <div\n        *ngIf=\"modalType == 'wait'\"\n        class=\"sprk-o-Stack__item sprk-c-Spinner sprk-c-Spinner--circle sprk-c-Spinner--large sprk-c-Spinner--dark\"\n      ></div>\n      <ng-content></ng-content>\n    </div>\n\n    <footer\n      *ngIf=\"modalType === 'choice'\"\n      class=\"sprk-o-Stack__item sprk-c-Modal__footer\"\n    >\n      <button\n        class=\"sprk-c-Button sprk-u-mrm\"\n        [attr.data-analytics]=\"confirmAnalyticsString\"\n        (click)=\"emitConfirmClick($event)\"\n      >\n        {{ confirmText }}\n      </button>\n\n      <button\n        class=\"sprk-c-Button sprk-c-Button--tertiary\"\n        [attr.data-analytics]=\"cancelAnalyticsString\"\n        (click)=\"emitCancelClick($event)\"\n      >\n        {{ cancelText }}\n      </button>\n    </footer>\n  </div>\n</div>\n\n<div\n  *ngIf=\"isVisible\"\n  class=\"sprk-c-ModalMask\"\n  tabindex=\"-1\"\n  (click)=\"closeModal($event)\"\n></div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "cancelAnalyticsString",
                    "description": "<p>The value supplied will be assigned to the\n<code>data-analytics</code> attribute\non the cancel button. Intended\nfor an outside library to capture data.</p>\n",
                    "line": 126,
                    "type": "string"
                },
                {
                    "name": "cancelText",
                    "defaultValue": "'Cancel'",
                    "description": "<p>The value supplied will be rendered\nas the text for the cancel button.</p>\n",
                    "line": 110
                },
                {
                    "name": "confirmAnalyticsString",
                    "description": "<p>The value supplied will be assigned to the\n<code>data-analytics</code> attribute\non the confirm button. Intended\nfor an outside library to capture data.</p>\n",
                    "line": 118,
                    "type": "string"
                },
                {
                    "name": "confirmText",
                    "defaultValue": "'Confirm'",
                    "description": "<p>The value supplied will be\nrendered as the text for the confirm button.</p>\n",
                    "line": 104
                },
                {
                    "name": "idString",
                    "description": "<p>The value supplied will be assigned\nto the <code>data-id</code> attribute on the\ncomponent. This is intended to be\nused as a selector for automated\ntools. This value should be unique\nper page.</p>\n",
                    "line": 136,
                    "type": "string"
                },
                {
                    "name": "isVisible",
                    "defaultValue": "false",
                    "description": "<p>If <code>true</code>, the Modal will be shown.\nIf <code>false</code>, the modal will not be shown.</p>\n",
                    "line": 142
                },
                {
                    "name": "modalType",
                    "description": "<p>This determines the variant of the Modal.\nCan be <code>choice</code>, <code>info</code>, or <code>wait</code>.</p>\n",
                    "line": 98,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 92,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "cancelClick",
                    "defaultValue": "new EventEmitter<any>()",
                    "description": "<p>Available when the Modal type is <code>choice</code>.\nThe Modal will emit a cancel click event\nwhen the cancel link is clicked.\nA callback function can be triggered if supplied.</p>\n",
                    "line": 166,
                    "type": "EventEmitter"
                },
                {
                    "name": "confirmClick",
                    "defaultValue": "new EventEmitter<any>()",
                    "description": "<p>Available when the Modal type is <code>choice</code>.\nThe Modal will emit a confirm click event\nwhen the confirmation button is clicked.\nA callback function can be triggered if\nsupplied.</p>\n",
                    "line": 158,
                    "type": "EventEmitter"
                },
                {
                    "name": "hide",
                    "defaultValue": "new EventEmitter<any>()",
                    "description": "<p>When the Modal is closed the hide event is\nemitted and a callback function can\nbe triggered if supplied.</p>\n",
                    "line": 149,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "emitCancelClick",
                    "args": [
                        {
                            "name": "event",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 217,
                    "description": "<p>Emits an event when the cancel\nlink is clicked.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emitConfirmClick",
                    "args": [
                        {
                            "name": "event",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 209,
                    "description": "<p>Emits an event when the confirmation\nbutton is clicked.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output\n} from '@angular/core';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'sprk-modal',\n  template: `\n    <div\n      *ngIf=\"isVisible\"\n      [ngClass]=\"{\n        'sprk-c-Modal': true,\n        'sprk-c-Modal--wait': modalType === 'wait'\n      }\"\n      role=\"dialog\"\n      tabindex=\"1\"\n      [attr.aria-labelledby]=\"heading_id\"\n      aria-modal=\"true\"\n      [attr.aria-describedby]=\"content_id\"\n      [attr.data-id]=\"idString\"\n    >\n      <div class=\"sprk-o-Stack sprk-o-Stack--large\">\n        <header class=\"sprk-o-Stack__item sprk-c-Modal__header\">\n          <h2\n            class=\"sprk-c-Modal__heading sprk-b-TypeDisplayFour\"\n            [id]=\"heading_id\"\n          >\n            {{ title }}\n          </h2>\n\n          <button\n            *ngIf=\"modalType != 'wait'\"\n            class=\"sprk-c-Modal__icon\"\n            type=\"button\"\n            aria-label=\"Close Modal\"\n            (click)=\"closeModal($event)\"\n          >\n            <sprk-icon\n              iconType=\"close\"\n              additionalClasses=\"sprk-c-Icon--stroke-current-color\"\n            ></sprk-icon>\n          </button>\n        </header>\n\n        <div\n          class=\"sprk-o-Stack__item sprk-c-Modal__body sprk-o-Stack sprk-o-Stack--medium\"\n        >\n          <div\n            *ngIf=\"modalType == 'wait'\"\n            class=\"sprk-o-Stack__item sprk-c-Spinner sprk-c-Spinner--circle sprk-c-Spinner--large sprk-c-Spinner--dark\"\n          ></div>\n          <ng-content></ng-content>\n        </div>\n\n        <footer\n          *ngIf=\"modalType === 'choice'\"\n          class=\"sprk-o-Stack__item sprk-c-Modal__footer\"\n        >\n          <button\n            class=\"sprk-c-Button sprk-u-mrm\"\n            [attr.data-analytics]=\"confirmAnalyticsString\"\n            (click)=\"emitConfirmClick($event)\"\n          >\n            {{ confirmText }}\n          </button>\n\n          <button\n            class=\"sprk-c-Button sprk-c-Button--tertiary\"\n            [attr.data-analytics]=\"cancelAnalyticsString\"\n            (click)=\"emitCancelClick($event)\"\n          >\n            {{ cancelText }}\n          </button>\n        </footer>\n      </div>\n    </div>\n\n    <div\n      *ngIf=\"isVisible\"\n      class=\"sprk-c-ModalMask\"\n      tabindex=\"-1\"\n      (click)=\"closeModal($event)\"\n    ></div>\n  `\n})\nexport class SprkModalComponent {\n  @Input()\n  title: string;\n  /**\n   * This determines the variant of the Modal.\n   * Can be `choice`, `info`, or `wait`.\n   */\n  @Input()\n  modalType: string;\n  /**\n   * The value supplied will be\n   * rendered as the text for the confirm button.\n   */\n  @Input()\n  confirmText = 'Confirm';\n  /**\n   * The value supplied will be rendered\n   * as the text for the cancel button.\n   */\n  @Input()\n  cancelText = 'Cancel';\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute\n   * on the confirm button. Intended\n   * for an outside library to capture data.\n   */\n  @Input()\n  confirmAnalyticsString: string;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute\n   * on the cancel button. Intended\n   * for an outside library to capture data.\n   */\n  @Input()\n  cancelAnalyticsString: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  /**\n   * If `true`, the Modal will be shown.\n   * If `false`, the modal will not be shown.\n   */\n  @Input()\n  isVisible = false;\n  /**\n   * When the Modal is closed the hide event is\n   * emitted and a callback function can\n   * be triggered if supplied.\n   */\n  @Output()\n  hide = new EventEmitter<any>();\n  /**\n   * Available when the Modal type is `choice`.\n   * The Modal will emit a confirm click event\n   * when the confirmation button is clicked.\n   * A callback function can be triggered if\n   * supplied.\n   */\n  @Output()\n  confirmClick = new EventEmitter<any>();\n  /**\n   * Available when the Modal type is `choice`.\n   * The Modal will emit a cancel click event\n   * when the cancel link is clicked.\n   * A callback function can be triggered if supplied.\n   */\n  @Output()\n  cancelClick = new EventEmitter<any>();\n  /**\n   * @ignore\n   */\n  componentID = _.uniqueId();\n  /**\n   * @ignore\n   */\n  heading_id = `modalHeading__${this.componentID}`;\n  /**\n   * @ignore\n   */\n  content_id = `modalContent__${this.componentID}`;\n\n  /**\n   * @ignore\n   */\n  @HostListener('document:keydown', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent) {\n    if (this.isVisible && event.key === 'Escape') {\n      this.closeModal(event);\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  constructor() {}\n\n  /**\n   * @ignore\n   */\n  closeModal(event): void {\n    if (this.modalType !== 'wait') {\n      event.preventDefault();\n      this.hide.emit(event);\n    }\n  }\n\n  /**\n   * Emits an event when the confirmation\n   * button is clicked.\n   */\n  emitConfirmClick(event): void {\n    this.confirmClick.emit(event);\n  }\n\n  /**\n   * Emits an event when the cancel\n   * link is clicked.\n   */\n  emitCancelClick(event): void {\n    event.preventDefault();\n    this.cancelClick.emit(event);\n    this.closeModal(event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SprkOrderedListComponent",
            "id": "component-SprkOrderedListComponent-5dfb1266cc2c53ed663c59f17ddc697c",
            "file": "projects/spark-angular/src/lib/components/sprk-ordered-list/sprk-ordered-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sprk-ordered-list",
            "styleUrls": [],
            "styles": [],
            "template": "<ol [ngClass]=\"getClasses()\" [attr.data-id]=\"idString\">\n  <li\n    *ngFor=\"let item of items\"\n    [attr.data-analytics]=\"item.analyticsString\"\n    [attr.data-id]=\"item.idString\"\n    [ngClass]=\"item.additionalClasses\"\n  >\n    <ng-container [ngTemplateOutlet]=\"item.content\"></ng-container>\n  </li>\n</ol>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\ncomponent.</p>\n",
                    "line": 32,
                    "type": "string"
                },
                {
                    "name": "idString",
                    "description": "<p>The value supplied will be assigned\nto the <code>data-id</code> attribute on the\ncomponent. This is intended to be\nused as a selector for automated\ntools. This value should be unique\nper page.</p>\n",
                    "line": 42,
                    "type": "string"
                },
                {
                    "name": "listType",
                    "description": "<p>Will cause the appropriate variant type to render.\nCan be <code>bare</code> or <code>indented</code>.</p>\n",
                    "line": 25,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "items",
                    "type": "QueryList<SprkListItemComponent>",
                    "optional": false,
                    "description": "<p>This component expects children\ncomponents of <code>&lt;sprk-list-item&gt;&lt;/&lt;sprk-list-item&gt;</code>.</p>\n",
                    "line": 48,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "SprkListItemComponent"
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, ContentChildren, QueryList } from '@angular/core';\nimport { SprkListItemComponent } from '../sprk-list-item/sprk-list-item.component';\n\n@Component({\n  selector: 'sprk-ordered-list',\n  template: `\n    <ol [ngClass]=\"getClasses()\" [attr.data-id]=\"idString\">\n      <li\n        *ngFor=\"let item of items\"\n        [attr.data-analytics]=\"item.analyticsString\"\n        [attr.data-id]=\"item.idString\"\n        [ngClass]=\"item.additionalClasses\"\n      >\n        <ng-container [ngTemplateOutlet]=\"item.content\"></ng-container>\n      </li>\n    </ol>\n  `\n})\nexport class SprkOrderedListComponent {\n  /**\n   * Will cause the appropriate variant type to render.\n   * Can be `bare` or `indented`.\n   */\n  @Input()\n  listType: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n\n  /**\n   * This component expects children\n   * components of `<sprk-list-item></<sprk-list-item>`.\n   */\n  @ContentChildren(SprkListItemComponent) items: QueryList<\n    SprkListItemComponent\n  >;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-b-List'];\n\n    switch (this.listType) {\n      case 'indented':\n        classArray.push('sprk-b-List--indented');\n        break;\n      case 'bare':\n        classArray.push('sprk-b-List--bare');\n        break;\n      default:\n        break;\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 76
            }
        },
        {
            "name": "SprkPaginationComponent",
            "id": "component-SprkPaginationComponent-f9bd35f6c3e0a49dfa011f09f425b381",
            "file": "projects/spark-angular/src/lib/components/sprk-pagination/sprk-pagination.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sprk-pagination",
            "styleUrls": [],
            "styles": [],
            "template": "<nav\n  aria-label=\"Pagination Navigation\"\n  [ngClass]=\"getClasses()\"\n  [attr.data-id]=\"idString\"\n>\n  <sprk-unordered-list\n    listType=\"horizontal\"\n    additionalClasses=\"sprk-c-Pagination sprk-o-HorizontalList--spacing-medium\"\n  >\n    <sprk-list-item>\n      <sprk-link\n        linkType=\"plain\"\n        (click)=\"goBack($event, currentPage)\"\n        [isDisabled]=\"currentPage === 1\"\n        additionalClasses=\"sprk-c-Pagination__icon\"\n        [analyticsString]=\"analyticsStringLinkPrev\"\n        ariaLabel=\"Previous Page\"\n      >\n        <span class=\"sprk-u-ScreenReaderText\">{{ prevLinkText }}</span>\n        <sprk-icon\n          additionalClasses=\"sprk-c-Icon--stroke-current-color\"\n          iconType=\"chevron-left\"\n        ></sprk-icon>\n      </sprk-link>\n    </sprk-list-item>\n\n    <sprk-list-item *ngIf=\"showNumbers()\">\n      <sprk-link\n        (click)=\"goToPage($event, 1)\"\n        additionalClasses=\"sprk-c-Pagination__link {{\n          currentPage === 1 && 'sprk-c-Pagination__link--current'\n        }}\"\n        [analyticsString]=\"analyticsStringFirstLink\"\n        [ariaCurrent]=\"currentPage === 1\"\n        ariaLabel=\"Page 1\"\n      >\n        1\n      </sprk-link>\n    </sprk-list-item>\n\n    <sprk-list-item\n      *ngIf=\"showNumbers() && currentPage !== 2 && totalPages() === 3\"\n    >\n      <sprk-link\n        (click)=\"goToPage($event, 2)\"\n        additionalClasses=\"sprk-c-Pagination__link\"\n        [ariaCurrent]=\"false\"\n        ariaLabel=\"Page 2\"\n      >\n        2\n      </sprk-link>\n    </sprk-list-item>\n\n    <sprk-list-item\n      *ngIf=\"showNumbers() && currentPage > 2 && totalPages() > 3\"\n    >\n      ...\n    </sprk-list-item>\n\n    <sprk-list-item\n      *ngIf=\"showNumbers() && currentPage > 1 && currentPage < totalPages()\"\n    >\n      <sprk-link\n        (click)=\"goToPage($event, currentPage)\"\n        additionalClasses=\"sprk-c-Pagination__link sprk-c-Pagination__link--current\"\n        ariaCurrent=\"true\"\n        [analyticsString]=\"analyticsStringSecondLink\"\n        ariaLabel=\"Page {{ currentPage }}\"\n      >\n        {{ currentPage }}\n      </sprk-link>\n    </sprk-list-item>\n\n    <sprk-list-item\n      *ngIf=\"\n        showNumbers() && currentPage < totalPages() - 1 && totalPages() > 3\n      \"\n    >\n      ...\n    </sprk-list-item>\n\n    <sprk-list-item *ngIf=\"showNumbers() && totalPages() > 1\">\n      <sprk-link\n        (click)=\"goToPage($event, totalPages())\"\n        additionalClasses=\"sprk-c-Pagination__link {{\n          currentPage === totalPages() && 'sprk-c-Pagination__link--current'\n        }}\"\n        ariaLabel=\"Page {{ totalPages() }}\"\n        [analyticsString]=\"analyticsStringThirdLink\"\n        [ariaCurrent]=\"currentPage === totalPages()\"\n      >\n        {{ totalPages() }}\n      </sprk-link>\n    </sprk-list-item>\n\n    <sprk-list-item>\n      <sprk-link\n        linkType=\"plain\"\n        [isDisabled]=\"isLastPage()\"\n        (click)=\"goForward($event, currentPage)\"\n        additionalClasses=\"sprk-c-Pagination__icon\"\n        [analyticsString]=\"analyticsStringLinkNext\"\n        ariaLabel=\"Next Page\"\n      >\n        <span class=\"sprk-u-ScreenReaderText\">{{ nextLinkText }}</span>\n        <sprk-icon\n          additionalClasses=\"sprk-c-Icon--stroke-current-color\"\n          iconType=\"chevron-right\"\n        ></sprk-icon>\n      </sprk-link>\n    </sprk-list-item>\n  </sprk-unordered-list>\n</nav>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\ncomponent.</p>\n",
                    "line": 152,
                    "type": "string"
                },
                {
                    "name": "analyticsStringFirstLink",
                    "description": "<p>The value supplied will be assigned\nto the <code>data-analytics</code> attribute on\nthe first link. Intended for an outside\nlibrary to capture data.</p>\n",
                    "line": 171,
                    "type": "string"
                },
                {
                    "name": "analyticsStringLinkNext",
                    "description": "<p>The value supplied will be assigned\nto the <code>data-analytics</code> attribute on\nthe &quot;Next&quot; link. Intended for an outside\nlibrary to capture data.</p>\n",
                    "line": 195,
                    "type": "string"
                },
                {
                    "name": "analyticsStringLinkPrev",
                    "description": "<p>The value supplied will be assigned\nto the <code>data-analytics</code> attribute on\nthe &quot;Prev&quot; link. Intended for an outside\nlibrary to capture data.</p>\n",
                    "line": 203,
                    "type": "string"
                },
                {
                    "name": "analyticsStringSecondLink",
                    "description": "<p>The value supplied will be assigned\nto the <code>data-analytics</code> attribute on\nthe second link. Intended for an outside\nlibrary to capture data.</p>\n",
                    "line": 179,
                    "type": "string"
                },
                {
                    "name": "analyticsStringThirdLink",
                    "description": "<p>The value supplied will be assigned\nto the <code>data-analytics</code> attribute on\nthe third link. Intended for an outside\nlibrary to capture data.</p>\n",
                    "line": 187,
                    "type": "string"
                },
                {
                    "name": "currentPage",
                    "description": "<p>The current page number.\nIn the Default and Long variants,\nthis value corresponds to the active page link.</p>\n",
                    "line": 226,
                    "type": "number"
                },
                {
                    "name": "idString",
                    "description": "<p>The value supplied will be assigned\nto the <code>data-id</code> attribute on the\ncomponent. This is intended to be\nused as a selector for automated\ntools. This value should be unique\nper page.</p>\n",
                    "line": 213,
                    "type": "string"
                },
                {
                    "name": "itemsPerPage",
                    "description": "<p>The total number of items\nto render per page. This is\nused to calculate the number of pages.</p>\n",
                    "line": 145,
                    "type": "number"
                },
                {
                    "name": "nextLinkText",
                    "defaultValue": "'Next'",
                    "description": "<p>Screen reader text for the &quot;Next Page&quot; icon.</p>\n",
                    "line": 157
                },
                {
                    "name": "paginationType",
                    "defaultValue": "'default'",
                    "description": "<p>If set to <code>pager</code>, the component will render\nin the Pager variant with no visible number\nlinks. Otherwise, the component will render in\nthe Default variant if there three or fewer\npages or in the Long variant if there are\nmore than three pages.</p>\n",
                    "line": 131
                },
                {
                    "name": "prevLinkText",
                    "defaultValue": "'Prev'",
                    "description": "<p>Screen reader text for the &quot;Previous Page&quot;\nicon.</p>\n",
                    "line": 163
                },
                {
                    "name": "totalItems",
                    "description": "<p>The total number of items in the\npaged data. This is used to calculate\nthe number of pages.</p>\n",
                    "line": 138,
                    "type": "number"
                }
            ],
            "outputsClass": [
                {
                    "name": "nextClick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Accepts a function\nto run when the next link is clicked.\nOn click, <code>nextClick</code> will emit the click event and current page.</p>\n",
                    "line": 253,
                    "type": "EventEmitter"
                },
                {
                    "name": "pageClick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Accepts a function to run when the individual page\nlinks are clicked. On click, <code>pageClick</code> will\nemit the click event and current page.</p>\n",
                    "line": 260,
                    "type": "EventEmitter"
                },
                {
                    "name": "previousClick",
                    "defaultValue": "new EventEmitter()",
                    "description": "<p>Accepts a function to run when the\nprevious link is clicked.\nOn click, <code>previousClick</code>\nwill emit the click event and current page.</p>\n",
                    "line": 246,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'sprk-pagination',\n  template: `\n    <nav\n      aria-label=\"Pagination Navigation\"\n      [ngClass]=\"getClasses()\"\n      [attr.data-id]=\"idString\"\n    >\n      <sprk-unordered-list\n        listType=\"horizontal\"\n        additionalClasses=\"sprk-c-Pagination sprk-o-HorizontalList--spacing-medium\"\n      >\n        <sprk-list-item>\n          <sprk-link\n            linkType=\"plain\"\n            (click)=\"goBack($event, currentPage)\"\n            [isDisabled]=\"currentPage === 1\"\n            additionalClasses=\"sprk-c-Pagination__icon\"\n            [analyticsString]=\"analyticsStringLinkPrev\"\n            ariaLabel=\"Previous Page\"\n          >\n            <span class=\"sprk-u-ScreenReaderText\">{{ prevLinkText }}</span>\n            <sprk-icon\n              additionalClasses=\"sprk-c-Icon--stroke-current-color\"\n              iconType=\"chevron-left\"\n            ></sprk-icon>\n          </sprk-link>\n        </sprk-list-item>\n\n        <sprk-list-item *ngIf=\"showNumbers()\">\n          <sprk-link\n            (click)=\"goToPage($event, 1)\"\n            additionalClasses=\"sprk-c-Pagination__link {{\n              currentPage === 1 && 'sprk-c-Pagination__link--current'\n            }}\"\n            [analyticsString]=\"analyticsStringFirstLink\"\n            [ariaCurrent]=\"currentPage === 1\"\n            ariaLabel=\"Page 1\"\n          >\n            1\n          </sprk-link>\n        </sprk-list-item>\n\n        <sprk-list-item\n          *ngIf=\"showNumbers() && currentPage !== 2 && totalPages() === 3\"\n        >\n          <sprk-link\n            (click)=\"goToPage($event, 2)\"\n            additionalClasses=\"sprk-c-Pagination__link\"\n            [ariaCurrent]=\"false\"\n            ariaLabel=\"Page 2\"\n          >\n            2\n          </sprk-link>\n        </sprk-list-item>\n\n        <sprk-list-item\n          *ngIf=\"showNumbers() && currentPage > 2 && totalPages() > 3\"\n        >\n          ...\n        </sprk-list-item>\n\n        <sprk-list-item\n          *ngIf=\"showNumbers() && currentPage > 1 && currentPage < totalPages()\"\n        >\n          <sprk-link\n            (click)=\"goToPage($event, currentPage)\"\n            additionalClasses=\"sprk-c-Pagination__link sprk-c-Pagination__link--current\"\n            ariaCurrent=\"true\"\n            [analyticsString]=\"analyticsStringSecondLink\"\n            ariaLabel=\"Page {{ currentPage }}\"\n          >\n            {{ currentPage }}\n          </sprk-link>\n        </sprk-list-item>\n\n        <sprk-list-item\n          *ngIf=\"\n            showNumbers() && currentPage < totalPages() - 1 && totalPages() > 3\n          \"\n        >\n          ...\n        </sprk-list-item>\n\n        <sprk-list-item *ngIf=\"showNumbers() && totalPages() > 1\">\n          <sprk-link\n            (click)=\"goToPage($event, totalPages())\"\n            additionalClasses=\"sprk-c-Pagination__link {{\n              currentPage === totalPages() && 'sprk-c-Pagination__link--current'\n            }}\"\n            ariaLabel=\"Page {{ totalPages() }}\"\n            [analyticsString]=\"analyticsStringThirdLink\"\n            [ariaCurrent]=\"currentPage === totalPages()\"\n          >\n            {{ totalPages() }}\n          </sprk-link>\n        </sprk-list-item>\n\n        <sprk-list-item>\n          <sprk-link\n            linkType=\"plain\"\n            [isDisabled]=\"isLastPage()\"\n            (click)=\"goForward($event, currentPage)\"\n            additionalClasses=\"sprk-c-Pagination__icon\"\n            [analyticsString]=\"analyticsStringLinkNext\"\n            ariaLabel=\"Next Page\"\n          >\n            <span class=\"sprk-u-ScreenReaderText\">{{ nextLinkText }}</span>\n            <sprk-icon\n              additionalClasses=\"sprk-c-Icon--stroke-current-color\"\n              iconType=\"chevron-right\"\n            ></sprk-icon>\n          </sprk-link>\n        </sprk-list-item>\n      </sprk-unordered-list>\n    </nav>\n  `\n})\nexport class SprkPaginationComponent {\n  /**\n   * If set to `pager`, the component will render\n   * in the Pager variant with no visible number\n   * links. Otherwise, the component will render in\n   * the Default variant if there three or fewer\n   * pages or in the Long variant if there are\n   * more than three pages.\n   */\n  @Input()\n  paginationType = 'default';\n  /**\n   * The total number of items in the\n   * paged data. This is used to calculate\n   * the number of pages.\n   */\n  @Input()\n  totalItems: number;\n  /**\n   * The total number of items\n   * to render per page. This is\n   * used to calculate the number of pages.\n   */\n  @Input()\n  itemsPerPage: number;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Screen reader text for the \"Next Page\" icon.\n   */\n  @Input()\n  nextLinkText = 'Next';\n  /**\n   * Screen reader text for the \"Previous Page\"\n   * icon.\n   */\n  @Input()\n  prevLinkText = 'Prev';\n  /**\n   * The value supplied will be assigned\n   * to the `data-analytics` attribute on\n   * the first link. Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsStringFirstLink: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-analytics` attribute on\n   * the second link. Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsStringSecondLink: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-analytics` attribute on\n   * the third link. Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsStringThirdLink: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-analytics` attribute on\n   * the \"Next\" link. Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsStringLinkNext: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-analytics` attribute on\n   * the \"Prev\" link. Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsStringLinkPrev: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n\n  /**\n   * @ignore\n   */\n  private _currentPage = 1;\n\n  /**\n   * The current page number.\n   * In the Default and Long variants,\n   * this value corresponds to the active page link.\n   */\n  @Input()\n  set currentPage(value: number) {\n    if (value > this.totalPages()) {\n      value = this.totalPages();\n    } else if (value < 1) {\n      value = 1;\n    }\n\n    this._currentPage = value;\n  }\n  get currentPage(): number {\n    return this._currentPage;\n  }\n\n  /**\n   * Accepts a function to run when the\n   * previous link is clicked.\n   * On click, `previousClick`\n   * will emit the click event and current page.\n   */\n  @Output()\n  previousClick = new EventEmitter();\n  /**\n   * Accepts a function\n   * to run when the next link is clicked.\n   * On click, `nextClick` will emit the click event and current page.\n   */\n  @Output()\n  nextClick = new EventEmitter();\n  /**\n   * Accepts a function to run when the individual page\n   * links are clicked. On click, `pageClick` will\n   * emit the click event and current page.\n   */\n  @Output()\n  pageClick = new EventEmitter();\n\n  /**\n   * @ignore\n   */\n  goToPage(event, page): void {\n    event.preventDefault();\n    this.currentPage = page;\n    this.pageClick.emit({ event, page });\n  }\n\n  /**\n   * @ignore\n   */\n  goBack(event, page): void {\n    event.preventDefault();\n    let newPage = page;\n\n    if (this.currentPage > 1) {\n      newPage = this.currentPage - 1;\n      this.currentPage = newPage;\n    }\n\n    // Page is still returning the old page. This allows us to\n    // close Issue 1401 without introducing a breaking change.\n    this.previousClick.emit({ event, page, newPage });\n  }\n\n  /**\n   * @ignore\n   */\n  goForward(event, page): void {\n    event.preventDefault();\n    let newPage = page;\n\n    if (this.currentPage < this.totalPages()) {\n      newPage = this.currentPage + 1;\n      this.currentPage = newPage;\n    }\n\n    // Page is still returning the old page. This allows us to\n    // close Issue 1401 without introducing a breaking change.\n    this.nextClick.emit({ event, page, newPage });\n  }\n\n  /**\n   * @ignore\n   * @returns total number of pages based on total\n   * number of items and the desired number of\n   * items to show per page.\n   */\n  totalPages(): number {\n    return Math.ceil(this.totalItems / this.itemsPerPage);\n  }\n\n  /**\n   * @ignore\n   * @returns true if currently on the last page.\n   */\n  isLastPage(): boolean {\n    return this.currentPage === this.totalPages();\n  }\n\n  /**\n   * @ignore\n   * @returns true if the component is in\n   * either the default or long variant.\n   */\n  showNumbers(): boolean {\n    return this.paginationType !== 'pager';\n  }\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = [''];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 345
            },
            "accessors": {
                "currentPage": {
                    "name": "currentPage",
                    "setSignature": {
                        "name": "currentPage",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": "number"
                            }
                        ],
                        "returnType": "void",
                        "line": 226,
                        "description": "<p>The current page number.\nIn the Default and Long variants,\nthis value corresponds to the active page link.</p>\n",
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "number",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "currentPage",
                        "type": "number",
                        "returnType": "number",
                        "line": 235
                    }
                }
            }
        },
        {
            "name": "SprkPromoComponent",
            "id": "component-SprkPromoComponent-60bec334d175315f10bd574098530b15",
            "file": "projects/spark-angular/src/lib/components/sprk-promo/sprk-promo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sprk-promo",
            "styleUrls": [],
            "styles": [],
            "template": "<div [ngClass]=\"getClasses()\" [attr.data-id]=\"idString\">\n  <sprk-link\n    linkType=\"unstyled\"\n    *ngIf=\"isFlag && !mediaRev\"\n    [additionalClasses]=\"getClassesFlag()\"\n    [href]=\"imgHref\"\n    [analyticsString]=\"flagLinkAnalytics\"\n  >\n    <img\n      class=\"sprk-c-Promo__image--flag\"\n      alt=\"{{ imgAlt }}\"\n      src=\"{{ imgSrc }}\"\n    />\n  </sprk-link>\n  <sprk-link\n    linkType=\"unstyled\"\n    *ngIf=\"imgSrc && !mediaRev && !isFlag\"\n    [href]=\"imgHref\"\n    [analyticsString]=\"imgLinkAnalytics\"\n    [additionalClasses]=\"getClassesImg()\"\n  >\n    <img\n      class=\"sprk-c-Promo__image\"\n      alt=\"{{ imgAlt }}\"\n      src=\"{{ imgSrc }}\"\n    />\n  </sprk-link>\n\n  <div [ngClass]=\"getClassesContent()\">\n    <h3\n      *ngIf=\"title\"\n      class=\"sprk-b-TypeDisplayFive sprk-o-Stack__item sprk-c-Promo__title\"\n    >\n      {{ title }}\n    </h3>\n\n    <div *ngIf=\"subtitle\" class=\"sprk-c-Promo__subtitle sprk-o-Stack__item\">\n      {{ subtitle }}\n    </div>\n\n    <div class=\"sprk-b-TypeBodyTwo sprk-o-Stack__item\">\n      <ng-content></ng-content>\n    </div>\n\n    <div *ngIf=\"cta === 'button'\" class=\"sprk-o-Stack__item\">\n      <sprk-link\n        linkType=\"unstyled\"\n        [href]=\"buttonHref\"\n        additionalClasses=\"sprk-c-Button\"\n        [analyticsString]=\"buttonLinkAnalytics\"\n      >\n        {{ ctaText }}\n      </sprk-link>\n    </div>\n\n    <sprk-link\n      linkType=\"simple\"\n      *ngIf=\"cta === 'link'\"\n      [href]=\"ctaLinkHref\"\n      additionalClasses=\"sprk-o-Stack__item\"\n      [analyticsString]=\"ctaLinkAnalytics\"\n    >\n      {{ ctaText }}\n    </sprk-link>\n  </div>\n\n  <sprk-link\n    linkType=\"unstyled\"\n    *ngIf=\"isFlag && mediaRev\"\n    [href]=\"imgHref\"\n    [additionalClasses]=\"getClassesFlag()\"\n    [analyticsString]=\"flagLinkAnalytics\"\n  >\n    <img\n      class=\"sprk-c-Promo__image--flag\"\n      alt=\"{{ imgAlt }}\"\n      src=\"{{ imgSrc }}\"\n    />\n  </sprk-link>\n\n  <sprk-link\n    linkType=\"unstyled\"\n    *ngIf=\"imgSrc && mediaRev && !isFlag\"\n    [href]=\"imgHref\"\n    [analyticsString]=\"imgLinkAnalytics\"\n    [additionalClasses]=\"getClassesImg()\"\n  >\n    <img\n      class=\"sprk-c-Promo__image\"\n      alt=\"{{ imgAlt }}\"\n      src=\"{{ imgSrc }}\"\n    />\n  </sprk-link>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\ncomponent.</p>\n",
                    "line": 159,
                    "type": "string"
                },
                {
                    "name": "additionalClassesContent",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\ncontent container.</p>\n",
                    "line": 166,
                    "type": "string"
                },
                {
                    "name": "additionalClassesFlagLink",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\nlink surrounding the image in the Flag variant.</p>\n",
                    "line": 178,
                    "type": "string"
                },
                {
                    "name": "additionalClassesImgLink",
                    "description": "<p>If <code>imgSrc</code> is true and <code>isFlag</code> is false,\nthis string of additional classes will\nbe added to the anchor containing the Promo\nimage. This is intended for overrides.</p>\n",
                    "line": 221,
                    "type": "string"
                },
                {
                    "name": "buttonHref",
                    "description": "<p>This will be the <code>href</code> for the button\nif <code>cta</code> is set to <code>button</code>.</p>\n",
                    "line": 130,
                    "type": "string"
                },
                {
                    "name": "buttonLinkAnalytics",
                    "description": "<p>The value supplied will be assigned to the\n<code>data-analytics</code> attribute on the\ncall-to-action button if <code>cta</code> is set to <code>button</code>.\nThis is intended for an outside library to capture data.</p>\n",
                    "line": 138,
                    "type": "string"
                },
                {
                    "name": "cta",
                    "description": "<p>Can be <code>link</code> or <code>button</code>.\nThis determines the type for the call-to-action in the Promo body.</p>\n",
                    "line": 119,
                    "type": "string"
                },
                {
                    "name": "ctaLinkAnalytics",
                    "description": "<p>The value supplied will be assigned to\nthe <code>data-analytics</code> attribute on the\ncall-to-action link if <code>cta</code> is set to\n<code>link</code>. This is intended for an\noutside library to capture data.</p>\n",
                    "line": 152,
                    "type": "string"
                },
                {
                    "name": "ctaLinkHref",
                    "description": "<p>This will be the href for the the link if <code>cta</code> is set to <code>link</code>.</p>\n",
                    "line": 143,
                    "type": "string"
                },
                {
                    "name": "ctaText",
                    "description": "<p>This determines the text for the call-to-action.</p>\n",
                    "line": 124,
                    "type": "string"
                },
                {
                    "name": "flagLinkAnalytics",
                    "description": "<p>If <code>isFlag</code> is set to <code>true</code>,\nthe Promo will render with\nan anchor element containing the\nimage specified in <code>imgSrc</code>. The value\nsupplied here will be assigned to the <code>data-analytics</code>\nattribute on that anchor element.\nThis is intended for an outside library to capture data.</p>\n",
                    "line": 189,
                    "type": "string"
                },
                {
                    "name": "hasBorder",
                    "description": "<p>If <code>true</code>, the Promo will be rendered\nwith a border.</p>\n",
                    "line": 233,
                    "type": "boolean"
                },
                {
                    "name": "idString",
                    "description": "<p>The value supplied will be assigned\nto the <code>data-id</code> attribute on the\ncomponent. This is intended to be\nused as a selector for automated\ntools. This value should be unique\nper page.</p>\n",
                    "line": 243,
                    "type": "string"
                },
                {
                    "name": "imgAlt",
                    "description": "<p>The <code>alt</code> text for the Promo image.</p>\n",
                    "line": 199,
                    "type": "string"
                },
                {
                    "name": "imgHref",
                    "description": "<p>The <code>href</code> value for the Promo image.</p>\n",
                    "line": 204,
                    "type": "string"
                },
                {
                    "name": "imgLinkAnalytics",
                    "description": "<p>If <code>imgSrc</code> is true and <code>isFlag</code> is <code>false</code>,\nthe value supplied will be assigned to\nthe <code>data-analytics</code> attribute on the\nanchor containing the Promo image.\nThis is intended for an outside library to capture data.</p>\n",
                    "line": 213,
                    "type": "string"
                },
                {
                    "name": "imgSrc",
                    "description": "<p>The source value for the Promo image.</p>\n",
                    "line": 194,
                    "type": "string"
                },
                {
                    "name": "isFlag",
                    "description": "<p>If <code>true</code>, the Flag Promo variant will be rendered.</p>\n",
                    "line": 171,
                    "type": "boolean"
                },
                {
                    "name": "mediaRev",
                    "description": "<p>If <code>true</code>, the media will render\non the right side of the Promo content.</p>\n",
                    "line": 227,
                    "type": "boolean"
                },
                {
                    "name": "subtitle",
                    "description": "<p>If supplied, this will be used as the\ntext for a subtitle.</p>\n",
                    "line": 113,
                    "type": "string"
                },
                {
                    "name": "title",
                    "description": "<p>The main heading on the Promo.</p>\n",
                    "line": 107,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-promo',\n  template: `\n    <div [ngClass]=\"getClasses()\" [attr.data-id]=\"idString\">\n      <sprk-link\n        linkType=\"unstyled\"\n        *ngIf=\"isFlag && !mediaRev\"\n        [additionalClasses]=\"getClassesFlag()\"\n        [href]=\"imgHref\"\n        [analyticsString]=\"flagLinkAnalytics\"\n      >\n        <img\n          class=\"sprk-c-Promo__image--flag\"\n          alt=\"{{ imgAlt }}\"\n          src=\"{{ imgSrc }}\"\n        />\n      </sprk-link>\n      <sprk-link\n        linkType=\"unstyled\"\n        *ngIf=\"imgSrc && !mediaRev && !isFlag\"\n        [href]=\"imgHref\"\n        [analyticsString]=\"imgLinkAnalytics\"\n        [additionalClasses]=\"getClassesImg()\"\n      >\n        <img\n          class=\"sprk-c-Promo__image\"\n          alt=\"{{ imgAlt }}\"\n          src=\"{{ imgSrc }}\"\n        />\n      </sprk-link>\n\n      <div [ngClass]=\"getClassesContent()\">\n        <h3\n          *ngIf=\"title\"\n          class=\"sprk-b-TypeDisplayFive sprk-o-Stack__item sprk-c-Promo__title\"\n        >\n          {{ title }}\n        </h3>\n\n        <div *ngIf=\"subtitle\" class=\"sprk-c-Promo__subtitle sprk-o-Stack__item\">\n          {{ subtitle }}\n        </div>\n\n        <div class=\"sprk-b-TypeBodyTwo sprk-o-Stack__item\">\n          <ng-content></ng-content>\n        </div>\n\n        <div *ngIf=\"cta === 'button'\" class=\"sprk-o-Stack__item\">\n          <sprk-link\n            linkType=\"unstyled\"\n            [href]=\"buttonHref\"\n            additionalClasses=\"sprk-c-Button\"\n            [analyticsString]=\"buttonLinkAnalytics\"\n          >\n            {{ ctaText }}\n          </sprk-link>\n        </div>\n\n        <sprk-link\n          linkType=\"simple\"\n          *ngIf=\"cta === 'link'\"\n          [href]=\"ctaLinkHref\"\n          additionalClasses=\"sprk-o-Stack__item\"\n          [analyticsString]=\"ctaLinkAnalytics\"\n        >\n          {{ ctaText }}\n        </sprk-link>\n      </div>\n\n      <sprk-link\n        linkType=\"unstyled\"\n        *ngIf=\"isFlag && mediaRev\"\n        [href]=\"imgHref\"\n        [additionalClasses]=\"getClassesFlag()\"\n        [analyticsString]=\"flagLinkAnalytics\"\n      >\n        <img\n          class=\"sprk-c-Promo__image--flag\"\n          alt=\"{{ imgAlt }}\"\n          src=\"{{ imgSrc }}\"\n        />\n      </sprk-link>\n\n      <sprk-link\n        linkType=\"unstyled\"\n        *ngIf=\"imgSrc && mediaRev && !isFlag\"\n        [href]=\"imgHref\"\n        [analyticsString]=\"imgLinkAnalytics\"\n        [additionalClasses]=\"getClassesImg()\"\n      >\n        <img\n          class=\"sprk-c-Promo__image\"\n          alt=\"{{ imgAlt }}\"\n          src=\"{{ imgSrc }}\"\n        />\n      </sprk-link>\n    </div>\n  `\n})\nexport class SprkPromoComponent {\n  /**\n   * The main heading on the Promo.\n   */\n  @Input()\n  title: string;\n  /**\n   * If supplied, this will be used as the\n   * text for a subtitle.\n   */\n  @Input()\n  subtitle: string;\n  /**\n   * Can be `link` or `button`.\n   * This determines the type for the call-to-action in the Promo body.\n   */\n  @Input()\n  cta: string;\n  /**\n   * This determines the text for the call-to-action.\n   */\n  @Input()\n  ctaText: string;\n  /**\n   * This will be the `href` for the button\n   * if `cta` is set to `button`.\n   */\n  @Input()\n  buttonHref: string;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the\n   * call-to-action button if `cta` is set to `button`.\n   * This is intended for an outside library to capture data.\n   */\n  @Input()\n  buttonLinkAnalytics: string;\n  /**\n   * This will be the href for the the link if `cta` is set to `link`.\n   */\n  @Input()\n  ctaLinkHref: string;\n  /**\n   * The value supplied will be assigned to\n   * the `data-analytics` attribute on the\n   * call-to-action link if `cta` is set to\n   * `link`. This is intended for an\n   * outside library to capture data.\n   */\n  @Input()\n  ctaLinkAnalytics: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * content container.\n   */\n  @Input()\n  additionalClassesContent: string;\n  /**\n   * If `true`, the Flag Promo variant will be rendered.\n   */\n  @Input()\n  isFlag: boolean;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * link surrounding the image in the Flag variant.\n   */\n  @Input()\n  additionalClassesFlagLink: string;\n  /**\n   * If `isFlag` is set to `true`,\n   * the Promo will render with\n   * an anchor element containing the\n   * image specified in `imgSrc`. The value\n   * supplied here will be assigned to the `data-analytics`\n   * attribute on that anchor element.\n   * This is intended for an outside library to capture data.\n   */\n  @Input()\n  flagLinkAnalytics: string;\n  /**\n   * The source value for the Promo image.\n   */\n  @Input()\n  imgSrc: string;\n  /**\n   * The `alt` text for the Promo image.\n   */\n  @Input()\n  imgAlt: string;\n  /**\n   * The `href` value for the Promo image.\n   */\n  @Input()\n  imgHref: string;\n  /**\n   * If `imgSrc` is true and `isFlag` is `false`,\n   * the value supplied will be assigned to\n   * the `data-analytics` attribute on the\n   * anchor containing the Promo image.\n   * This is intended for an outside library to capture data.\n   */\n  @Input()\n  imgLinkAnalytics: string;\n  /**\n   * If `imgSrc` is true and `isFlag` is false,\n   * this string of additional classes will\n   * be added to the anchor containing the Promo\n   * image. This is intended for overrides.\n   */\n  @Input()\n  additionalClassesImgLink: string;\n  /**\n   * If `true`, the media will render\n   * on the right side of the Promo content.\n   */\n  @Input()\n  mediaRev: boolean;\n  /**\n   * If `true`, the Promo will be rendered\n   * with a border.\n   */\n  @Input()\n  hasBorder: boolean;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = [\n      'sprk-c-Promo',\n      'sprk-o-Stack',\n      'sprk-o-Stack--split@s'\n    ];\n\n    if (this.isFlag) {\n      classArray.push('sprk-c-Promo--flag');\n    }\n\n    if (this.hasBorder) {\n      classArray.push('sprk-c-Promo--bordered');\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getClassesFlag(): string {\n    const classArray: string[] = [\n      'sprk-o-Stack__item--fourth@s',\n      'sprk-o-Stack__item'\n    ];\n\n    if (this.additionalClassesFlagLink) {\n      this.additionalClassesFlagLink.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getClassesImg(): string {\n    const classArray: string[] = [\n      'sprk-o-Stack__item',\n      'sprk-o-Stack__item--half@s'\n    ];\n\n    if (this.additionalClassesImgLink) {\n      this.additionalClassesImgLink.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getClassesContent(): string {\n    const classArray: string[] = [\n      'sprk-c-Promo__content',\n      'sprk-o-Stack__item',\n      'sprk-o-Stack',\n      'sprk-o-Stack--large'\n    ];\n\n    if (this.isFlag) {\n      classArray.push('sprk-o-Stack__item--three-fourths@s');\n    } else {\n      if (this.imgSrc) {\n        classArray.push('sprk-o-Stack__item--half@s');\n      }\n    }\n\n    if (this.additionalClassesContent) {\n      this.additionalClassesContent.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n    return classArray.join(' ');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SprkSelectionContainerComponent",
            "id": "component-SprkSelectionContainerComponent-7b5d15a7b683dedca4ba0f98d0ca452b",
            "file": "projects/spark-angular/src/lib/components/inputs/sprk-selection-container/sprk-selection-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sprk-selection-container",
            "styleUrls": [],
            "styles": [],
            "template": "<div [ngClass]=\"getClasses()\">\n  <fieldset class=\"sprk-b-Fieldset\">\n    <legend class=\"sprk-b-Legend\">\n      <ng-content select=\"[sprkLabel]\"></ng-content>\n    </legend>\n    <ng-content select=\"sprk-selection-item-container\"></ng-content>\n  </fieldset>\n  <ng-content select=\"[sprkHelperText]\"></ng-content>\n  <ng-content select=\"[sprkFieldError]\"></ng-content>\n  <ng-content></ng-content>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\ncomponent.</p>\n",
                    "line": 37,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "error",
                    "type": "SprkFieldErrorDirective",
                    "optional": false,
                    "description": "<p>This component expects a child element\nwith the <code>sprkFieldError</code> directive.</p>\n",
                    "line": 50,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "SprkFieldErrorDirective, {static: false}"
                        }
                    ]
                },
                {
                    "name": "label",
                    "type": "SprkLabelDirective",
                    "optional": false,
                    "description": "<p>This component expects a child label element\nwith the <code>sprkLabel</code> directive.</p>\n",
                    "line": 44,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "SprkLabelDirective, {static: false}"
                        }
                    ]
                },
                {
                    "name": "selectionItems",
                    "type": "QueryList<SprkSelectionItemContainerComponent>",
                    "optional": false,
                    "description": "<p>This component expects a child\n<code>&lt;sprk-selection-item-container&gt;</code> component.</p>\n",
                    "line": 56,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "SprkSelectionItemContainerComponent"
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Input,\n  QueryList\n} from '@angular/core';\nimport * as _ from 'lodash';\nimport { SprkFieldErrorDirective } from '../../../directives/inputs/sprk-field-error/sprk-field-error.directive';\nimport { SprkLabelDirective } from '../../../directives/inputs/sprk-label/sprk-label.directive';\nimport { SprkSelectionItemContainerComponent } from '../sprk-selection-item-container/sprk-selection-item-container.component';\n\n@Component({\n  selector: 'sprk-selection-container',\n  template: `\n    <div [ngClass]=\"getClasses()\">\n      <fieldset class=\"sprk-b-Fieldset\">\n        <legend class=\"sprk-b-Legend\">\n          <ng-content select=\"[sprkLabel]\"></ng-content>\n        </legend>\n        <ng-content select=\"sprk-selection-item-container\"></ng-content>\n      </fieldset>\n      <ng-content select=\"[sprkHelperText]\"></ng-content>\n      <ng-content select=\"[sprkFieldError]\"></ng-content>\n      <ng-content></ng-content>\n    </div>\n  `\n})\nexport class SprkSelectionContainerComponent implements AfterContentInit {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n\n  /**\n   * This component expects a child label element\n   * with the `sprkLabel` directive.\n   */\n  @ContentChild(SprkLabelDirective, { static: false })\n  label: SprkLabelDirective;\n  /**\n   * This component expects a child element\n   * with the `sprkFieldError` directive.\n   */\n  @ContentChild(SprkFieldErrorDirective, { static: false })\n  error: SprkFieldErrorDirective;\n  /**\n   * This component expects a child\n   * `<sprk-selection-item-container>` component.\n   */\n  @ContentChildren(SprkSelectionItemContainerComponent)\n  selectionItems: QueryList<SprkSelectionItemContainerComponent>;\n\n  /**\n   * @ignore\n   */\n  id = _.uniqueId();\n  /**\n   * @ignore\n   */\n  error_id = `error_${this.id}`;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-b-InputContainer'];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n  /**\n   * @ignore\n   */\n  ngAfterContentInit(): void {\n    if (this.selectionItems && this.error) {\n      this.selectionItems.forEach(item => {\n        item.input.ref.nativeElement.setAttribute(\n          'aria-describedby',\n          this.error_id\n        );\n      });\n      this.error.ref.nativeElement.id = this.error_id;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "AfterContentInit"
            ]
        },
        {
            "name": "SprkSelectionItemContainerComponent",
            "id": "component-SprkSelectionItemContainerComponent-3c0a63954aa308916483165042a1649e",
            "file": "projects/spark-angular/src/lib/components/inputs/sprk-selection-item-container/sprk-selection-item-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sprk-selection-item-container",
            "styleUrls": [],
            "styles": [],
            "template": "<div [ngClass]=\"getClasses()\">\n  <ng-content select=\"[sprkSelectionInput]\"></ng-content>\n  <ng-content select=\"[sprkSelectionLabel]\"></ng-content>\n  <ng-content></ng-content>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\ncomponent.</p>\n",
                    "line": 23,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "input",
                    "type": "SprkSelectionInputDirective",
                    "optional": false,
                    "description": "<p>This component expects a child selection input\nwith the <code>sprkSelectionInput</code> directive.</p>\n",
                    "line": 36,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "SprkSelectionInputDirective, {static: true}"
                        }
                    ]
                },
                {
                    "name": "label",
                    "type": "SprkSelectionLabelDirective",
                    "optional": false,
                    "description": "<p>This component expects a child label element\nwith the <code>sprkSelectionLabel</code> directive.</p>\n",
                    "line": 30,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "SprkSelectionLabelDirective, {static: true}"
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ContentChild, Input, OnInit } from '@angular/core';\nimport * as _ from 'lodash';\nimport { SprkSelectionInputDirective } from '../../../directives/inputs/sprk-selection-input/sprk-selection-input.directive';\nimport { SprkSelectionLabelDirective } from '../../../directives/inputs/sprk-selection-label/sprk-selection-label.directive';\n\n@Component({\n  selector: 'sprk-selection-item-container',\n  template: `\n    <div [ngClass]=\"getClasses()\">\n      <ng-content select=\"[sprkSelectionInput]\"></ng-content>\n      <ng-content select=\"[sprkSelectionLabel]\"></ng-content>\n      <ng-content></ng-content>\n    </div>\n  `\n})\nexport class SprkSelectionItemContainerComponent implements OnInit {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n\n  /**\n   * This component expects a child label element\n   * with the `sprkSelectionLabel` directive.\n   */\n  @ContentChild(SprkSelectionLabelDirective, { static: true })\n  label: SprkSelectionLabelDirective;\n  /**\n   * This component expects a child selection input\n   * with the `sprkSelectionInput` directive.\n   */\n  @ContentChild(SprkSelectionInputDirective, { static: true })\n  input: SprkSelectionInputDirective;\n\n  /**\n   * @ignore\n   */\n  id = _.uniqueId();\n  /**\n   * @ignore\n   */\n  input_id = `input_${this.id}`;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-b-SelectionContainer'];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    if (this.label && this.input) {\n      this.label.ref.nativeElement.setAttribute('for', this.input_id);\n      this.input.ref.nativeElement.id = this.input_id;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "SprkStackComponent",
            "id": "component-SprkStackComponent-a83cef6b81e7bb2cde375b6b5a9b77e8",
            "file": "projects/spark-angular/src/lib/components/sprk-stack/sprk-stack.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sprk-stack",
            "styleUrls": [],
            "styles": [],
            "template": "<div [ngClass]=\"getClasses()\" [attr.data-analytics]=\"analyticsString\">\n  <ng-content></ng-content>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\ncomponent.</p>\n",
                    "line": 40,
                    "type": "string"
                },
                {
                    "name": "analyticsString",
                    "description": "<p>The value supplied will be assigned to the\n<code>data-analytics</code> attribute on the component.\nIntended for an outside\nlibrary to capture data.</p>\n",
                    "line": 33,
                    "type": "string"
                },
                {
                    "name": "itemSpacing",
                    "description": "<p>This is used as the amount of spacing\nbetween the child <code>sprkStackItem</code> items.\nThe value supplied can be <code>tiny</code>, <code>small</code>, <code>medium</code>, <code>large</code>, or <code>huge</code>.</p>\n",
                    "line": 25,
                    "type": "string"
                },
                {
                    "name": "splitAt",
                    "description": "<p>The value supplied can be <code>tiny</code>, <code>small</code>, <code>medium</code>, <code>large</code>, or <code>huge</code>.\nThis is used as the breakpoint at which the component\nmoves or &quot;splits&quot; to a side by side layout.</p>\n",
                    "line": 18,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-stack',\n  template: `\n    <div [ngClass]=\"getClasses()\" [attr.data-analytics]=\"analyticsString\">\n      <ng-content></ng-content>\n    </div>\n  `\n})\nexport class SprkStackComponent {\n  /**\n   * The value supplied can be `tiny`, `small`, `medium`, `large`, or `huge`.\n   * This is used as the breakpoint at which the component\n   * moves or \"splits\" to a side by side layout.\n   */\n  @Input()\n  splitAt: string;\n  /**\n   * This is used as the amount of spacing\n   * between the child `sprkStackItem` items.\n   * The value supplied can be `tiny`, `small`, `medium`, `large`, or `huge`.\n   */\n  @Input()\n  itemSpacing: string;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the component.\n   * Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsString: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-o-Stack'];\n\n    // Handle the choice of item split breakpoint by adding CSS class\n    switch (this.splitAt) {\n      case 'tiny':\n        classArray.push('sprk-o-Stack--split@xs');\n        break;\n      case 'small':\n        classArray.push('sprk-o-Stack--split@s');\n        break;\n      case 'medium':\n        classArray.push('sprk-o-Stack--split@m');\n        break;\n      case 'large':\n        classArray.push('sprk-o-Stack--split@l');\n        break;\n      case 'huge':\n        classArray.push('sprk-o-Stack--split@xl');\n        break;\n      default:\n        break;\n    }\n\n    // Handle the choice of item spacing by adding CSS class\n    switch (this.itemSpacing) {\n      case 'tiny':\n        classArray.push('sprk-o-Stack--tiny');\n        break;\n      case 'small':\n        classArray.push('sprk-o-Stack--small');\n        break;\n      case 'medium':\n        classArray.push('sprk-o-Stack--medium');\n        break;\n      case 'large':\n        classArray.push('sprk-o-Stack--large');\n        break;\n      case 'huge':\n        classArray.push('sprk-o-Stack--huge');\n        break;\n      default:\n        break;\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SprkStepperComponent",
            "id": "component-SprkStepperComponent-1c15dd3d5febe4c45152e2ac8f66dad0",
            "file": "projects/spark-angular/src/lib/components/sprk-stepper/sprk-stepper.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sprk-stepper",
            "styleUrls": [],
            "styles": [],
            "template": "<ol\n  [ngClass]=\"getClasses()\"\n  data-sprk-stepper=\"container\"\n  [attr.data-id]=\"idString\"\n  role=\"tablist\"\n  aria-orientation=\"vertical\"\n>\n  <ng-content></ng-content>\n</ol>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\ncomponent.</p>\n",
                    "line": 24,
                    "type": "string"
                },
                {
                    "name": "hasDarkBg",
                    "description": "<p>If <code>true</code>, this will apply the correct styles\nthe to the Stepper for when\nit is on a dark background.</p>\n",
                    "line": 41,
                    "type": "boolean"
                },
                {
                    "name": "idString",
                    "description": "<p>The value supplied will be assigned\nto the <code>data-id</code> attribute on the\ncomponent. This is intended to be\nused as a selector for automated\ntools. This value should be unique\nper page.</p>\n",
                    "line": 34,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "ref",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ElementRef, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-stepper',\n  template: `\n    <ol\n      [ngClass]=\"getClasses()\"\n      data-sprk-stepper=\"container\"\n      [attr.data-id]=\"idString\"\n      role=\"tablist\"\n      aria-orientation=\"vertical\"\n    >\n      <ng-content></ng-content>\n    </ol>\n  `\n})\nexport class SprkStepperComponent implements AfterViewInit {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  /**\n   * If `true`, this will apply the correct styles\n   * the to the Stepper for when\n   * it is on a dark background.\n   */\n  @Input()\n  hasDarkBg: boolean;\n\n  constructor(public ref: ElementRef) {}\n\n  /**\n   * @ignore\n   */\n  resetTabs(tabs, tabpanels, activeClass) {\n    tabs.forEach(tab => {\n      tab.classList.remove(activeClass || 'sprk-c-Tabs__button--active');\n      tab.removeAttribute('tabindex');\n      tab.setAttribute('aria-selected', 'false');\n      tabpanels.forEach(panel => {\n        panel.classList.add('sprk-u-HideWhenJs');\n      });\n    });\n  }\n\n  /**\n   * @ignore\n   */\n  handleTabKeydown(e, steps, stepPanels, activeClass, sliderEl) {\n    // TODO: implement\n  }\n\n  /**\n   * @ignore\n   */\n  setActiveTab(tab, tabpanel, activeClass) {\n    tab.classList.add(activeClass || 'sprk-c-Tabs__button--active');\n    tab.setAttribute('tabindex', '0');\n    tab.setAttribute('aria-selected', 'true');\n    if (tabpanel) {\n      tabpanel.classList.remove('sprk-u-HideWhenJs');\n    }\n    tab.focus();\n  }\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-c-Stepper'];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    if (this.hasDarkBg) {\n      classArray.push('sprk-c-Stepper--has-dark-bg');\n    }\n\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  bindUIEvents(): void {\n    const steps = this.ref.nativeElement.querySelectorAll(\n      '[data-sprk-stepper=\"step\"]'\n    );\n    const stepPanels = this.ref.nativeElement.querySelectorAll(\n      '[role=\"tabpanel\"]'\n    );\n    const activeClass = 'sprk-c-Stepper__step--selected';\n    const container = this.ref.nativeElement.querySelector(\n      '[data-sprk-stepper=\"container\"]'\n    );\n    const hasSlideEffect = this.ref.nativeElement.querySelector(\n      '[data-sprk-stepper=\"description\"]'\n    );\n    let sliderEl;\n    if (!steps[0]) {\n      return;\n    }\n    steps[0].classList.add('sprk-c-Stepper__step--first');\n    steps[steps.length - 1].classList.add('sprk-c-Stepper__step--last');\n\n    // If the stepper has stepper descriptions then build slider\n    if (hasSlideEffect) {\n      sliderEl = document.createElement('li');\n      sliderEl.classList.add('sprk-c-Stepper__slider');\n      sliderEl.setAttribute('data-sprk-stepper', 'slider');\n      container.prepend(sliderEl);\n    }\n\n    steps.forEach((step, index) => {\n      const stepTrigger = step.querySelector('[role=\"tab\"]');\n      if (!stepTrigger) {\n        return;\n      }\n      if (hasSlideEffect) {\n        step.classList.add('sprk-c-Stepper__step--has-slider');\n      }\n\n      stepTrigger.addEventListener('click', event => {\n        event.preventDefault();\n        this.resetTabs(steps, stepPanels, activeClass);\n        this.setActiveTab(step, stepPanels[index], activeClass);\n      });\n    });\n\n    this.ref.nativeElement.addEventListener('keydown', e => {\n      this.handleTabKeydown(e, steps, stepPanels, activeClass, sliderEl);\n    });\n  }\n\n\n  /**\n   * @ignore\n   */\n  ngAfterViewInit(): void {\n    this.bindUIEvents();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "ref",
                        "type": "ElementRef"
                    }
                ],
                "line": 41,
                "jsdoctags": [
                    {
                        "name": "ref",
                        "type": "ElementRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "SprkStepperStepComponent",
            "id": "component-SprkStepperStepComponent-c45e943272f4349caba7c39b89d29c98",
            "file": "projects/spark-angular/src/lib/components/sprk-stepper/sprk-stepper-step/sprk-stepper-step.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sprk-stepper-step",
            "styleUrls": [],
            "styles": [],
            "template": "<li\n  [ngClass]=\"getClasses()\"\n  [attr.data-id]=\"idString\"\n  [attr.data-analytics]=\"analyticsString\"\n  data-sprk-stepper=\"step\"\n>\n  <div\n    [ngClass]=\"{\n      'sprk-c-Stepper__step-content': true,\n      'sprk-c-Stepper__step-content--has-description':\n        variant === 'hasDescription'\n    }\"\n  >\n    <a\n      class=\"sprk-c-Stepper__step-header sprk-b-Link sprk-b-Link--plain\"\n      [attr.aria-controls]=\"componentID\"\n      role=\"tab\"\n      [attr.id]=\"componentAriaLabelID\"\n      href=\"#\"\n      [attr.aria-selected]=\"isSelected\"\n    >\n      <span class=\"sprk-c-Stepper__step-icon\"></span>\n      <h3 class=\"sprk-c-Stepper__step-heading\" data-sprk-stepper=\"heading\">\n        {{ heading }}\n      </h3>\n    </a>\n\n    <div\n      *ngIf=\"variant === 'hasDescription'\"\n      [ngClass]=\"{\n        'sprk-c-Stepper__step-description': true,\n        'sprk-u-HideWhenJs': !isSelected\n      }\"\n      id=\"{{ componentID }}\"\n      data-sprk-stepper=\"description\"\n      [attr.aria-labelledby]=\"componentAriaLabelID\"\n      tabindex=\"0\"\n      role=\"tabpanel\"\n    >\n      <ng-content></ng-content>\n    </div>\n  </div>\n</li>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "line": 54,
                    "type": "string"
                },
                {
                    "name": "analyticsString",
                    "description": "<p>The value supplied will be assigned to the\n<code>data-analytics</code> attribute on the component.\nIntended for an outside\nlibrary to capture data.</p>\n",
                    "line": 78,
                    "type": "string"
                },
                {
                    "name": "heading",
                    "line": 70,
                    "type": "string"
                },
                {
                    "name": "idString",
                    "description": "<p>The value supplied will be assigned\nto the <code>data-id</code> attribute on the\ncomponent. This is intended to be\nused as a selector for automated\ntools. This value should be unique\nper page.</p>\n",
                    "line": 64,
                    "type": "string"
                },
                {
                    "name": "isDefaultActive",
                    "line": 68,
                    "type": "boolean"
                },
                {
                    "name": "variant",
                    "line": 66,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeClass",
                    "defaultValue": "'sprk-c-Stepper__step--selected'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 81
                },
                {
                    "name": "componentAriaLabelID",
                    "defaultValue": "_.uniqueId('step-aria-')",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 80
                },
                {
                    "name": "componentID",
                    "defaultValue": "_.uniqueId('step-')",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 79
                },
                {
                    "name": "isSelected",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 82
                },
                {
                    "name": "ref",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 84,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 105
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { OnInit, Component, ElementRef, Input } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'sprk-stepper-step',\n  template: `\n    <li\n      [ngClass]=\"getClasses()\"\n      [attr.data-id]=\"idString\"\n      [attr.data-analytics]=\"analyticsString\"\n      data-sprk-stepper=\"step\"\n    >\n      <div\n        [ngClass]=\"{\n          'sprk-c-Stepper__step-content': true,\n          'sprk-c-Stepper__step-content--has-description':\n            variant === 'hasDescription'\n        }\"\n      >\n        <a\n          class=\"sprk-c-Stepper__step-header sprk-b-Link sprk-b-Link--plain\"\n          [attr.aria-controls]=\"componentID\"\n          role=\"tab\"\n          [attr.id]=\"componentAriaLabelID\"\n          href=\"#\"\n          [attr.aria-selected]=\"isSelected\"\n        >\n          <span class=\"sprk-c-Stepper__step-icon\"></span>\n          <h3 class=\"sprk-c-Stepper__step-heading\" data-sprk-stepper=\"heading\">\n            {{ heading }}\n          </h3>\n        </a>\n\n        <div\n          *ngIf=\"variant === 'hasDescription'\"\n          [ngClass]=\"{\n            'sprk-c-Stepper__step-description': true,\n            'sprk-u-HideWhenJs': !isSelected\n          }\"\n          id=\"{{ componentID }}\"\n          data-sprk-stepper=\"description\"\n          [attr.aria-labelledby]=\"componentAriaLabelID\"\n          tabindex=\"0\"\n          role=\"tabpanel\"\n        >\n          <ng-content></ng-content>\n        </div>\n      </div>\n    </li>\n  `\n})\nexport class SprkStepperStepComponent implements OnInit {\n  @Input()\n  additionalClasses: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  @Input()\n  variant: string;\n  @Input()\n  isDefaultActive: boolean;\n  @Input()\n  heading: string;\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the component.\n   * Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsString: string;\n  componentID = _.uniqueId('step-');\n  componentAriaLabelID = _.uniqueId('step-aria-');\n  activeClass = 'sprk-c-Stepper__step--selected';\n  isSelected = false;\n\n  constructor(public ref: ElementRef) {}\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-c-Stepper__step'];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    if (this.isDefaultActive) {\n      classArray.push(this.activeClass);\n    }\n\n    return classArray.join(' ');\n  }\n\n  ngOnInit(): void {\n    if (this.isDefaultActive) {\n      this.isSelected = true;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "ref",
                        "type": "ElementRef"
                    }
                ],
                "line": 82,
                "jsdoctags": [
                    {
                        "name": "ref",
                        "type": "ElementRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "SprkTabbedNavigationComponent",
            "id": "component-SprkTabbedNavigationComponent-cf0e5bc58b86ff56042233560fd4f8fd",
            "file": "projects/spark-angular/src/lib/components/sprk-tabbed-navigation/sprk-tabbed-navigation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sprk-tabbed-navigation",
            "styleUrls": [],
            "styles": [],
            "template": "<div [ngClass]=\"getClasses()\" [attr.data-id]=\"idString\">\n  <div class=\"sprk-c-Tabs__buttons\" role=\"tablist\">\n    <ng-content select=\"[sprkTabbedNavigationTab]\"></ng-content>\n  </div>\n  <ng-content select=\"[sprkTabbedNavigationPane]\"></ng-content>\n  <ng-content></ng-content>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\ncomponent.</p>\n",
                    "line": 37,
                    "type": "string"
                },
                {
                    "name": "idString",
                    "description": "<p>The value supplied will be assigned\nto the <code>data-id</code> attribute on the\ncomponent. This is intended to be\nused as a selector for automated\ntools. This value should be unique\nper page.</p>\n",
                    "line": 47,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "panels",
                    "type": "QueryList<SprkTabbedNavigationPanelDirective>",
                    "optional": false,
                    "description": "<p>This component expects children <code>&lt;div&gt;</code> elements\nwith the <code>SprkTabbedNavigationPanelDirective</code> on them.\nThese serve as the Panels.</p>\n",
                    "line": 61,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "SprkTabbedNavigationPanelDirective"
                        }
                    ]
                },
                {
                    "name": "tabs",
                    "type": "QueryList<SprkTabbedNavigationTabDirective>",
                    "optional": false,
                    "description": "<p>This component expects children <code>&lt;button&gt;</code> elements\nwith the <code>SprkTabbedNavigationTabDirective</code> on them.\nThese serve as the Tabs.</p>\n",
                    "line": 54,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "SprkTabbedNavigationTabDirective"
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  HostListener,\n  Input,\n  QueryList\n} from '@angular/core';\nimport * as _ from 'lodash';\nimport {\n  SprkTabbedNavigationPanelDirective\n} from '../../directives/tabbed-navigation/sprk-tabbed-navigation-panel/sprk-tabbed-navigation-panel.directive';\nimport {\n  SprkTabbedNavigationTabDirective\n} from '../../directives/tabbed-navigation/sprk-tabbed-navigation-tab/sprk-tabbed-navigation-tab.directive';\n\n@Component({\n  selector: 'sprk-tabbed-navigation',\n  template: `\n    <div [ngClass]=\"getClasses()\" [attr.data-id]=\"idString\">\n      <div class=\"sprk-c-Tabs__buttons\" role=\"tablist\">\n        <ng-content select=\"[sprkTabbedNavigationTab]\"></ng-content>\n      </div>\n      <ng-content select=\"[sprkTabbedNavigationPane]\"></ng-content>\n      <ng-content></ng-content>\n    </div>\n  `\n})\nexport class SprkTabbedNavigationComponent implements AfterContentInit {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n  /**\n   * This component expects children `<button>` elements\n   * with the `SprkTabbedNavigationTabDirective` on them.\n   * These serve as the Tabs.\n   */\n  @ContentChildren(SprkTabbedNavigationTabDirective)\n  tabs: QueryList<SprkTabbedNavigationTabDirective>;\n  /**\n   * This component expects children `<div>` elements\n   * with the `SprkTabbedNavigationPanelDirective` on them.\n   * These serve as the Panels.\n   */\n  @ContentChildren(SprkTabbedNavigationPanelDirective)\n  panels: QueryList<SprkTabbedNavigationPanelDirective>;\n  /**\n   * @ignore\n   */\n  componentID = _.uniqueId();\n  /**\n   * @ignore\n   */\n  activeClass = 'sprk-c-Tabs__button--active';\n\n  /**\n   * @ignore\n   */\n  @HostListener('click', ['$event'])\n  onClick($event) {\n    if ($event.target.classList.contains('sprk-c-Tabs__button')) {\n      const activePanel = this.panels.find(panel => {\n        return (\n          panel.ref.nativeElement.id ===\n          $event.target.getAttribute('aria-controls')\n        );\n      });\n\n      this.resetTabs(\n        this.tabs.map(tab => tab.ref.nativeElement),\n        this.panels.map(panel => panel.ref.nativeElement),\n        this.activeClass\n      );\n\n      this.setActiveTab(\n        $event.target,\n        activePanel.ref.nativeElement,\n        this.activeClass\n      );\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  @HostListener('window:resize')\n  onResize() {\n    this.ariaOrientation(window.innerWidth, this.ref.nativeElement);\n  }\n\n  /**\n   * @ignore\n   */\n  @HostListener('keydown', ['$event'])\n  onKeydown($event) {\n    const isPanel = $event.target.classList.contains('sprk-c-Tabs__content');\n    if (isPanel) {\n      return;\n    }\n\n    const keys = {\n      end: 35,\n      home: 36,\n      left: 37,\n      up: 38,\n      right: 39,\n      down: 40,\n      tab: 9\n    };\n\n    const tabElements = this.tabs.map(tab => tab.ref.nativeElement);\n    const panelElements = this.panels.map(panel => panel.ref.nativeElement);\n\n    if ($event.keyCode === keys.left || $event.keyCode === keys.up) {\n      this.retreatTab(tabElements, panelElements, this.activeClass);\n    } else if ($event.keyCode === keys.right || $event.keyCode === keys.down) {\n      this.advanceTab(tabElements, panelElements, this.activeClass);\n    } else if ($event.keyCode === keys.tab) {\n      if ($event.target.getAttribute('role') === 'tab') {\n        event.preventDefault();\n        panelElements[\n          this.getActiveTabIndex(tabElements, this.activeClass)\n        ].focus();\n      }\n    } else if ($event.keyCode === keys.home) {\n      this.setActiveTab(tabElements[0], panelElements[0], this.activeClass);\n    } else if ($event.keyCode === keys.end) {\n      this.setActiveTab(\n        tabElements[tabElements.length - 1],\n        panelElements[panelElements.length - 1],\n        this.activeClass\n      );\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-c-Tabs'];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  ngAfterContentInit(): void {\n    let tabIDs = [];\n    let panelIDs = [];\n\n    if (this.tabs && this.panels) {\n      this.tabs.forEach((tab, index) => {\n        const tabID = `tabbed-navigation-${this.componentID}-tab-${index}`;\n        const panelID = `tabbed-navigation-${this.componentID}-panel-${index}`;\n\n        tab.ref.nativeElement.setAttribute('id', tabID);\n        tab.ref.nativeElement.setAttribute('aria-controls', panelID);\n        tabIDs.push(tabID);\n        panelIDs.push(panelID);\n      });\n\n      tabIDs = tabIDs.reverse();\n      panelIDs = panelIDs.reverse();\n\n      this.panels.forEach(panel => {\n        panel.ref.nativeElement.setAttribute('id', panelIDs.pop());\n        panel.ref.nativeElement.setAttribute('aria-labelledby', tabIDs.pop());\n      });\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  advanceTab(tabs, tabpanels, activeClass) {\n    const activeIndex = this.getActiveTabIndex(tabs, activeClass);\n    this.resetTabs(tabs, tabpanels, activeClass);\n\n    if (activeIndex + 1 <= tabs.length - 1) {\n      this.setActiveTab(\n        tabs[activeIndex + 1],\n        tabpanels[activeIndex + 1],\n        activeClass\n      );\n    } else {\n      this.setActiveTab(tabs[0], tabpanels[0], activeClass);\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  ariaOrientation(width, element) {\n    // switch aria-orientation on mobile (based on _tabs.scss breakpoint)\n    if (width <= 736) {\n      element.setAttribute('aria-orientation', 'vertical');\n    } else {\n      element.setAttribute('aria-orientation', 'horizontal');\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  getActiveTabIndex(tabs, activeClass) {\n    let activeIndex = null;\n    tabs.forEach((tab, index) => {\n      if (\n        tab.classList.contains(activeClass || 'sprk-c-Tabs__button--active')\n      ) {\n        activeIndex = index;\n      }\n    });\n\n    return activeIndex;\n  }\n\n  /**\n   * @ignore\n   */\n  resetTabs(tabs, tabpanels, activeClass) {\n    tabs.forEach(tab => {\n      tab.classList.remove(activeClass || 'sprk-c-Tabs__button--active');\n      tab.removeAttribute('tabindex');\n      tab.setAttribute('aria-selected', 'false');\n      tabpanels.forEach(panel => {\n        panel.classList.add('sprk-u-HideWhenJs');\n      });\n    });\n  }\n\n  /**\n   * @ignore\n   */\n  retreatTab(tabs, tabpanels, activeClass) {\n    const activeIndex = this.getActiveTabIndex(tabs, activeClass);\n\n    this.resetTabs(tabs, tabpanels, activeClass);\n\n    if (activeIndex - 1 === -1) {\n      this.setActiveTab(\n        tabs[tabs.length - 1],\n        tabpanels[tabs.length - 1],\n        activeClass\n      );\n    } else {\n      this.setActiveTab(\n        tabs[activeIndex - 1],\n        tabpanels[activeIndex - 1],\n        activeClass\n      );\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  setActiveTab(tab, tabpanel, activeClass) {\n    tab.classList.add(activeClass || 'sprk-c-Tabs__button--active');\n    tab.setAttribute('tabindex', '0');\n    tab.setAttribute('aria-selected', 'true');\n    if (tabpanel) {\n      tabpanel.classList.remove('sprk-u-HideWhenJs');\n    }\n    tab.focus();\n  }\n\n  /**\n   * @ignore\n   */\n  constructor(public ref: ElementRef) {\n    this.ariaOrientation(window.innerWidth, this.ref.nativeElement);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "AfterContentInit"
            ]
        },
        {
            "name": "SprkTableComponent",
            "id": "component-SprkTableComponent-621a4678c585ea4c50d6d3239affd14f",
            "file": "projects/spark-angular/src/lib/components/sprk-table/sprk-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sprk-table",
            "styleUrls": [],
            "styles": [],
            "template": "<div [ngClass]=\"getClasses()\" [attr.data-id]=\"idString\">\n  <table [ngClass]=\"getTableClasses()\">\n    <ng-content></ng-content>\n  </table>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\ncomponent container element.</p>\n",
                    "line": 20,
                    "type": "string"
                },
                {
                    "name": "additionalTableClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\n<code>table</code> element.</p>\n",
                    "line": 27,
                    "type": "string"
                },
                {
                    "name": "idString",
                    "description": "<p>The value supplied will be assigned\nto the <code>data-id</code> attribute on the\ncomponent. This is intended to be\nused as a selector for automated\ntools. This value should be unique\nper page.</p>\n",
                    "line": 37,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sprk-table',\n  template: `\n    <div [ngClass]=\"getClasses()\" [attr.data-id]=\"idString\">\n      <table [ngClass]=\"getTableClasses()\">\n        <ng-content></ng-content>\n      </table>\n    </div>\n  `\n})\nexport class SprkTableComponent {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component container element.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * `table` element.\n   */\n  @Input()\n  additionalTableClasses: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = ['sprk-b-TableContainer'];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  getTableClasses(): string {\n    const classArray: string[] = [\n      'sprk-b-Table',\n      'sprk-b-Table--spacing-medium',\n      'sprk-b-Table--striped-even',\n      'sprk-b-Table--bordered-columns',\n      'sprk-b-Table--bordered-columns-inside'\n    ];\n\n    if (this.additionalTableClasses) {\n      this.additionalTableClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SprkTextareaContainerComponent",
            "id": "component-SprkTextareaContainerComponent-e6f967d79e832cf88444f437a458b9ef",
            "file": "projects/spark-angular/src/lib/components/inputs/sprk-textarea-container/sprk-textarea-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sprk-textarea-container",
            "styleUrls": [],
            "styles": [],
            "template": "<div [ngClass]=\"getClasses()\">\n  <ng-content select=\"[sprkLabel]\"></ng-content>\n  <ng-content select=\"[sprkInput]\"></ng-content>\n  <ng-content select=\"sprk-selection-item-container\"></ng-content>\n  <ng-content select=\"[sprkHelperText]\"></ng-content>\n  <ng-content select=\"[sprkFieldError]\"></ng-content>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\ncomponent.</p>\n",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "iconContainerClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\nicon container.</p>\n",
                    "line": 33,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "error",
                    "type": "SprkFieldErrorDirective",
                    "optional": false,
                    "description": "<p>This component expects a child element\nwith the <code>sprkFieldError</code> directive.</p>\n",
                    "line": 51,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "SprkFieldErrorDirective, {static: true}"
                        }
                    ]
                },
                {
                    "name": "input",
                    "type": "SprkInputDirective",
                    "optional": false,
                    "description": "<p>This component expects a child input element\nwith the <code>sprkInput</code> directive.</p>\n",
                    "line": 45,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "SprkInputDirective, {static: true}"
                        }
                    ]
                },
                {
                    "name": "label",
                    "type": "SprkLabelDirective",
                    "optional": false,
                    "description": "<p>This component expects a child label element\nwith the <code>sprkLabel</code> directive.</p>\n",
                    "line": 39,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "SprkLabelDirective, {static: true}"
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ContentChild, Input, OnInit } from '@angular/core';\nimport * as _ from 'lodash';\nimport { SprkFieldErrorDirective } from '../../../directives/inputs/sprk-field-error/sprk-field-error.directive';\nimport { SprkInputDirective } from '../../../directives/inputs/sprk-input/sprk-input.directive';\nimport { SprkLabelDirective } from '../../../directives/inputs/sprk-label/sprk-label.directive';\n\n@Component({\n  selector: 'sprk-textarea-container',\n  template: `\n    <div [ngClass]=\"getClasses()\">\n      <ng-content select=\"[sprkLabel]\"></ng-content>\n      <ng-content select=\"[sprkInput]\"></ng-content>\n      <ng-content select=\"sprk-selection-item-container\"></ng-content>\n      <ng-content select=\"[sprkHelperText]\"></ng-content>\n      <ng-content select=\"[sprkFieldError]\"></ng-content>\n    </div>\n  `\n})\nexport class SprkTextareaContainerComponent implements OnInit {\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * icon container.\n   */\n  @Input()\n  iconContainerClasses: string;\n  /**\n   * This component expects a child label element\n   * with the `sprkLabel` directive.\n   */\n  @ContentChild(SprkLabelDirective, { static: true })\n  label: SprkLabelDirective;\n  /**\n   * This component expects a child input element\n   * with the `sprkInput` directive.\n   */\n  @ContentChild(SprkInputDirective, { static: true })\n  input: SprkInputDirective;\n  /**\n   * This component expects a child element\n   * with the `sprkFieldError` directive.\n   */\n  @ContentChild(SprkFieldErrorDirective, { static: true })\n  error: SprkFieldErrorDirective;\n\n  /**\n   * @ignore\n   */\n  id = _.uniqueId();\n  /**\n   * @ignore\n   */\n  input_id = `input_${this.id}`;\n  /**\n   * @ignore\n   */\n  error_id = `error_${this.id}`;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = [\n      'sprk-b-InputContainer',\n      'sprk-b-InputContainer--textarea'\n    ];\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    if (this.label && this.input) {\n      this.label.ref.nativeElement.setAttribute('for', this.input_id);\n      this.input.ref.nativeElement.id = this.input_id;\n    }\n    if (this.input && this.error) {\n      this.input.ref.nativeElement.setAttribute(\n        'aria-describedby',\n        this.error_id\n      );\n      this.error.ref.nativeElement.id = this.error_id;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "SprkToggleComponent",
            "id": "component-SprkToggleComponent-fb367785e72635ba7f9763f390ac3bf2",
            "file": "projects/spark-angular/src/lib/components/sprk-toggle/sprk-toggle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sprk-toggle",
            "styleUrls": [],
            "styles": [],
            "template": "<div\n  class=\"sprk-u-Overflow--hidden {{ additionalClasses }}\"\n  [attr.data-id]=\"idString\"\n>\n  <sprk-link\n    linkType=\"simple\"\n    additionalClasses=\"{{\n      titleFontClass\n    }} sprk-b-Link--has-icon sprk-u-TextCrop--none\"\n    (click)=\"toggle($event)\"\n    [ariaExpanded]=\"isOpen ? 'true' : 'false'\"\n    [analyticsString]=\"analyticsString\"\n  >\n    <sprk-icon\n      iconType=\"chevron-down-circle-two-color\"\n      additionalClasses=\"{{\n        iconClass\n      }} sprk-c-Icon--l sprk-u-mrs sprk-c-Icon--toggle {{ iconStateClass }}\"\n    ></sprk-icon>\n    {{ title }}\n  </sprk-link>\n\n  <div [@toggleContent]=\"animState\">\n    <div class=\"sprk-u-pts sprk-u-pbs\"><ng-content></ng-content></div>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\ncomponent.</p>\n",
                    "line": 51,
                    "type": "string"
                },
                {
                    "name": "analyticsString",
                    "description": "<p>The value supplied will be assigned to the\n<code>data-analytics</code> attribute on the component.\nIntended for an outside\nlibrary to capture data.</p>\n",
                    "line": 44,
                    "type": "string"
                },
                {
                    "name": "iconClass",
                    "description": "<p>The value supplied will be assigned as a\nCSS class on the icon used in the Toggle.\nThis is intended for overrides.</p>\n",
                    "line": 64,
                    "type": "string"
                },
                {
                    "name": "idString",
                    "description": "<p>The value supplied will be assigned\nto the <code>data-id</code> attribute on the\ncomponent. This is intended to be\nused as a selector for automated\ntools. This value should be unique\nper page.</p>\n",
                    "line": 81,
                    "type": "string"
                },
                {
                    "name": "title",
                    "description": "<p>The value supplied will be\nrendered as the main Toggle link text.</p>\n",
                    "line": 57,
                    "type": "string"
                },
                {
                    "name": "titleFontClass",
                    "defaultValue": "'sprk-b-TypeBodyThree'",
                    "description": "<p>The value supplied will be assigned as a CSS class\non the clickable title text used in the Toggle.\nThis is intended for overrides.</p>\n",
                    "line": 71
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { toggleAnimations } from './sprk-toggle-animations';\n\n@Component({\n  selector: 'sprk-toggle',\n  template: `\n    <div\n      class=\"sprk-u-Overflow--hidden {{ additionalClasses }}\"\n      [attr.data-id]=\"idString\"\n    >\n      <sprk-link\n        linkType=\"simple\"\n        additionalClasses=\"{{\n          titleFontClass\n        }} sprk-b-Link--has-icon sprk-u-TextCrop--none\"\n        (click)=\"toggle($event)\"\n        [ariaExpanded]=\"isOpen ? 'true' : 'false'\"\n        [analyticsString]=\"analyticsString\"\n      >\n        <sprk-icon\n          iconType=\"chevron-down-circle-two-color\"\n          additionalClasses=\"{{\n            iconClass\n          }} sprk-c-Icon--l sprk-u-mrs sprk-c-Icon--toggle {{ iconStateClass }}\"\n        ></sprk-icon>\n        {{ title }}\n      </sprk-link>\n\n      <div [@toggleContent]=\"animState\">\n        <div class=\"sprk-u-pts sprk-u-pbs\"><ng-content></ng-content></div>\n      </div>\n    </div>\n  `,\n  animations: [toggleAnimations.toggleContent]\n})\nexport class SprkToggleComponent implements OnInit {\n  /**\n   * The value supplied will be assigned to the\n   * `data-analytics` attribute on the component.\n   * Intended for an outside\n   * library to capture data.\n   */\n  @Input()\n  analyticsString: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * The value supplied will be\n   * rendered as the main Toggle link text.\n   */\n  @Input()\n  title: string;\n  /**\n   * The value supplied will be assigned as a\n   * CSS class on the icon used in the Toggle.\n   * This is intended for overrides.\n   */\n  @Input()\n  iconClass: string;\n  /**\n   * The value supplied will be assigned as a CSS class\n   * on the clickable title text used in the Toggle.\n   * This is intended for overrides.\n   */\n  @Input()\n  titleFontClass = 'sprk-b-TypeBodyThree';\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n\n  /**\n   * @ignore\n   */\n  public isOpen = false;\n  /**\n   * @ignore\n   */\n  public iconStateClass = '';\n  /**\n   * @ignore\n   */\n  public animState = 'closed';\n\n  /**\n   * @ignore\n   */\n  toggleState(): void {\n    this.isOpen === false\n      ? (this.animState = 'closed')\n      : (this.animState = 'open');\n\n    this.isOpen === false\n      ? (this.iconStateClass = '')\n      : (this.iconStateClass = 'sprk-c-Icon--open');\n  }\n\n  /**\n   * @ignore\n   */\n  toggle(event): void {\n    event.preventDefault();\n    this.isOpen = !this.isOpen;\n    this.toggleState();\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n    this.toggleState();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "SprkUnorderedListComponent",
            "id": "component-SprkUnorderedListComponent-a5a9c6f9e1eb0ff186bb3b4efe547ab7",
            "file": "projects/spark-angular/src/lib/components/sprk-unordered-list/sprk-unordered-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sprk-unordered-list",
            "styleUrls": [],
            "styles": [],
            "template": "<ul [ngClass]=\"getClasses()\" [attr.data-id]=\"idString\">\n  <li\n    *ngFor=\"let item of items\"\n    [attr.data-analytics]=\"item.analyticsString\"\n    [attr.data-id]=\"item.idString\"\n    [ngClass]=\"item.additionalClasses\"\n  >\n    <ng-container [ngTemplateOutlet]=\"item.content\"></ng-container>\n  </li>\n</ul>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "additionalClasses",
                    "description": "<p>Expects a space separated string\nof classes to be added to the\ncomponent.</p>\n",
                    "line": 32,
                    "type": "string"
                },
                {
                    "name": "idString",
                    "description": "<p>The value supplied will be assigned\nto the <code>data-id</code> attribute on the\ncomponent. This is intended to be\nused as a selector for automated\ntools. This value should be unique\nper page.</p>\n",
                    "line": 42,
                    "type": "string"
                },
                {
                    "name": "listType",
                    "description": "<p>This value determines what List variant is rendered.\nCan be <code>bare</code> or <code>indented</code>.</p>\n",
                    "line": 25,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "items",
                    "type": "QueryList<SprkListItemComponent>",
                    "optional": false,
                    "description": "<p>This component expects children <code>&lt;sprk-list-item&gt;&lt;/sprk-list-item&gt;</code>\ncomponents.</p>\n",
                    "line": 48,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "SprkListItemComponent"
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, ContentChildren, QueryList } from '@angular/core';\nimport { SprkListItemComponent } from '../sprk-list-item/sprk-list-item.component';\n\n@Component({\n  selector: 'sprk-unordered-list',\n  template: `\n    <ul [ngClass]=\"getClasses()\" [attr.data-id]=\"idString\">\n      <li\n        *ngFor=\"let item of items\"\n        [attr.data-analytics]=\"item.analyticsString\"\n        [attr.data-id]=\"item.idString\"\n        [ngClass]=\"item.additionalClasses\"\n      >\n        <ng-container [ngTemplateOutlet]=\"item.content\"></ng-container>\n      </li>\n    </ul>\n  `\n})\nexport class SprkUnorderedListComponent {\n  /**\n   * This value determines what List variant is rendered.\n   * Can be `bare` or `indented`.\n   */\n  @Input()\n  listType: string;\n  /**\n   * Expects a space separated string\n   * of classes to be added to the\n   * component.\n   */\n  @Input()\n  additionalClasses: string;\n  /**\n   * The value supplied will be assigned\n   * to the `data-id` attribute on the\n   * component. This is intended to be\n   * used as a selector for automated\n   * tools. This value should be unique\n   * per page.\n   */\n  @Input()\n  idString: string;\n\n  /**\n   * This component expects children `<sprk-list-item></sprk-list-item>`\n   * components.\n   */\n  @ContentChildren(SprkListItemComponent) items: QueryList<\n    SprkListItemComponent\n  >;\n\n  /**\n   * @ignore\n   */\n  getClasses(): string {\n    const classArray: string[] = [''];\n\n    switch (this.listType) {\n      case 'indented':\n        classArray.push('sprk-b-List');\n        classArray.push('sprk-b-List--indented');\n        break;\n      case 'bare':\n        classArray.push('sprk-b-List');\n        classArray.push('sprk-b-List--bare');\n        break;\n      case 'horizontal':\n        classArray.push('sprk-o-HorizontalList');\n        break;\n      default:\n        break;\n    }\n\n    if (this.additionalClasses) {\n      this.additionalClasses.split(' ').forEach(className => {\n        classArray.push(className);\n      });\n    }\n\n    return classArray.join(' ');\n  }\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 81
            }
        }
    ],
    "modules": [
        {
            "name": "SparkAngularModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SparkInputContainerModule"
                        },
                        {
                            "name": "SprkAccordionItemModule"
                        },
                        {
                            "name": "SprkAccordionModule"
                        },
                        {
                            "name": "SprkAlertModule"
                        },
                        {
                            "name": "SprkAwardModule"
                        },
                        {
                            "name": "SprkButtonModule"
                        },
                        {
                            "name": "SprkCardModule"
                        },
                        {
                            "name": "SprkDatepickerModule"
                        },
                        {
                            "name": "SprkDictionaryModule"
                        },
                        {
                            "name": "SprkDividerModule"
                        },
                        {
                            "name": "SprkDropdownModule"
                        },
                        {
                            "name": "SprkFieldErrorModule"
                        },
                        {
                            "name": "SprkFooterModule"
                        },
                        {
                            "name": "SprkFormatterDateModule"
                        },
                        {
                            "name": "SprkFormatterMonetaryModule"
                        },
                        {
                            "name": "SprkFormatterPhoneNumberModule"
                        },
                        {
                            "name": "SprkFormatterSsnModule"
                        },
                        {
                            "name": "SprkHelperTextModule"
                        },
                        {
                            "name": "SprkHighlightBoardModule"
                        },
                        {
                            "name": "SprkHugeInputContainerModule"
                        },
                        {
                            "name": "SprkIconInputContainerModule"
                        },
                        {
                            "name": "SprkIconModule"
                        },
                        {
                            "name": "SprkInputModule"
                        },
                        {
                            "name": "SprkLabelModule"
                        },
                        {
                            "name": "SprkLinkModule"
                        },
                        {
                            "name": "SprkListItemModule"
                        },
                        {
                            "name": "SprkMastheadModule"
                        },
                        {
                            "name": "SprkModalModule"
                        },
                        {
                            "name": "SprkOrderedListModule"
                        },
                        {
                            "name": "SprkPaginationModule"
                        },
                        {
                            "name": "SprkPromoModule"
                        },
                        {
                            "name": "SprkSelectionContainerModule"
                        },
                        {
                            "name": "SprkSelectionInputModule"
                        },
                        {
                            "name": "SprkSelectionItemContainerModule"
                        },
                        {
                            "name": "SprkSelectionLabelModule"
                        },
                        {
                            "name": "SprkStackItemModule"
                        },
                        {
                            "name": "SprkStackModule"
                        },
                        {
                            "name": "SprkTabbedNavigationModule"
                        },
                        {
                            "name": "SprkTabbedNavigationPanelModule"
                        },
                        {
                            "name": "SprkTabbedNavigationTabModule"
                        },
                        {
                            "name": "SprkTableEmptyHeadingModule"
                        },
                        {
                            "name": "SprkTableGroupedColumnModule"
                        },
                        {
                            "name": "SprkTableHeadModule"
                        },
                        {
                            "name": "SprkTableModule"
                        },
                        {
                            "name": "SprkTableRowHeadingModule"
                        },
                        {
                            "name": "SprkTextareaContainerModule"
                        },
                        {
                            "name": "SprkToggleModule"
                        },
                        {
                            "name": "SprkUnorderedListModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SparkInputContainerModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SparkInputContainerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SparkInputContainerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkAccordionItemModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkAccordionItemComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SprkIconModule"
                        },
                        {
                            "name": "SprkLinkModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkAccordionItemComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkAccordionModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkAccordionComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SprkIconModule"
                        },
                        {
                            "name": "SprkLinkModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkAccordionComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkAlertModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkAlertComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SprkIconModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkAlertComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkAwardModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkAwardComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SprkLinkModule"
                        },
                        {
                            "name": "SprkStackItemModule"
                        },
                        {
                            "name": "SprkStackModule"
                        },
                        {
                            "name": "SprkToggleModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkAwardComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkButtonModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkButtonDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkButtonDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkCardModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkCardComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SprkIconModule"
                        },
                        {
                            "name": "SprkLinkModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkCardComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkCarouselItemModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkCarouselItemComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SprkIconModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkCarouselItemComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkCarouselModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkCarouselComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SprkIconModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkCarouselComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkDatepickerModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkDatepickerDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkDatepickerDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkDictionaryModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkDictionaryComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkDictionaryComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkDividerModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkDividerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkDividerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkDropdownModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkDropdownComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SprkIconModule"
                        },
                        {
                            "name": "SprkLinkModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkDropdownComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkFieldErrorModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkFieldErrorDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkFieldErrorDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkFooterModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkFooterComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SprkIconModule"
                        },
                        {
                            "name": "SprkLinkModule"
                        },
                        {
                            "name": "SprkStackItemModule"
                        },
                        {
                            "name": "SprkStackModule"
                        },
                        {
                            "name": "SprkToggleModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkFooterComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkFormatterDateModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkFormatterDateDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkFormatterDateDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkFormatterMonetaryModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkFormatterMonetaryDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkFormatterMonetaryDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkFormatterPhoneNumberModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkFormatterPhoneNumberDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkFormatterPhoneNumberDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkFormatterSsnModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkFormatterSsnDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkFormatterSsnDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkHelperTextModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkHelperTextDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkHelperTextDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkHighlightBoardModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkHighlightBoardComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SprkLinkModule"
                        },
                        {
                            "name": "SprkStackItemModule"
                        },
                        {
                            "name": "SprkStackModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkHighlightBoardComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkHugeInputContainerModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkHugeInputContainerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkHugeInputContainerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkIconInputContainerModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkIconInputContainerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkIconInputContainerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkIconModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkIconComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkIconComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkInputModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkInputDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkInputDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkLabelModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkLabelDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkLabelDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkLinkModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkLinkComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkLinkComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkListItemModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkListItemComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkListItemComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkMastheadAccordionItemModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkMastheadAccordionItemComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SprkIconModule"
                        },
                        {
                            "name": "SprkLinkModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkMastheadAccordionItemComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkMastheadAccordionModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkMastheadAccordionComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SprkIconModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkMastheadAccordionComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkMastheadModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkMastheadComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SprkAccordionItemModule"
                        },
                        {
                            "name": "SprkAccordionModule"
                        },
                        {
                            "name": "SprkDropdownModule"
                        },
                        {
                            "name": "SprkIconModule"
                        },
                        {
                            "name": "SprkLinkModule"
                        },
                        {
                            "name": "SprkMastheadAccordionItemModule"
                        },
                        {
                            "name": "SprkMastheadAccordionModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkMastheadComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkModalModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkModalComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SprkIconModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkModalComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkOrderedListModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkOrderedListComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkOrderedListComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkPaginationModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkPaginationComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SprkIconModule"
                        },
                        {
                            "name": "SprkLinkModule"
                        },
                        {
                            "name": "SprkListItemModule"
                        },
                        {
                            "name": "SprkUnorderedListModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkPaginationComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkPromoModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkPromoComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SprkIconModule"
                        },
                        {
                            "name": "SprkLinkModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkPromoComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkSelectionContainerModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkSelectionContainerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkSelectionContainerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkSelectionInputModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkSelectionInputDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkSelectionInputDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkSelectionItemContainerModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkSelectionItemContainerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkSelectionItemContainerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkSelectionLabelModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkSelectionLabelDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkSelectionLabelDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkStackItemModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkStackItemDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkStackItemDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkStackModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkStackComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkStackComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkStepperModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkStepperComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SprkStepperStepModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkStepperComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkStepperStepModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkStepperStepComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SprkLinkModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkStepperStepComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkTabbedNavigationModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkTabbedNavigationComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkTabbedNavigationComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkTabbedNavigationPanelModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkTabbedNavigationPanelDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkTabbedNavigationPanelDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkTabbedNavigationTabModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkTabbedNavigationTabDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkTabbedNavigationTabDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkTableEmptyHeadingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkTableEmptyHeadingDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkTableEmptyHeadingDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkTableGroupedColumnModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkTableGroupedColumnDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkTableGroupedColumnDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkTableHeadModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkTableHeadDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkTableHeadDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkTableModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkTableComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkTableComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkTableRowHeadingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkTableRowHeadingDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkTableRowHeadingDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkTextareaContainerModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkTextareaContainerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkTextareaContainerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkToggleModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkToggleComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SprkIconModule"
                        },
                        {
                            "name": "SprkLinkModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkToggleComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SprkUnorderedListModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SprkUnorderedListComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SprkUnorderedListComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "access",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"access\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "amountMoney",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"amount-money\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "application",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"application\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "applyNow",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"apply-now\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "autoLoans",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"auto-loans\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "bare",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-ordered-list/sprk-list.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-unordered-list\n      listType=\"bare\"\n      idString=\"unordered-list-2\"\n    >\n      <sprk-list-item idString=\"list-item-10\">\n        Bare List Item\n      </sprk-list-item>\n      <sprk-list-item idString=\"list-item-11\">\n        Bare List Item\n      </sprk-list-item>\n      <sprk-list-item idString=\"list-item-12\">\n        Bare List Item\n      </sprk-list-item>\n    </sprk-unordered-list>\n  `,\n})"
            },
            {
                "name": "baths",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"baths\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "beds",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"beds\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "bell",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"bell\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "bellFilled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"bell-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "bellFilledSmall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"bell-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "blog",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon iconType=\"blog\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "calculator",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"calculator\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "calendar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"calendar\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "callTeamMember",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"call-team-member\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "camera",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"camera\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "cashBack",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"cash-back\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "chatOnline",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chat-online\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "chatOnlineFilled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chat-online-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "chatOnlineFilledSmall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chat-online-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "checkbox",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-selection-container>\n      <label sprkLabel>\n        Checkbox Group Label\n      </label>\n\n      <sprk-selection-item-container>\n        <input\n          type=\"checkbox\"\n          name=\"checkbox_input\"\n          [(ngModel)]=\"checkbox_input1\"\n          sprkSelectionInput\n          #checkboxInput1=\"ngModel\"\n          data-id=\"checkbox-1\"\n          id=\"checkbox-1\"\n          (change)=\"onSelect($event)\"\n        >\n\n        <label\n          for=\"checkbox-1\"\n          sprkSelectionLabel\n        >\n          Checkbox Item 1\n        </label>\n      </sprk-selection-item-container>\n\n      <sprk-selection-item-container>\n        <input\n          type=\"checkbox\"\n          name=\"checkbox_input\"\n          [(ngModel)]=\"checkbox_input2\"\n          sprkSelectionInput\n          #checkboxInput2=\"ngModel\"\n          data-id=\"checkbox-2\"\n          id=\"checkbox-2\"\n          (change)=\"onSelect($event)\"\n        >\n\n        <label\n          for=\"checkbox-2\"\n          sprkSelectionLabel\n        >\n          Checkbox Item 2\n        </label>\n      </sprk-selection-item-container>\n\n      <sprk-selection-item-container>\n        <input\n          type=\"checkbox\"\n          name=\"checkbox_input\"\n          [(ngModel)]=\"checkbox_input3\"\n          sprkSelectionInput\n          #checkboxInput3=\"ngModel\"\n          data-id=\"checkbox-3\"\n          id=\"checkbox-3\"\n          (change)=\"onSelect($event)\"\n        >\n\n        <label\n          for=\"checkbox-3\"\n          sprkSelectionLabel\n        >\n          Checkbox Item 3\n        </label>\n      </sprk-selection-item-container>\n    </sprk-selection-container>\n  `,\n  props: {\n    onSelect() {\n      this.checkbox_input1 === true\n        ? (this.isChecked = true)\n        : (this.isChecked = false);\n    }\n  },\n})"
            },
            {
                "name": "checkMark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"check-mark\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "checkMarkFilled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"check-mark-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "checkMarkFilledSmall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"check-mark-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "chevronDown",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-down\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "chevronDownCircle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-down-circle\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "chevronDownCircleTwoColor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-down-circle-two-color\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "chevronDownFilled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-down-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "chevronDownFilledSmall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-down-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "chevronLeft",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-left\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "chevronLeftCircle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-left-circle\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "chevronLeftCircleTwoColor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-left-circle-two-color\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "chevronLeftFilled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-left-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "chevronLeftFilledSmall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-left-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "chevronRight",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-right\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "chevronRightCircle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-right-circle\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "chevronRightCircleTwoColor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-right-circle-two-color\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "chevronRightFilled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-right-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "chevronRightFilledSmall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-right-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "chevronUp",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-up\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "chevronUpCircle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-up-circle\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "chevronUpCircleTwoColor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-up-circle-two-color\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "chevronUpFilled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-up-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "chevronUpFilledSmall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-up-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "clock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"clock\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "clockFilled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"clock-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "clockFilledSmall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"clock-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "close",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"close\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "closeCircle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"close-circle\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "closeFilled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"close-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "closeFilledSmall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"close-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "cloud",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"cloud\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "cloudFilled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"cloud-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "cloudFilledSmall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"cloud-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "columnComparison",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-table/sprk-table.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-table idString=\"table-1\">\n      <thead sprkTableHead>\n        <tr>\n          <th>Column Heading</th>\n          <th>Column Heading</th>\n          <th>Column Heading</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>Data 1</td>\n          <td>Data 2</td>\n          <td>Data 3</td>\n        </tr>\n        <tr>\n          <td>Data 1</td>\n          <td>Data 2</td>\n          <td>Data 3</td>\n        </tr>\n        <tr>\n          <td>Data 1</td>\n          <td>Data 2</td>\n          <td>Data 3</td>\n        </tr>\n        <tr>\n          <td>Data 1</td>\n          <td>Data 2</td>\n          <td>Data 3</td>\n        </tr>\n      </tbody>\n    </sprk-table>\n  `,\n})"
            },
            {
                "name": "communication",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"communication\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "communicationFilled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"communication-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "communicationFilledSmall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"communication-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "condo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"condo\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "cooling",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"cooling\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "credit",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"credit\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "creditCardPayoff",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"credit-card-payoff\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "dateInput",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-input-container>\n      <label sprkLabel>Date Input (No Picker)</label>\n      <input\n        name=\"date_input\"\n        type=\"text\"\n        pattern=\"^(((0[13578]|1[02])([\\\\/-]?)(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)([\\\\/-]?)(0[1-9]|[12]\\\\d|30)|02([\\\\/-]?)((0[1-9])|[12]\\\\d))(\\\\4|\\\\7|\\\\9)[12]\\\\d{3})?$\"\n        placeholder=\"MM/DD/YYYY\"\n        [(ngModel)]=\"date_input\"\n        #dateInput=\"ngModel\"\n        sprkFormatterDate\n        sprkInput\n      />\n      <span [hidden]=\"dateInput.valid || dateInput.pristine\" sprkFieldError>\n        <sprk-icon\n          iconType=\"exclamation-filled-small\"\n          additionalClasses=\"sprk-b-ErrorIcon\"\n        ></sprk-icon>\n        <div class=\"sprk-b-ErrorText\">Invalid date.</div>\n      </span>\n    </sprk-input-container>\n  `,\n})"
            },
            {
                "name": "datePicker",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon-input-container>\n      <label class=\"sprk-b-Label--with-icon\" sprkLabel>\n        Date Input\n      </label>\n      <sprk-icon\n        iconType=\"calendar\"\n        additionalClasses=\"sprk-c-Icon--stroke-current-color sprk-b-DatePicker__icon\"\n        sprk-input-icon\n      ></sprk-icon>\n      <input\n        name=\"datepicker_input\"\n        class=\"sprk-b-TextInput--has-svg-icon\"\n        type=\"text\"\n        pattern=\"^(((0[13578]|1[02])([\\\\/-]?)(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)([\\\\/-]?)(0[1-9]|[12]\\\\d|30)|02([\\\\/-]?)((0[1-9])|[12]\\\\d))(\\\\4|\\\\7|\\\\9)[12]\\\\d{3})?$\"\n        placeholder=\"MM/DD/YYYY\"\n        [(ngModel)]=\"datepicker_input\"\n        #datepickerInput=\"ngModel\"\n        sprkFormatterDate\n        [sprkDatePickerConfig]=\"dpConfig\"\n        sprkDatepicker\n        sprkInput\n      />\n      <div\n        [hidden]=\"datepickerInput.valid || datepickerInput.pristine\"\n        sprkFieldError\n      >\n        <sprk-icon\n          iconType=\"exclamation-filled-small\"\n          additionalClasses=\"sprk-b-ErrorIcon\"\n        ></sprk-icon>\n        <div class=\"sprk-b-ErrorText\">Invalid date.</div>\n      </div>\n    </sprk-icon-input-container>\n  `,\n})"
            },
            {
                "name": "dedicatedTeam",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"dedicated-team\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "defaultDictionary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-dictionary/sprk-dictionary.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-dictionary\n     idString=\"dictionary-default\"\n     [data]=\"{\n       'Email Address':'sparkdesignsystem@quickenloans.com',\n       'Mailing Address': '123 Main Street, Detroit, MI, 48216',\n       'Home Phone': '(123) 456-7890',\n       'Cell Phone': '(098) 765-4321',\n       'Work Phone': '(555) 555-5555',\n       'Work Extension': '55555'\n     }\"\n     idString=\"dictionary-1\"\n    ></sprk-dictionary>\n  `\n})"
            },
            {
                "name": "defaultStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-accordion/sprk-accordion.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-accordion>\n      <sprk-accordion-item\n        title=\"This is an accordion heading\"\n        additionalClasses=\"sprk-u-mbs\"\n        isOpen=\"true\"\n        additionalHeadingClasses=\"sprk-b-TypeDisplaySeven\"\n        idString=\"accordion-item-1\"\n        analyticsString=\"object.action.event\"\n      >\n        <p>\n          This is an example of accordion content.\n          This is an example of accordion content.\n          This is an example of accordion content.\n          This is an example of accordion content.\n        </p>\n      </sprk-accordion-item>\n\n      <sprk-accordion-item\n        title=\"This is an accordion heading\"\n        idString=\"accordion-item-2\"\n        analyticsString=\"object.action.event\"\n        additionalHeadingClasses=\"sprk-b-TypeDisplaySeven\"\n      >\n        <p>\n          This is an example of accordion content.\n          This is an example of accordion content.\n          This is an example of accordion content.\n          This is an example of accordion content.\n        </p>\n      </sprk-accordion-item>\n\n      <sprk-accordion-item\n        title=\"This is an accordion heading\"\n        idString=\"accordion-item-3\"\n        analyticsString=\"object.action.event\"\n        additionalHeadingClasses=\"sprk-b-TypeDisplaySeven\"\n      >\n        <p>\n          This is an example of accordion content.\n          This is an example of accordion content.\n          This is an example of accordion content.\n          This is an example of accordion content.\n        </p>\n      </sprk-accordion-item>\n    </sprk-accordion>\n  `,\n})"
            },
            {
                "name": "defaultStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-card/sprk-card.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-card\n      cardType=\"base\"\n      idString=\"card-default\"\n    >\n      <div class=\"\n        sprk-o-Stack__item\n        sprk-c-Card__content\n        sprk-o-Stack\n        sprk-o-Stack--medium\">\n        Base Card Content\n      </div>\n    </sprk-card>\n  `\n})"
            },
            {
                "name": "defaultStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-footer/sprk-footer.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-footer\n      idString=\"footer-1\"\n      [localLinks]=\"[\n        {\n          heading: 'Site Links',\n          links: [\n            {\n              text: 'About This',\n              href: '/about-this',\n              analyticsString: 'Link to Sub Item 1'\n            },\n            {\n              text: 'About This Other Thing',\n              href: '/about-this-other-thing'\n            },\n            {\n              text: 'About That',\n              href: '/about-that'\n            },\n            {\n              text: 'Link Item',\n              href: '/link-item',\n              analyticsString: 'Link to Sub Item 1'\n            },\n            {\n              text: 'This Link Item',\n              href: '/this-link-item',\n              analyticsString: 'Link to Sub Item 1'\n            }\n          ]\n        },\n        {\n          heading: 'Learn More',\n          links: [\n            {\n              text: 'About This Other Thing',\n              href: '/learn-more-1'\n            },\n            {\n              text: 'About This',\n              href: '/learn-more-2'\n            },\n            {\n              text: 'About That',\n              href: '/learn-more-3'\n            },\n            {\n              text: 'Link Item',\n              href: '/learn-more-4',\n              analyticsString: 'Link to Sub Item 1'\n            }\n          ]\n        },\n        {\n          heading: 'Support',\n          links: [\n            {\n              text: 'Share Your Screen',\n              href: '/share-screen',\n              analyticsString: 'Link to Sub Item 1'\n            },\n            {\n              text: 'Opt Out',\n              href: '/opt-out'\n            },\n            {\n              text: 'About That',\n              href: '/about-that'\n            },\n            {\n              text: 'Disclosures and Other Things',\n              href: '/things',\n              analyticsString: 'Link to Sub Item 1'\n            },\n            {\n              text: 'We Want Your Feedback',\n              href: '/feedback',\n              analyticsString: 'Link to Sub Item 1'\n            }\n          ]\n        }\n      ]\"\n\n      globalHeading=\"Global Links\"\n      [globalLinks]=\"[\n        {\n          text: 'Lorem ipsum dolor sit amet, consectetur.',\n          href: '/global-1',\n          icon: 'auto-loans',\n          iconCSS: 'sprk-c-Icon--xl sprk-c-Icon--stroke-current-color',\n          analytics: 'link-1',\n          iconScreenReaderText: 'auto loans'\n        },\n        {\n          text: 'Lorem ipsum dolor sit amet, consectetur.',\n          href: '/global-2',\n          imgSrc:\n            'https://spark-assets.netlify.com/spark-placeholder.jpg',\n          imgCSS: 'sprk-u-Width-20',\n          imgAlt: 'Spark Placeholder Image',\n          analytics: 'link-2'\n        },\n        {\n          text: 'Lorem ipsum dolor sit amet, consectetur.',\n          href: '/global-3',\n          imgSrc:\n            'https://spark-assets.netlify.com/spark-placeholder.jpg',\n          imgCSS: 'sprk-u-Width-20',\n          imgAlt: 'Spark Placeholder Image',\n          analytics: 'link-3'\n        },\n        {\n          text: 'Lorem ipsum dolor sit amet, consectetur.',\n          href: '/global-4',\n          icon: 'auto-loans',\n          iconCSS: 'sprk-c-Icon--xl sprk-c-Icon--stroke-current-color',\n          analytics: 'link-4',\n          iconScreenReaderText: 'auto loans'\n        },\n        {\n          text: 'Lorem ipsum dolor sit amet, consectetur.',\n          href: '/global-5',\n          icon: 'payment-center',\n          iconCSS: 'sprk-c-Icon--xl sprk-c-Icon--stroke-current-color',\n          analytics: 'link-5',\n          iconScreenReaderText: 'payment center'\n        }\n      ]\"\n\n      [socialLinks]=\"[\n        {\n          href: '/icons-1',\n          icon: 'facebook-two-color',\n          iconCSS: 'sprk-c-Icon--l sprk-c-Icon--stroke-current-color',\n          analytics: 'social-link-1',\n          iconScreenReaderText: 'facebook'\n        },\n        {\n          href: '/icons-2',\n          icon: 'instagram-two-color',\n          iconCSS: 'sprk-c-Icon--l sprk-c-Icon--stroke-current-color',\n          analytics: 'social-link-2',\n          iconScreenReaderText: 'instagram'\n        },\n        {\n          href: '/icons-3',\n          icon: 'twitter-two-color',\n          iconCSS: 'sprk-c-Icon--l sprk-c-Icon--stroke-current-color',\n          analytics: 'social-link-3',\n          iconScreenReaderText: 'twitter'\n        },\n        {\n          href: '/icons-4',\n          icon: 'youtube-two-color',\n          iconCSS: 'sprk-c-Icon--l sprk-c-Icon--stroke-current-color',\n          analytics: 'social-link-4',\n          iconScreenReaderText: 'youtube'\n        }\n      ]\"\n\n      [badgeLinks]=\"[\n        {\n          href: '/badge-1',\n          icon: 'townhouse',\n          iconCSS: 'sprk-c-Icon--l sprk-c-Icon--stroke-current-color',\n          analytics: 'link-1',\n          iconScreenReaderText: 'townhouse'\n        },\n        {\n          href: '/badge-2',\n          icon: 'townhouse',\n          iconCSS: 'sprk-c-Icon--l sprk-c-Icon--stroke-current-color',\n          analytics: 'link-2',\n          iconScreenReaderText: 'townhouse'\n        },\n        {\n          href: '/badge-3',\n          icon: 'townhouse',\n          iconCSS: 'sprk-c-Icon--l sprk-c-Icon--stroke-current-color',\n          analytics: 'link-3',\n          iconScreenReaderText: 'townhouse'\n        }\n      ]\"\n\n      awardsHeading=\"Awards\"\n      [awards]=\"[\n        {\n          href: '/awards-1',\n          imgSrc:\n            'https://spark-assets.netlify.com/spark-placeholder.jpg',\n          imgCSS: 'sprk-u-Width-50',\n          imgAlt: 'placeholder',\n          analytics: 'awards-link-1'\n        },\n        {\n          href: '/awards-2',\n          imgSrc:\n            'https://spark-assets.netlify.com/spark-placeholder.jpg',\n          imgCSS: 'sprk-u-Width-50',\n          imgAlt: 'placeholder',\n          analytics: 'awards-link-2'\n        }\n      ]\"\n\n      connectHeading=\"Connect With Us\"\n      [disclaimerText]=\"[\n        {\n          text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.'\n        },\n        {\n          text:\n            'Incididunt ut labore et dolore magna aliqua.\n             Ut enim ad minim veniam.'\n        },\n        {\n          text: 'Lorem ipsum dolor sit amet, consectetur.'\n        },\n        {\n          text: 'Lorem ipsum dolor sit amet, consectetur.'\n        }\n      ]\"\n      [disclaimerToggle]=\"[\n        {\n          title: 'My Award Disclaimer',\n          body:\n            'Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n             Aliquam in laoreet ante.',\n          analytics: 'disclaimer'\n        }\n      ]\"\n    >\n    </sprk-footer>\n  `,\n})"
            },
            {
                "name": "defaultStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-toggle/sprk-toggle.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-toggle\n      title=\"My Disclaimer\"\n      analyticsString=\"My Disclaimer\"\n      idString=\"toggle-1\"\n    >\n      <p class=\"sprk-b-TypeBodyFour\">\n        This is an example of disclaimer\n        content. The aria-expanded=\"true\"\n        attribute will be viewable in the\n        DOM on the toggle link when this\n        content is shown. When this content\n        is hidden the aria-expanded attribute\n        will have the value of false. This helps\n        accessibilty devices in understanding\n        that the link is a control for\n        expandable content.\n      </p>\n    </sprk-toggle>\n  `,\n})"
            },
            {
                "name": "defaultStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-divider/sprk-divider.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-divider idString=\"divider-1\"></sprk-divider>\n  `\n})"
            },
            {
                "name": "defaultStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-masthead/sprk-masthead.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-masthead\n      [narrowNavLinks]=\"defaultNarrowLinks\"\n      idString=\"masthead-1\"\n    >\n      <svg\n        logo-slot\n        class=\"sprk-c-Masthead__logo\"\n        height=\"49\"\n        viewBox=\"0 0 175 49\"\n        width=\"175\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <g fill=\"none\">\n          <path\n            d=\"m42.5897384 43.9901408 9.3126761-16.244668c1.3653924-2.3981891 1.3653924-5.3565392-.0175051-7.7372233l-2.6082494-4.4987927-6.4943662 11.1682092c.3325955 3.6585513-1.680483 7.1245473-5.0239437 8.6474849l-7.2995976 12.5686117 5.4440644-.0175051c2.7482897-.017505 5.3040242-1.4879275 6.6869215-3.8861167z\"\n            fill=\"#ff451a\"\n          ></path>\n          <g\n            fill=\"#000\"\n            transform=\"translate(57.42 2.32)\"\n          >\n            <path\n              d=\"m17.7816098 26.5107847h-14.89678086c-.43762566 0-.85774634-.1750503-1.17283714-.4901408-.31509022-.3150906-.4901406-.7352113-.4901406-1.172837 0-.4376258.17505038-.8577466.4901406-1.1728371.3150908-.3150905.73521148-.4901408 1.17283714-.4901408h14.91428586c2.2056339 0 4.043662-1.732998 4.0961769-3.9211268.017505-1.0853119-.3851107-2.1356137-1.1378271-2.905835-.7527159-.7702213-1.8030182-1.2078471-2.8883299-1.2078471h-10.18792732c-4.04366198 0-7.38712285-3.2209255-7.43963796-7.26458753-.01750504-1.96056333.75271646-3.85110662 2.13561394-5.234004 1.3828969-1.40040241 3.25593556-2.17062374 5.21649854-2.17062374h14.8617709c.9102613 0 1.6629778.73521127 1.6629778 1.66297786 0 .43762576-.1750504.85774648-.4901406 1.17283703-.3150908.31509053-.7352115.49014085-1.1728372.49014085h-14.7917504c-2.20563386 0-4.04366198 1.73299795-4.0961775 3.92112678-.03500996 1.08531183.38511072 2.13561365 1.13782718 2.90583495s1.80301816 1.2078471 2.88832982 1.2078471h10.2929578c1.9605636 0 3.8336017.7877264 5.2164991 2.1706237 1.3828975 1.3828975 2.153119 3.2734407 2.135614 5.2340041-.0525155 4.043662-3.413481 7.2645875-7.457143 7.2645875z\"\n            ></path>\n            <path\n              d=\"m41.693481.37577465h-12.6911471v24.52454725c-.017505.6126761.2975858 1.1903421.8227364 1.4879276.5251511.2975855 1.1728371.3150905 1.6979883 0 .5251505-.3150906.8402413-.8927565.8227364-1.4879276v-21.18108652h9.4352109c2.2931593.01750504 4.1486924 1.83802818 4.2012073 4.13118717.017505 1.12032191-.4201206 2.18812875-1.2078471 2.97585515-.8052314.8227364-1.925553 1.2953722-3.0808851 1.2953722h-4.9189133c-.9102619.0350101-1.6279678.7702213-1.6279678 1.6804829s.7177059 1.6454728 1.6279678 1.6804829h4.9889332c2.0130785 0 3.9386321-.8052314 5.3565395-2.2406439 1.4179075-1.4354125 2.2056339-3.36096577 2.1881289-5.37404421 0-4.13118717-3.4309859-7.49215294-7.6146883-7.49215294z\"\n            ></path>\n            <path\n              d=\"m94.0335214 23.7274849-8.052314-8.2448692h.9977867c2.0130785 0 3.9386316-.8052314 5.356539-2.2406439s2.2056339-3.3784708 2.1881289-5.39154925c-.03501-4.13118717-3.4659959-7.4746479-7.6496983-7.4746479h-12.6911471v24.52454725c-.0175049.6126761.2975859 1.1903421.822737 1.4879276.5251506.3150905 1.1728366.3150905 1.6979877 0 .5251511-.3150906.8402414-.8927565.8227364-1.4879276v-21.18108652h9.4352115c2.2931587.01750504 4.1486918 1.83802818 4.2012068 4.13118717.0175049 1.12032191-.4201207 2.18812875-1.2078471 2.97585515-.8052314.8227364-1.9255531 1.2953722-3.0808852 1.2953722h-4.726358c-.7527164-.0875252-1.4879279.3501006-1.7680082 1.0678069-.2800802.7177062-.0350099 1.5229376.5776661 1.9780683l10.6605636 10.9231389c.665191.560161 1.6454727.5251509 2.2581488-.0875252.665191-.630181.7177059-1.6104628.1575454-2.2756539z\"\n            ></path>\n            <path\n              d=\"m116.019839 23.9200402-9.505231-11.4832998 8.314889-9.2426559c.612676-.68269617.560161-1.75050301-.122535-2.36317907-.682697-.61267605-1.750503-.56016097-2.363179.12253521l-11.745876 13.09376256v-12.0784708c.017505-.61267606-.297585-1.19034206-.8227359-1.48792757-.5251512-.31509054-1.1728372-.31509054-1.6979877 0-.5251512.31509054-.840242.89275654-.822737 1.48792757v22.9315895c-.017505.6126761.2975858 1.1903421.822737 1.4879276.5251505.3150905 1.1728365.3150905 1.6979877 0 .5251509-.3150906.8402409-.8927565.8227359-1.4879276v-5.829175l3.676057-4.0961771 9.190141 11.0981891c.28008.3501007.682696.560161 1.137826.5951711h.157546c.647686 0 1.242857-.3851107 1.505432-.9627767.262576-.595171.175051-1.2778672-.24507-1.7855131z\"\n            ></path>\n            <path\n              d=\"m70.8043462 24.4626962-9.9778676-22.73903423c-.4026157-.9277666-1.3303819-1.52293762-2.3456737-1.52293762-1.0152917 0-1.9430586.59517102-2.3456743 1.52293762l-9.977867 22.73903423c-.3676057.8402414.017505 1.8030181.8577464 2.1706237.8402413.3676056 1.8030181-.017505 2.1706239-.8402415l9.295171-21.18108643 3.2734406 7.45714283h-3.3084505c-.9627768 0-1.7505033.7877264-1.7505033 1.750503 0 .9627767.7877265 1.750503 1.7505033 1.750503h4.8488933l4.4812877 10.2229376c.3851107.8052314 1.3478869 1.1728371 2.1531183.8052314.840242-.3676056 1.2253521-1.3128772.8752519-2.1356136z\"\n            ></path>\n            <path\n              d=\"m3.9701406 31.7272837c3.44849092 0 5.35653954 2.1356137 5.35653954 5.6366197s-1.90804862 5.6541248-5.35653954 5.6541248h-3.71106614v-11.2907445zm-2.64325952 10.3279678h2.59074458c2.76579496 0 4.32374282-1.750503 4.32374282-4.6738431 0-2.92334-1.57545284-4.673843-4.32374282-4.673843h-2.59074458z\"\n            ></path>\n            <path\n              d=\"m17.9566602 43.0180282h-6.8269619v-11.2907445h6.8269619v.9627766h-5.7591552v4.0611671h5.4615694v.9627766h-5.4615694v4.3412475h5.7591552z\"\n            ></path>\n            <path\n              d=\"m20.3898594 40.0946881c.1400398 1.2953722 1.4354124 2.1881288 3.1684101 2.1881288 1.6979883 0 2.9058354-.9452716 2.9058354-2.2056338 0-1.0678068-.7702215-1.750503-2.5207247-2.1881288l-1.295372-.3325955c-2.118109-.525151-3.0108653-1.4179075-3.0108653-2.9408451 0-1.8205231 1.5754529-3.1334004 3.8686116-3.1334004 2.153119 0 3.7635818 1.2778672 3.8686116 2.9933602h-1.0853116c-.1750504-1.2078471-1.2603621-2.0130785-2.8183099-2.0130785-1.6279678 0-2.74829.8927565-2.74829 2.1181086 0 .9802817.7002015 1.5579477 2.4156942 1.9955734l1.1203222.2800805c2.3281687.577666 3.2909455 1.5054327 3.2909455 3.0983904 0 1.9780684-1.6279678 3.2909457-4.0961769 3.2909457-2.3281693 0-4.008652-1.2778672-4.1486924-3.1684105z\"\n            ></path>\n            <path\n              d=\"m29.2649092 43.0180282v-11.2907445h1.0853122v11.2907445z\"\n            ></path>\n            <path\n              d=\"m37.2121933 43.2630986c-3.0633802 0-5.0589537-2.328169-5.0589537-5.8816902 0-3.5535211 1.9955735-5.8816901 5.0414487-5.8816901 2.4156942 0 4.2187118 1.3828974 4.6213275 3.5360161h-1.0853116c-.4726357-1.6104628-1.7505033-2.5382294-3.5360159-2.5382294-2.3806842 0-3.9386321 1.9255533-3.9386321 4.8839034s1.5579479 4.9014085 3.9561371 4.9014085c2.2231389 0 3.6410463-1.4004024 3.6410463-3.5360161v-.3851106h-3.4484909v-.9627767h4.5162976v1.2603621c0 2.7832999-1.8555331 4.603823-4.708853 4.603823z\"\n            ></path>\n            <path\n              d=\"m43.7590744 43.0180282v-11.2907445h1.0503017l6.5818916 9.3826962h.1050299v-9.3826962h1.0503023v11.2907445h-1.0503023l-6.599396-9.3826962h-.1050305v9.3826962z\"\n            ></path>\n            <path\n              d=\"m59.040966 40.0946881c.1400399 1.2953722 1.4354124 2.1881288 3.1684101 2.1881288 1.6979883 0 2.9058354-.9452716 2.9058354-2.2056338 0-1.0678068-.7702215-1.750503-2.5207247-2.1881288l-1.295372-.3325955c-2.1181089-.525151-3.0108652-1.4179075-3.0108652-2.9408451 0-1.8205231 1.5754528-3.1334004 3.8686116-3.1334004 2.1706239 0 3.7635817 1.2778672 3.8686116 2.9933602h-1.0853117c-.1750504-1.2078471-1.260362-2.0130785-2.8358149-2.0130785-1.6279678 0-2.730785.8927565-2.730785 2.1181086 0 .9802817.7002015 1.5579477 2.4156942 1.9955734l1.1203222.2800805c2.3281687.577666 3.2909455 1.5054327 3.2909455 3.0983904 0 1.9780684-1.6279677 3.2909457-4.0961769 3.2909457-2.3281693 0-4.026157-1.2778672-4.1486924-3.1684105z\"\n            ></path>\n            <path\n              d=\"m70.9618916 43.0180282v-4.8839035l-4.0611675-6.406841h1.2253526l3.3084505 5.3215292h.1050299l3.3084511-5.3215292h1.2253521l-4.043662 6.406841v4.8839035z\"\n            ></path>\n            <path\n              d=\"m77.8413685 40.0946881c.1400398 1.2953722 1.4354124 2.1881288 3.1684101 2.1881288 1.6979882 0 2.9058353-.9452716 2.9058353-2.2056338 0-1.0678068-.7702214-1.750503-2.5207246-2.1881288l-1.295372-.3325955c-2.118109-.525151-3.0108653-1.4179075-3.0108653-2.9408451 0-1.8205231 1.5754529-3.1334004 3.8686116-3.1334004 2.1531189 0 3.7635817 1.2778672 3.8686116 2.9933602h-1.0853116c-.1750504-1.2078471-1.2603627-2.0130785-2.8183099-2.0130785-1.6279678 0-2.74829.8927565-2.74829 2.1181086 0 .9802817.7002015 1.5579477 2.4156942 1.9955734l1.1203222.2800805c2.3281687.577666 3.2909455 1.5054327 3.2909455 3.0983904 0 1.9780684-1.6279678 3.2909457-4.0961769 3.2909457-2.3281693 0-4.026157-1.2778672-4.1486925-3.1684105z\"\n            ></path>\n            <path\n              d=\"m89.7447885 43.0180282v-10.3279679h-3.7810861v-.9627766h8.6474845v.9627766h-3.7985911v10.3279679z\"\n            ></path>\n            <path\n              d=\"m102.926077 43.0180282h-6.8269622v-11.2907445h6.8269622v.9627766h-5.7416505v4.0611671h5.4615695v.9627766h-5.4615695v4.3412475h5.7416505z\"\n            ></path>\n            <path\n              d=\"m104.834125 43.0180282v-11.2907445h1.225352l4.166197 9.837827h.10503l4.148693-9.837827h1.242857v11.2907445h-.997787v-9.2076459h-.087526l-3.903621 9.1551308h-.927766l-3.903623-9.1551308h-.070019v9.2076459z\"\n            ></path>\n          </g>\n          <path\n            d=\"m37.7408451 35.3426559c-.0175051.0175051-.0525151.0350101-.0700201.0350101l-16.0696177 7.3521127-3.0283703 5.1989939 11.8684105-.03501z\"\n            fill=\"#ff5c1c\"\n          ></path>\n          <path\n            d=\"m42.9748491 5.95171025-7.544668 12.97122735c3.9561368.560161 7.002012 3.7810865 7.3346077 7.7722334l6.4943662-11.1682093-5.2340041-8.99758543c-.2100603-.38511066-.612676-.59517106-1.0503018-.57766602z\"\n            fill=\"#ff5c1c\"\n          ></path>\n          <path\n            d=\"m21.0585513 42.9748491-5.7066398 2.6082495c-.4551308.2100603-.7352113.7002012-.6651912 1.1903421.0700201.4901408.4376258.9102615.9277666.9977867.5076459.1050301 1.0152918.1575452 1.5229376.1575452h.0175051 1.4179074l3.0283703-5.1989939z\"\n            fill=\"#ff721e\"\n          ></path>\n          <path\n            d=\"m35.4301811 18.9229376 7.544668-12.97122735c-.1400403 0-.2800805.03501008-.4201207.10503017l-3.5885312 1.59295776-11.8859155 5.26901412-6.4243461 11.045674 9.855332-4.3937626c1.5404427-.6826961 3.2559356-.9102615 4.9189135-.6476861z\"\n            fill=\"#ff721e\"\n          ></path>\n          <path\n            d=\"m17.3649899 17.2249497c-1.8905432.8402415-2.7832997 3.0458753-2.0130784 4.9014085.3851106.9277665 1.1378269 1.6629778 2.0830986 2.0480885.9452716.3676056 1.9955734.3501006 2.9058349-.0525151l.3150906-.1400403 6.4243461-11.063179z\"\n            fill=\"#ff8920\"\n          ></path>\n          <path\n            d=\"m37.5657948 25.9774648c-.3851107-.9277666-1.137827-1.6629779-2.0830986-2.0480885-.9452717-.3676056-1.9955735-.3501007-2.905835.052515l-.1225352.0525151-6.4243461 11.0631791 9.5227364-4.2187123c1.8905433-.8402414 2.8008048-3.0283702 2.0130785-4.9014084z\"\n            fill=\"#ff5c1c\"\n          ></path>\n          <path\n            d=\"m17.6275654 29.1983903-7.509658 12.9362174c.0875252-.0175051.1750504-.0350101.2450705-.0700202l3.5885312-1.5929577 12.0959758-5.3565392 6.4243461-11.0631791-10.0653924 4.4812877c-1.5054326.6651911-3.1684104.8927565-4.7788732.6651911z\"\n            fill=\"#ff721e\"\n          ></path>\n          <path\n            d=\"m31.859155 5.12897384 5.7066398-2.60824949c.4726358-.21006037.7352112-.70020121.6826961-1.20784709-.052515-.50764587-.4376257-.91026157-.9452716-.99778671-.5076458-.10503019-1.0152917-.15754528-1.5229376-.15754528h-.017505-1.2778673l-2.9758551 5.11146881z\"\n            fill=\"#ff721e\"\n          ></path>\n          <path\n            d=\"m10.8881288 24.2619718c-.3676057-.8227364-.6126761-1.6979879-.7177062-2.6082495l-6.44185117 11.0806841 5.14647889 8.8575453c.24507042.4201207.73521125.6476861 1.22535208.542656l7.527163-12.9362174c-2.9408451-.3851106-5.4790745-2.2406438-6.7394366-4.9364185z\"\n            fill=\"#ff8920\"\n          ></path>\n          <path\n            d=\"m15.3869216 12.6561368 16.1396377-7.36961768 2.9583501-5.11146881-11.8684104.03501005z\"\n            fill=\"#ff8920\"\n          ></path>\n          <path\n            d=\"m10.6605634 17.5925554c.8052314-2.1706238 2.4682092-3.9211268 4.5863179-4.8663985l.1400403-.0525151 7.2295774-12.4460764h-5.5841046c-2.7657948.01750502-5.3215292 1.48792756-6.7044266 3.88611669l-9.31267605 16.24466801c-1.36539235 2.3981892-1.34788732 5.3565392.03501006 7.7372234l2.67826962 4.6213279 6.44185117-11.0806841c-.17505037-1.3653923 0-2.7482897.4901408-4.0436619z\"\n            fill=\"#ffa022\"\n          ></path>\n        </g>\n      </svg>\n\n      <sprk-link\n        navItem-slot\n        linkType=\"plain\"\n        additionalClasses=\"sprk-c-Masthead__link\"\n        href=\"#nogo\"\n      >\n        Sign In\n      </sprk-link>\n\n      <div\n        class=\"sprk-o-Stack__item sprk-o-Stack__item--flex@xxs sprk-o-Stack sprk-o-Stack--misc-a sprk-o-Stack--split@xxs sprk-o-Stack--end-row\"\n        little-nav-slot\n      >\n        <ul\n          class=\"sprk-c-Masthead__site-links sprk-o-Stack__item sprk-o-HorizontalList sprk-o-HorizontalList--spacing-large sprk-o-Stack__item--center-column\"\n        >\n          <li>\n            <a\n              class=\"sprk-b-Link sprk-b-Link--plain sprk-c-Masthead__link\"\n              href=\"#nogo\"\n            >\n              Item 1\n            </a>\n          </li>\n          <li>\n            <a\n              class=\"sprk-b-Link sprk-b-Link--plain sprk-c-Masthead__link\"\n              href=\"#nogo\"\n            >\n              Item 2\n            </a>\n          </li>\n        </ul>\n      </div>\n      <ul\n        class=\"sprk-o-Stack__item sprk-o-HorizontalList sprk-o-HorizontalList--spacing-large sprk-o-Stack--center-column\"\n        utility-slot\n      >\n        <li>\n          <a\n            class=\"sprk-b-Link sprk-b-Link--plain sprk-c-Masthead__link\"\n            href=\"#nogo\"\n          >\n            (555) 555-5555\n          </a>\n        </li>\n        <li>\n          <a\n            class=\"sprk-b-Link sprk-b-Link--plain sprk-c-Masthead__link\"\n            href=\"#nogo\"\n          >\n            Talk To Us\n          </a>\n        </li>\n        <li>\n          <a\n            class=\"sprk-c-Button sprk-c-Button--secondary sprk-c-Button--compact\"\n            href=\"#nogo\"\n          >\n            Sign In\n          </a>\n        </li>\n      </ul>\n      <div\n        class=\"sprk-u-mas\"\n        narrowNavFooter\n      >\n        <a\n          class=\"sprk-c-Button sprk-c-Button--secondary sprk-c-Button--compact sprk-c-Button--full@s\"\n          href=\"#nogo\"\n        >\n          Sign In\n        </a>\n      </div>\n    </sprk-masthead>\n  `,\n  props: {\n    defaultNarrowLinks: [\n      {\n        text: 'Item 1',\n        href: '#nogo',\n        subNav: [\n          {\n            text: 'Item 1',\n            href: '#nogo',\n          },\n          {\n            text: 'Item 2',\n            href: '#nogo',\n          },\n          {\n            text: 'Item 3',\n            href: '#nogo',\n          }\n        ]\n      },\n      {\n        text: 'Item 2',\n        href: '#nogo',\n        active: true\n      },\n      {\n        text: '(555) 555-5555',\n        href: '#nogo',\n        active: false,\n        leadingIcon: 'landline'\n      },\n      {\n        text: 'Talk To Us',\n        href: '#nogo',\n        active: false,\n        leadingIcon: 'call-team-member'\n      }\n    ]\n  }\n})"
            },
            {
                "name": "defaultStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-modal/sprk-modal.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-modal\n      [(isVisible)]=\"choiceVisible\"\n      title=\"Are you sure?\"\n      (hide)=\"toggleChoiceModal($event)\"\n      modalType=\"choice\"\n      idString=\"modal-choice-1\"\n      (confirmClick)=\"confirmClick($event)\"\n    >\n      This is some modal content.\n    </sprk-modal>\n  `,\n  props: {\n    choiceVisible: true,\n    toggleChoiceModal: action('Cancel Click'),\n    confirmClick: action('Confirm Click'),\n  },\n})"
            },
            {
                "name": "defaultStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-dropdown/sprk-dropdown.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-dropdown\n      dropdownType=\"base\"\n      title=\"My Choices\"\n      triggerIconType=\"settings\"\n      additionalTriggerClasses=\"sprk-b-Link--plain\"\n      [choices]=\"[{\n          text: 'Option 1',\n          value: 'Option 1'\n        },\n        {\n          text: 'Option 2',\n          value: 'Option 2'\n        }\n      ]\"\n    >\n    </sprk-dropdown>\n  `\n})"
            },
            {
                "name": "defaultStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-highlight-board/sprk-highlight-board.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-highlight-board\n      heading=\"Hello, Welcome To Spark Design System\"\n      ctaText=\"Designers\"\n      ctaHref=\"https://sparkdesignsystem.com/\"\n      ctaText2=\"Developers\"\n      ctaHref2=\"https://sparkdesignsystem.com/\"\n      imgSrc=\"https://spark-assets.netlify.com/desktop.jpg\"\n      imgAlt=\"placeholder\"\n      idString=\"highlightboard-1\"\n    >\n    </sprk-highlight-board>\n  `,\n})"
            },
            {
                "name": "defaultStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-link/sprk-link.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-link\n      href=\"#\"\n      idString=\"link-1\"\n      analyticsString=\"object.action.event\"\n    >\n      Base Link\n    </sprk-link>\n  `,\n})"
            },
            {
                "name": "defaultStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-tabbed-navigation/sprk-tabbed-navigation.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-tabbed-navigation idString=\"tabs-1\">\n      <button\n        sprkTabbedNavigationTab\n        analyticsString=\"Tab: 1\"\n        data-id=\"tab-1\"\n      >\n        Tab 1\n      </button>\n      <button\n        sprkTabbedNavigationTab\n        data-id=\"tab-2\"\n        [defaultActive]=true\n      >\n        Tab 2\n      </button>\n      <button\n        sprkTabbedNavigationTab\n        data-id=\"tab-3\"\n      >\n        Tab 3\n      </button>\n      <div sprkTabbedNavigationPanel>\n        <p>Tab 1 Content Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed quis rhoncus ipsum. Nulla\n        euismod nisi est, vel consequat ante consectetur in. Ut interdum dictum est at ornare. Nam nec dapibus nibh.\n        Integer venenatis ex eu mi euismod, non ultricies lacus venenatis.</p>\n      </div>\n      <div [defaultActive]=true sprkTabbedNavigationPanel>\n        <p>Tab 2 Content Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed quis rhoncus ipsum. Nulla\n        euismod nisi est, vel consequat ante consectetur in. Ut interdum dictum est at ornare. Nam nec dapibus nibh.\n        Integer venenatis ex eu mi euismod, non ultricies lacus venenatis.</p>\n      </div>\n      <div sprkTabbedNavigationPanel>\n        <p>Tab 3 Content Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed quis rhoncus ipsum. Nulla\n        euismod nisi est, vel consequat ante consectetur in. Ut interdum dictum est at ornare. Nam nec dapibus nibh.\n        Integer venenatis ex eu mi euismod, non ultricies lacus venenatis.</p>\n      </div>\n    </sprk-tabbed-navigation>\n  `,\n})"
            },
            {
                "name": "defaultStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-promo/sprk-promo.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-promo\n      title=\"Title\"\n      subtitle=\"Subtitle\"\n      cta=\"button\"\n      ctaLinkHref=\"foo\"\n      ctaText=\"Learn More\"\n      hasBorder=\"true\"\n      idString=\"promo-1\"\n    >\n      Lorem ipsum dolor. Sit amet pede. Tempus donec et. Suspendisse id\n      inventore integer eum non enim diam habitant. Maecenas nunc per lacus\n      neque egestas. Diam quod curabitur.\n    </sprk-promo>\n  `,\n})"
            },
            {
                "name": "defaultStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-pagination/sprk-pagination.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-pagination\n      [totalItems]=\"3\"\n      [itemsPerPage]=\"1\"\n      idString=\"pagination-1\"\n    >\n    </sprk-pagination>\n  `,\n})"
            },
            {
                "name": "defaultStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-award/sprk-award.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-award\n      splitAt=\"tiny\"\n      title=\"Spark Award Component\"\n      imgOneSrc=\"https://spark-assets.netlify.com/spark-placeholder.jpg\"\n      imgTwoSrc=\"https://spark-assets.netlify.com/spark-placeholder.jpg\"\n      imgOneAlt=\"placeholder!\"\n      imgOneHref=\"#nogo\"\n      imgTwoHref=\"#nogo\"\n      imgTwoAlt=\"placeholder!\"\n      disclaimerCopy=\"This is some copy for the disclaimer about disclaimer things.\"\n      disclaimerTitle=\"My disclaimer title\"\n      analyticsStringImgOne=\"Foo\"\n      analyticsStringImgTwo=\"Test\"\n      idString=\"award-1\"\n    >\n    </sprk-award>\n  `,\n})"
            },
            {
                "name": "desktopComputer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"desktop-computer\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-link/sprk-link.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-link\n      isDisabled=\"true\"\n      idString=\"link-4\"\n      analyticsString=\"object.action.event\"\n    >\n      Disabled Link\n    </sprk-link>\n  `,\n})"
            },
            {
                "name": "disabledPrimary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/directives/inputs/sprk-button/sprk-button.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <button\n      disabled\n      data-id=\"button-disabled-primary\"\n      sprkButton\n    >\n      Button\n    </button>\n  `,\n})"
            },
            {
                "name": "disabledSecondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/directives/inputs/sprk-button/sprk-button.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <button\n      disabled\n      class=\"sprk-c-Button--secondary\"\n      data-id=\"button-disabled-secondary\"\n      sprkButton\n    >\n      Button\n    </button>\n  `,\n})"
            },
            {
                "name": "disabledTertiary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/directives/inputs/sprk-button/sprk-button.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <button\n      disabled\n      class=\"sprk-c-Button--tertiary\"\n      data-id=\"button-disabled-tertiary\"\n      sprkButton\n    >\n      Button\n    </button>\n  `,\n})"
            },
            {
                "name": "documentReview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"document-review\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "documentReviewFilled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"document-review-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "documentReviewFilledSmall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"document-review-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "documents",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"documents\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "dollar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"dollar\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "download",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"download\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "downloadFilled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"download-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "downloadFilledSmall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"download-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "editable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"editable\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "educationalResources",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"educational-resources\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "email",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"email\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "emailFilled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"email-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "emailFilledSmall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"email-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/environment/environment.ts",
                "type": "object",
                "defaultValue": "{\n  version: '9.3.0'\n}"
            },
            {
                "name": "exclamation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"exclamation\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "exclamationCredit",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"exclamation-credit\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "exclamationFilled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"exclamation-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "exclamationFilledSmall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"exclamation-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "extended",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-masthead/sprk-masthead.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-masthead\n      [bigNavLinks]=\"links\"\n      [narrowNavLinks]=\"extendedNarrowLinks\"\n      [narrowSelector]=\"mySelector\"\n      idString=\"masthead-extended-1\"\n    >\n      <svg\n        logo-slot\n        class=\"sprk-c-Masthead__logo\"\n        height=\"49\"\n        viewBox=\"0 0 175 49\"\n        width=\"175\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <g fill=\"none\">\n          <path\n            d=\"m42.5897384 43.9901408 9.3126761-16.244668c1.3653924-2.3981891 1.3653924-5.3565392-.0175051-7.7372233l-2.6082494-4.4987927-6.4943662 11.1682092c.3325955 3.6585513-1.680483 7.1245473-5.0239437 8.6474849l-7.2995976 12.5686117 5.4440644-.0175051c2.7482897-.017505 5.3040242-1.4879275 6.6869215-3.8861167z\"\n            fill=\"#ff451a\"\n          ></path>\n          <g\n            fill=\"#000\"\n            transform=\"translate(57.42 2.32)\"\n          >\n            <path\n              d=\"m17.7816098 26.5107847h-14.89678086c-.43762566 0-.85774634-.1750503-1.17283714-.4901408-.31509022-.3150906-.4901406-.7352113-.4901406-1.172837 0-.4376258.17505038-.8577466.4901406-1.1728371.3150908-.3150905.73521148-.4901408 1.17283714-.4901408h14.91428586c2.2056339 0 4.043662-1.732998 4.0961769-3.9211268.017505-1.0853119-.3851107-2.1356137-1.1378271-2.905835-.7527159-.7702213-1.8030182-1.2078471-2.8883299-1.2078471h-10.18792732c-4.04366198 0-7.38712285-3.2209255-7.43963796-7.26458753-.01750504-1.96056333.75271646-3.85110662 2.13561394-5.234004 1.3828969-1.40040241 3.25593556-2.17062374 5.21649854-2.17062374h14.8617709c.9102613 0 1.6629778.73521127 1.6629778 1.66297786 0 .43762576-.1750504.85774648-.4901406 1.17283703-.3150908.31509053-.7352115.49014085-1.1728372.49014085h-14.7917504c-2.20563386 0-4.04366198 1.73299795-4.0961775 3.92112678-.03500996 1.08531183.38511072 2.13561365 1.13782718 2.90583495s1.80301816 1.2078471 2.88832982 1.2078471h10.2929578c1.9605636 0 3.8336017.7877264 5.2164991 2.1706237 1.3828975 1.3828975 2.153119 3.2734407 2.135614 5.2340041-.0525155 4.043662-3.413481 7.2645875-7.457143 7.2645875z\"\n            ></path>\n            <path\n              d=\"m41.693481.37577465h-12.6911471v24.52454725c-.017505.6126761.2975858 1.1903421.8227364 1.4879276.5251511.2975855 1.1728371.3150905 1.6979883 0 .5251505-.3150906.8402413-.8927565.8227364-1.4879276v-21.18108652h9.4352109c2.2931593.01750504 4.1486924 1.83802818 4.2012073 4.13118717.017505 1.12032191-.4201206 2.18812875-1.2078471 2.97585515-.8052314.8227364-1.925553 1.2953722-3.0808851 1.2953722h-4.9189133c-.9102619.0350101-1.6279678.7702213-1.6279678 1.6804829s.7177059 1.6454728 1.6279678 1.6804829h4.9889332c2.0130785 0 3.9386321-.8052314 5.3565395-2.2406439 1.4179075-1.4354125 2.2056339-3.36096577 2.1881289-5.37404421 0-4.13118717-3.4309859-7.49215294-7.6146883-7.49215294z\"\n            ></path>\n            <path\n              d=\"m94.0335214 23.7274849-8.052314-8.2448692h.9977867c2.0130785 0 3.9386316-.8052314 5.356539-2.2406439s2.2056339-3.3784708 2.1881289-5.39154925c-.03501-4.13118717-3.4659959-7.4746479-7.6496983-7.4746479h-12.6911471v24.52454725c-.0175049.6126761.2975859 1.1903421.822737 1.4879276.5251506.3150905 1.1728366.3150905 1.6979877 0 .5251511-.3150906.8402414-.8927565.8227364-1.4879276v-21.18108652h9.4352115c2.2931587.01750504 4.1486918 1.83802818 4.2012068 4.13118717.0175049 1.12032191-.4201207 2.18812875-1.2078471 2.97585515-.8052314.8227364-1.9255531 1.2953722-3.0808852 1.2953722h-4.726358c-.7527164-.0875252-1.4879279.3501006-1.7680082 1.0678069-.2800802.7177062-.0350099 1.5229376.5776661 1.9780683l10.6605636 10.9231389c.665191.560161 1.6454727.5251509 2.2581488-.0875252.665191-.630181.7177059-1.6104628.1575454-2.2756539z\"\n            ></path>\n            <path\n              d=\"m116.019839 23.9200402-9.505231-11.4832998 8.314889-9.2426559c.612676-.68269617.560161-1.75050301-.122535-2.36317907-.682697-.61267605-1.750503-.56016097-2.363179.12253521l-11.745876 13.09376256v-12.0784708c.017505-.61267606-.297585-1.19034206-.8227359-1.48792757-.5251512-.31509054-1.1728372-.31509054-1.6979877 0-.5251512.31509054-.840242.89275654-.822737 1.48792757v22.9315895c-.017505.6126761.2975858 1.1903421.822737 1.4879276.5251505.3150905 1.1728365.3150905 1.6979877 0 .5251509-.3150906.8402409-.8927565.8227359-1.4879276v-5.829175l3.676057-4.0961771 9.190141 11.0981891c.28008.3501007.682696.560161 1.137826.5951711h.157546c.647686 0 1.242857-.3851107 1.505432-.9627767.262576-.595171.175051-1.2778672-.24507-1.7855131z\"\n            ></path>\n            <path\n              d=\"m70.8043462 24.4626962-9.9778676-22.73903423c-.4026157-.9277666-1.3303819-1.52293762-2.3456737-1.52293762-1.0152917 0-1.9430586.59517102-2.3456743 1.52293762l-9.977867 22.73903423c-.3676057.8402414.017505 1.8030181.8577464 2.1706237.8402413.3676056 1.8030181-.017505 2.1706239-.8402415l9.295171-21.18108643 3.2734406 7.45714283h-3.3084505c-.9627768 0-1.7505033.7877264-1.7505033 1.750503 0 .9627767.7877265 1.750503 1.7505033 1.750503h4.8488933l4.4812877 10.2229376c.3851107.8052314 1.3478869 1.1728371 2.1531183.8052314.840242-.3676056 1.2253521-1.3128772.8752519-2.1356136z\"\n            ></path>\n            <path\n              d=\"m3.9701406 31.7272837c3.44849092 0 5.35653954 2.1356137 5.35653954 5.6366197s-1.90804862 5.6541248-5.35653954 5.6541248h-3.71106614v-11.2907445zm-2.64325952 10.3279678h2.59074458c2.76579496 0 4.32374282-1.750503 4.32374282-4.6738431 0-2.92334-1.57545284-4.673843-4.32374282-4.673843h-2.59074458z\"\n            ></path>\n            <path\n              d=\"m17.9566602 43.0180282h-6.8269619v-11.2907445h6.8269619v.9627766h-5.7591552v4.0611671h5.4615694v.9627766h-5.4615694v4.3412475h5.7591552z\"\n            ></path>\n            <path\n              d=\"m20.3898594 40.0946881c.1400398 1.2953722 1.4354124 2.1881288 3.1684101 2.1881288 1.6979883 0 2.9058354-.9452716 2.9058354-2.2056338 0-1.0678068-.7702215-1.750503-2.5207247-2.1881288l-1.295372-.3325955c-2.118109-.525151-3.0108653-1.4179075-3.0108653-2.9408451 0-1.8205231 1.5754529-3.1334004 3.8686116-3.1334004 2.153119 0 3.7635818 1.2778672 3.8686116 2.9933602h-1.0853116c-.1750504-1.2078471-1.2603621-2.0130785-2.8183099-2.0130785-1.6279678 0-2.74829.8927565-2.74829 2.1181086 0 .9802817.7002015 1.5579477 2.4156942 1.9955734l1.1203222.2800805c2.3281687.577666 3.2909455 1.5054327 3.2909455 3.0983904 0 1.9780684-1.6279678 3.2909457-4.0961769 3.2909457-2.3281693 0-4.008652-1.2778672-4.1486924-3.1684105z\"\n            ></path>\n            <path\n              d=\"m29.2649092 43.0180282v-11.2907445h1.0853122v11.2907445z\"\n            ></path>\n            <path\n              d=\"m37.2121933 43.2630986c-3.0633802 0-5.0589537-2.328169-5.0589537-5.8816902 0-3.5535211 1.9955735-5.8816901 5.0414487-5.8816901 2.4156942 0 4.2187118 1.3828974 4.6213275 3.5360161h-1.0853116c-.4726357-1.6104628-1.7505033-2.5382294-3.5360159-2.5382294-2.3806842 0-3.9386321 1.9255533-3.9386321 4.8839034s1.5579479 4.9014085 3.9561371 4.9014085c2.2231389 0 3.6410463-1.4004024 3.6410463-3.5360161v-.3851106h-3.4484909v-.9627767h4.5162976v1.2603621c0 2.7832999-1.8555331 4.603823-4.708853 4.603823z\"\n            ></path>\n            <path\n              d=\"m43.7590744 43.0180282v-11.2907445h1.0503017l6.5818916 9.3826962h.1050299v-9.3826962h1.0503023v11.2907445h-1.0503023l-6.599396-9.3826962h-.1050305v9.3826962z\"\n            ></path>\n            <path\n              d=\"m59.040966 40.0946881c.1400399 1.2953722 1.4354124 2.1881288 3.1684101 2.1881288 1.6979883 0 2.9058354-.9452716 2.9058354-2.2056338 0-1.0678068-.7702215-1.750503-2.5207247-2.1881288l-1.295372-.3325955c-2.1181089-.525151-3.0108652-1.4179075-3.0108652-2.9408451 0-1.8205231 1.5754528-3.1334004 3.8686116-3.1334004 2.1706239 0 3.7635817 1.2778672 3.8686116 2.9933602h-1.0853117c-.1750504-1.2078471-1.260362-2.0130785-2.8358149-2.0130785-1.6279678 0-2.730785.8927565-2.730785 2.1181086 0 .9802817.7002015 1.5579477 2.4156942 1.9955734l1.1203222.2800805c2.3281687.577666 3.2909455 1.5054327 3.2909455 3.0983904 0 1.9780684-1.6279677 3.2909457-4.0961769 3.2909457-2.3281693 0-4.026157-1.2778672-4.1486924-3.1684105z\"\n            ></path>\n            <path\n              d=\"m70.9618916 43.0180282v-4.8839035l-4.0611675-6.406841h1.2253526l3.3084505 5.3215292h.1050299l3.3084511-5.3215292h1.2253521l-4.043662 6.406841v4.8839035z\"\n            ></path>\n            <path\n              d=\"m77.8413685 40.0946881c.1400398 1.2953722 1.4354124 2.1881288 3.1684101 2.1881288 1.6979882 0 2.9058353-.9452716 2.9058353-2.2056338 0-1.0678068-.7702214-1.750503-2.5207246-2.1881288l-1.295372-.3325955c-2.118109-.525151-3.0108653-1.4179075-3.0108653-2.9408451 0-1.8205231 1.5754529-3.1334004 3.8686116-3.1334004 2.1531189 0 3.7635817 1.2778672 3.8686116 2.9933602h-1.0853116c-.1750504-1.2078471-1.2603627-2.0130785-2.8183099-2.0130785-1.6279678 0-2.74829.8927565-2.74829 2.1181086 0 .9802817.7002015 1.5579477 2.4156942 1.9955734l1.1203222.2800805c2.3281687.577666 3.2909455 1.5054327 3.2909455 3.0983904 0 1.9780684-1.6279678 3.2909457-4.0961769 3.2909457-2.3281693 0-4.026157-1.2778672-4.1486925-3.1684105z\"\n            ></path>\n            <path\n              d=\"m89.7447885 43.0180282v-10.3279679h-3.7810861v-.9627766h8.6474845v.9627766h-3.7985911v10.3279679z\"\n            ></path>\n            <path\n              d=\"m102.926077 43.0180282h-6.8269622v-11.2907445h6.8269622v.9627766h-5.7416505v4.0611671h5.4615695v.9627766h-5.4615695v4.3412475h5.7416505z\"\n            ></path>\n            <path\n              d=\"m104.834125 43.0180282v-11.2907445h1.225352l4.166197 9.837827h.10503l4.148693-9.837827h1.242857v11.2907445h-.997787v-9.2076459h-.087526l-3.903621 9.1551308h-.927766l-3.903623-9.1551308h-.070019v9.2076459z\"\n            ></path>\n          </g>\n          <path\n            d=\"m37.7408451 35.3426559c-.0175051.0175051-.0525151.0350101-.0700201.0350101l-16.0696177 7.3521127-3.0283703 5.1989939 11.8684105-.03501z\"\n            fill=\"#ff5c1c\"\n          ></path>\n          <path\n            d=\"m42.9748491 5.95171025-7.544668 12.97122735c3.9561368.560161 7.002012 3.7810865 7.3346077 7.7722334l6.4943662-11.1682093-5.2340041-8.99758543c-.2100603-.38511066-.612676-.59517106-1.0503018-.57766602z\"\n            fill=\"#ff5c1c\"\n          ></path>\n          <path\n            d=\"m21.0585513 42.9748491-5.7066398 2.6082495c-.4551308.2100603-.7352113.7002012-.6651912 1.1903421.0700201.4901408.4376258.9102615.9277666.9977867.5076459.1050301 1.0152918.1575452 1.5229376.1575452h.0175051 1.4179074l3.0283703-5.1989939z\"\n            fill=\"#ff721e\"\n          ></path>\n          <path\n            d=\"m35.4301811 18.9229376 7.544668-12.97122735c-.1400403 0-.2800805.03501008-.4201207.10503017l-3.5885312 1.59295776-11.8859155 5.26901412-6.4243461 11.045674 9.855332-4.3937626c1.5404427-.6826961 3.2559356-.9102615 4.9189135-.6476861z\"\n            fill=\"#ff721e\"\n          ></path>\n          <path\n            d=\"m17.3649899 17.2249497c-1.8905432.8402415-2.7832997 3.0458753-2.0130784 4.9014085.3851106.9277665 1.1378269 1.6629778 2.0830986 2.0480885.9452716.3676056 1.9955734.3501006 2.9058349-.0525151l.3150906-.1400403 6.4243461-11.063179z\"\n            fill=\"#ff8920\"\n          ></path>\n          <path\n            d=\"m37.5657948 25.9774648c-.3851107-.9277666-1.137827-1.6629779-2.0830986-2.0480885-.9452717-.3676056-1.9955735-.3501007-2.905835.052515l-.1225352.0525151-6.4243461 11.0631791 9.5227364-4.2187123c1.8905433-.8402414 2.8008048-3.0283702 2.0130785-4.9014084z\"\n            fill=\"#ff5c1c\"\n          ></path>\n          <path\n            d=\"m17.6275654 29.1983903-7.509658 12.9362174c.0875252-.0175051.1750504-.0350101.2450705-.0700202l3.5885312-1.5929577 12.0959758-5.3565392 6.4243461-11.0631791-10.0653924 4.4812877c-1.5054326.6651911-3.1684104.8927565-4.7788732.6651911z\"\n            fill=\"#ff721e\"\n          ></path>\n          <path\n            d=\"m31.859155 5.12897384 5.7066398-2.60824949c.4726358-.21006037.7352112-.70020121.6826961-1.20784709-.052515-.50764587-.4376257-.91026157-.9452716-.99778671-.5076458-.10503019-1.0152917-.15754528-1.5229376-.15754528h-.017505-1.2778673l-2.9758551 5.11146881z\"\n            fill=\"#ff721e\"\n          ></path>\n          <path\n            d=\"m10.8881288 24.2619718c-.3676057-.8227364-.6126761-1.6979879-.7177062-2.6082495l-6.44185117 11.0806841 5.14647889 8.8575453c.24507042.4201207.73521125.6476861 1.22535208.542656l7.527163-12.9362174c-2.9408451-.3851106-5.4790745-2.2406438-6.7394366-4.9364185z\"\n            fill=\"#ff8920\"\n          ></path>\n          <path\n            d=\"m15.3869216 12.6561368 16.1396377-7.36961768 2.9583501-5.11146881-11.8684104.03501005z\"\n            fill=\"#ff8920\"\n          ></path>\n          <path\n            d=\"m10.6605634 17.5925554c.8052314-2.1706238 2.4682092-3.9211268 4.5863179-4.8663985l.1400403-.0525151 7.2295774-12.4460764h-5.5841046c-2.7657948.01750502-5.3215292 1.48792756-6.7044266 3.88611669l-9.31267605 16.24466801c-1.36539235 2.3981892-1.34788732 5.3565392.03501006 7.7372234l2.67826962 4.6213279 6.44185117-11.0806841c-.17505037-1.3653923 0-2.7482897.4901408-4.0436619z\"\n            fill=\"#ffa022\"\n          ></path>\n        </g>\n      </svg>\n\n      <sprk-link\n        navItem-slot\n        linkType=\"plain\"\n        additionalClasses=\"sprk-c-Masthead__link\"\n        href=\"#nogo\"\n      >\n        Sign In\n      </sprk-link>\n\n      <div\n        little-nav-slot\n        class=\"sprk-o-Stack__item sprk-o-Stack__item--flex@xxs sprk-o-Stack sprk-o-Stack--center-column sprk-o-Stack--center-row\"\n      >\n        <div class=\"sprk-o-Stack__item sprk-u-Position--relative\">\n          <sprk-dropdown\n            dropdownType=\"informational\"\n            additionalTriggerClasses=\"sprk-c-Masthead__selector sprk-b-Link sprk-b-Link--plain sprk-o-Stack sprk-o-Stack--split@xxs sprk-o-Stack--center-column\"\n            triggerText=\"My Selector\"\n            additionalClasses=\"sprk-c-Masthead__selector-dropdown sprk-u-Width-100\"\n            triggerIconType=\"chevron-down\"\n            [choices]=\"siteDropdownChoices\"\n            selector=\"Select One\"\n            additionalIconClasses=\"sprk-c-Icon--l sprk-c-Icon--stroke-current-color sprk-Stack__item\"\n            additionalTriggerTextClasses=\"sprk-o-Stack__item sprk-o-Stack__item--flex@xxs\"\n          >\n            <div\n              class=\"sprk-c-Dropdown__footer sprk-u-TextAlign--center\"\n              sprkDropdownFooter\n            >\n              <a\n                class=\"sprk-c-Button sprk-c-Button--compact sprk-c-Button--tertiary\"\n                href=\"#nogo\"\n              >\n                Placeholder\n              </a>\n            </div>\n          </sprk-dropdown>\n        </div>\n      </div>\n\n      <ul\n        utility-slot\n        class=\"sprk-o-Stack__item sprk-o-HorizontalList sprk-o-HorizontalList--spacing-medium sprk-o-Stack--center-column\"\n      >\n        <li>\n          <a\n            class=\"sprk-b-Link sprk-b-Link--plain sprk-c-Masthead__link\"\n            href=\"#nogo\"\n          >\n            Talk To Us\n          </a>\n        </li>\n        <li>\n          <sprk-dropdown\n            [choices]=\"simpleChoices\"\n            dropdownType=\"simple\"\n            title=\"My Account\"\n            triggerIconType=\"user-account\"\n            additionalTriggerClasses=\"sprk-b-Link--plain sprk-c-Masthead__link\"\n            additionalIconClasses=\"sprk-c-Icon--l\"\n            additionalClasses=\"sprk-u-Right--zero sprk-u-mrm\"\n            screenReaderText=\"User Account\"\n          >\n          </sprk-dropdown>\n        </li>\n      </ul>\n    </sprk-masthead>\n  `,\n  props: {\n    links: [\n      {\n        text: 'Navigation Item',\n        href: '#nogo',\n        active: false\n      },\n      {\n        text: 'Your Item',\n        active: false,\n        subNav: [\n          {\n            text: 'Item 1',\n            href: '#nogo'\n          },\n          {\n            text: 'Item 2',\n            href: '#nogo'\n          },\n          {\n            text: 'Item 3',\n            href: '#nogo'\n          }\n        ]\n      },\n      {\n        text: 'Nav Item',\n        href: '#nogo',\n        active: false,\n        leadingIcon: 'settings'\n      },\n      {\n        text: 'Navigation Item',\n        href: '#nogo',\n        leadingIcon: 'chat-online',\n        subNav: [\n          {\n            text: 'Item 1',\n            href: '#nogo'\n          },\n          {\n            text: 'Item 2',\n            href: '#nogo'\n          },\n          {\n            text: 'Item 3',\n            href: '#nogo'\n          }\n        ]\n      },\n      {\n        text: 'Item',\n        href: '#nogo',\n        active: false,\n        leadingIcon: 'chat-online'\n      }\n    ],\n    extendedNarrowLinks: [\n      {\n        text: 'Item 1',\n        href: '#nogo',\n        subNav: [\n          {\n            text: 'Item 1',\n            href: '#nogo'\n          },\n          {\n            text: 'Item 2',\n            href: '#nogo'\n          },\n          {\n            text: 'Item 3',\n            href: '#nogo'\n          }\n        ]\n      },\n      {\n        text: 'Item 2',\n        href: '#nogo',\n        active: true\n      },\n      {\n        text: 'Item 3',\n        href: '#nogo',\n        subNav: [\n          {\n            text: 'Item 1',\n            href: '#nogo'\n          },\n          {\n            text: 'Item 2',\n            href: '#nogo'\n          },\n          {\n            text: 'Item 3',\n            href: '#nogo'\n          }\n        ]\n      },\n      {\n        text: 'Item 4',\n        href: '#nogo'\n      },\n      {\n        text: 'Item 5',\n        href: '#nogo'\n      },\n      {\n        text: '(586) 123-4567',\n        href: '#nogo',\n        active: false,\n        leadingIcon: 'landline'\n      },\n      {\n        text: 'Talk To Us',\n        href: '#nogo',\n        active: false,\n        leadingIcon: 'call-team-member'\n      },\n      {\n        text: 'Settings',\n        href: '#nogo',\n        active: false,\n        leadingIcon: 'settings'\n      },\n      {\n        text: 'My Account',\n        href: '#nogo',\n        active: false,\n        leadingIcon: 'user',\n        subNav: [\n          {\n            text: 'Change Username',\n            href: '#nogo'\n          },\n          {\n            text: 'Change Password',\n            href: '#nogo'\n          },\n          {\n            text: 'Sign Out',\n            href: '#nogo'\n          }\n        ]\n      }\n    ],\n    mySelector: {\n      trigger: {\n        text: 'Select One'\n      },\n      choices: [\n        {\n          content: {\n            title: 'Choice Title',\n            infoLine1: 'Information about this choice',\n            infoLine2: 'More Information'\n          },\n          value: 'Choice Title 1',\n          active: false\n        },\n        {\n          content: {\n            title: 'Choice Title',\n            infoLine1: 'Information about this choice',\n            infoLine2: 'More Information'\n          },\n          value: 'Choice Title 2',\n          active: true\n        }\n      ],\n      footer: {\n        analyticsString: 'Go Elsewhere Link',\n        text: 'Go Elsewhere',\n        href: '#nogo',\n      }\n    },\n    siteDropdownChoices: [\n      {\n        content: {\n          title: 'Choice Title',\n          infoLine1: 'Information about this choice',\n          infoLine2: 'More Information'\n        },\n        value: 'Choice Title 1',\n        active: false\n      },\n      {\n        content: {\n          title: 'Choice Title',\n          infoLine1: 'Information about this choice',\n          infoLine2: 'More Information'\n        },\n        value: 'Choice Title 2',\n        active: true\n      }\n    ],\n    simpleChoices: [\n      {\n        text: 'Change Username',\n        value: 'change-username'\n      },\n      {\n        text: 'Change Password',\n        value: 'change-password'\n      },\n      {\n        text: 'Sign Out',\n        value: 'sign-out'\n      }\n    ],\n  },\n})"
            },
            {
                "name": "facebook",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"facebook\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "facebookTwoColor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"facebook-two-color\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "fail",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-alert/sprk-alert.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-alert\n      alertType=\"fail\"\n      idString=\"alert-fail-1\"\n      analyticsString=\"object.action.event\"\n    >\n      This is a failure message to alert\n      that something was not successful.\n    </sprk-alert>\n  `\n})"
            },
            {
                "name": "feedback",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"feedback\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "feedbackFilled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"feedback-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "feedbackFilledSmall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"feedback-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "findAgent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"find-agent\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "flag",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-promo/sprk-promo.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-promo\n      isFlag=\"true\"\n      imgSrc=\"https://spark-assets.netlify.com/spark-placeholder.jpg\"\n      imgAlt=\"Spark Design System Logo\"\n      idString=\"promo-2\"\n    >\n      Lorem ipsum dolor. Sit amet pede. Tempus donec et. Suspendisse id\n      inventore integer eum non enim diam habitant. Maecenas nunc per lacus\n      neque egestas. Diam quod curabitur.\n    </sprk-promo>\n  `,\n})"
            },
            {
                "name": "fourUp",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-card/sprk-card.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n   <sprk-stack\n     itemSpacing=\"large\"\n     splitAt=\"large\"\n     additionalClasses=\"sprk-o-Stack--center-row\"\n   >\n     <div\n       class=\"sprk-c-Card__container sprk-o-Stack__item--flex@l\"\n       sprkStackItem\n     >\n       <sprk-card\n         cardType=\"teaser\"\n         media=\"img\"\n         idString=\"card-four-up-1\"\n         imgSrc=\"https://spark-assets.netlify.com/desktop.jpg\"\n         body=\"This Lorem ipsum dolor sit amet, doctus invenire vix te.\n           Facilisi perpetua an pri, errem commune mea at, mei prima\n           tantas signiferumque at. Numquam.\"\n         ctaType=\"button\"\n         ctaText=\"Learn More\"\n         title=\"Title\"\n         sprkStackItem\n       ></sprk-card>\n      </div>\n      <div\n        class=\"sprk-c-Card__container sprk-o-Stack__item--flex@l\"\n        sprkStackItem\n      >\n        <sprk-card\n          cardType=\"teaser\"\n          media=\"img\"\n          idString=\"card-four-up-2\"\n          imgSrc=\"https://spark-assets.netlify.com/desktop.jpg\"\n          body=\"This Lorem ipsum dolor sit amet, doctus invenire vix\n            te. Facilisi perpetua an pri, errem commune mea at, mei\n            prima tantas signiferumque at. Numquam.\"\n          ctaType=\"button\"\n          ctaText=\"Learn More\"\n          title=\"Title\"\n          sprkStackItem\n        ></sprk-card>\n      </div>\n      <div\n        class=\"sprk-c-Card__container sprk-o-Stack__item--flex@l\"\n        sprkStackItem\n      >\n        <sprk-card\n          cardType=\"teaser\"\n          media=\"img\"\n          idString=\"card-four-up-3\"\n          imgSrc=\"https://spark-assets.netlify.com/desktop.jpg\"\n          body=\"This Lorem ipsum dolor sit amet, doctus invenire vix\n            te. Facilisi perpetua an pri, errem commune mea at, mei\n            prima tantas signiferumque at. Numquam.\"\n          ctaType=\"button\"\n          ctaText=\"Learn More\"\n          title=\"Title\"\n          sprkStackItem\n        ></sprk-card>\n      </div>\n      <div\n        class=\"sprk-c-Card__container sprk-o-Stack__item--flex@l\"\n        sprkStackItem\n      >\n        <sprk-card\n          cardType=\"teaser\"\n          media=\"img\"\n          idString=\"card-four-up-4\"\n          imgSrc=\"https://spark-assets.netlify.com/desktop.jpg\"\n          body=\"This Lorem ipsum dolor sit amet, doctus invenire vix\n            te. Facilisi perpetua an pri, errem commune mea at, mei\n            prima tantas signiferumque at. Numquam.\"\n          ctaType=\"button\"\n          ctaText=\"Learn More\"\n          title=\"Title\"\n          sprkStackItem\n         ></sprk-card>\n      </div>\n    </sprk-stack>\n  `,\n})"
            },
            {
                "name": "free",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"free\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "fullWidthAtExtraSmallViewport",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/directives/inputs/sprk-button/sprk-button.stories.ts",
                "type": "",
                "defaultValue": "() => {\n  return {\n    moduleMetadata: modules,\n    template: `\n      <button\n        class=\"sprk-c-Button--full@xs\"\n        data-id=\"button-full-width-at-extra-small\"\n        sprkButton\n      >\n        Button\n      </button>\n    `,\n  };\n}"
            },
            {
                "name": "fullWidthAtSmallViewport",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/directives/inputs/sprk-button/sprk-button.stories.ts",
                "type": "",
                "defaultValue": "() => {\n  return {\n    moduleMetadata: modules,\n    template: `\n      <button\n        class=\"sprk-c-Button--full@s\"\n        data-id=\"button-full-width-at-small\"\n        sprkButton\n      >\n        Button\n      </button>\n    `,\n  };\n}"
            },
            {
                "name": "groupedColumns",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-table/sprk-table.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-table idString=\"table-3\">\n      <thead sprkTableHead>\n        <tr>\n          <th rowspan=\"2\">Column Heading</th>\n          <th colspan=\"3\">Column Heading</th>\n          <th rowspan=\"2\">Column Heading</th>\n        </tr>\n        <tr>\n          <th sprkTableGroupedColumn>SubHeading</th>\n          <th sprkTableGroupedColumn>SubHeading</th>\n          <th sprkTableGroupedColumn>SubHeading</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>Data 1</td>\n          <td>Data 2</td>\n          <td>Data 3</td>\n          <td>Data 4</td>\n          <td>Data 5</td>\n        </tr>\n        <tr>\n          <td>Data 1</td>\n          <td>Data 2</td>\n          <td>Data 3</td>\n          <td>Data 4</td>\n          <td>Data 5</td>\n        </tr>\n        <tr>\n          <td>Data 1</td>\n          <td>Data 2</td>\n          <td>Data 3</td>\n          <td>Data 4</td>\n          <td>Data 5</td>\n        </tr>\n        <tr>\n          <td>Data 1</td>\n          <td>Data 2</td>\n          <td>Data 3</td>\n          <td>Data 4</td>\n          <td>Data 5</td>\n        </tr>\n      </tbody>\n    </sprk-table>\n  `,\n})"
            },
            {
                "name": "heat",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"heat\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "helperText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-input-container>\n      <label sprkLabel>\n        Text Input Label\n      </label>\n      <input\n        sprkInput\n        name=\"text_input\"\n        type=\"text\"\n        [(ngModel)]=\"text_input\"\n        required\n        #textInput=\"ngModel\"\n        data-id=\"text-input-1\"\n      >\n      <p sprkHelperText>\n        Optional helper text, used to clarify the field's intent.\n      </p>\n    </sprk-input-container>\n  `,\n})"
            },
            {
                "name": "highlightedHeader",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-card/sprk-card.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-card\n      cardType=\"base\"\n      idString=\"card-highlighted-header\"\n      additionalClasses=\"sprk-c-Card--standout\"\n    >\n      <div class=\"\n        sprk-o-Stack__item\n        sprk-c-Card__header\n        sprk-o-Stack\n        sprk-o-Stack--medium\">\n        <h3 class=\"\n          sprk-b-TypeDisplaySeven\n          sprk-o-Stack__item\n          sprk-u-Color--white\">\n          Description\n        </h3>\n\n        <h4 class=\"\n          sprk-b-TypeDisplayFive\n          sprk-o-Stack__item\n          sprk-u-Color--white\">\n          Card Title\n        </h4>\n      </div>\n\n      <div class=\"\n        sprk-o-Stack__item\n        sprk-o-Stack\n        sprk-o-Stack--medium\n        sprk-c-Card__content\">\n        <p class=\"sprk-b-TypeBodyTwo sprk-o-Stack__item\">\n          Lorem ipsum dolor sit amet, doctus invenire vix te. Facilisi\n          perpetua an pri, errem commune mea at, mei prima tantas\n          signiferumque at. Numquam.\n        </p>\n      </div>\n  </sprk-card>`\n})"
            },
            {
                "name": "home",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"home\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "homeImprovement",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"home-improvement\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "homeShopping",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"home-shopping\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "homeSize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"home-size\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "hugeSelectBox",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-huge-input-container>\n      <select\n        id=\"select-huge-1\"\n        aria-describedby=\"select-normal--error-container\"\n        data-id=\"select-huge-1\"\n        data-sprk-input=\"huge\"\n        sprkInput\n      >\n        <option\n          value=\"\"\n          disabled\n          selected\n          hidden\n        ></option>\n        <option value=\"1\">Option 1</option>\n        <option value=\"2\">Option 2</option>\n        <option value=\"3\">Option 3</option>\n        <optgroup label=\"Grouped Options\">\n          <option value=\"g1\">Grouped Option 1</option>\n          <option value=\"g2\">Grouped Option 2</option>\n          <option value=\"g3\">Grouped Option 3</option>\n        </optgroup>\n      </select>\n      <label sprkLabel for=\"select-huge-1\">Huge Select Box Label</label>\n      <sprk-icon\n        iconType=\"chevron-down\"\n        additionalClasses=\"sprk-c-Icon--stroke-current-color sprk-b-SelectContainer__icon\"\n        sprk-select-icon\n      ></sprk-icon>\n    </sprk-huge-input-container>\n  `,\n})"
            },
            {
                "name": "hugeTextInput",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-huge-input-container>\n      <input\n        placeholder=\"Placeholder\"\n        name=\"text_input_huge\"\n        type=\"text\"\n        [(ngModel)]=\"text_input_huge\"\n        required\n        #textInput=\"ngModel\"\n        sprkInput\n      />\n      <label sprkLabel>Huge Text Input</label>\n      <span [hidden]=\"textInput.valid || textInput.pristine\" sprkFieldError>\n        <sprk-icon\n          iconType=\"exclamation-filled-small\"\n          additionalClasses=\"sprk-b-ErrorIcon\"\n        ></sprk-icon>\n        <div class=\"sprk-b-ErrorText\">This field is required.</div>\n      </span>\n    </sprk-huge-input-container>\n  `,\n})"
            },
            {
                "name": "iconWithTextLink",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-link/sprk-link.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-link\n      linkType=\"icon\"\n      href=\"#\"\n      idString=\"link-3\"\n      analyticsString=\"object.action.event\"\n    >\n      <sprk-icon\n        iconType=\"communication\"\n        additionalClasses=\"sprk-c-Icon--l sprk-c-Icon--stroke-current-color sprk-u-mrs\"\n      >\n      </sprk-icon>\n      Message Us\n    </sprk-link>\n  `,\n})"
            },
            {
                "name": "indented",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-ordered-list/sprk-list.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-unordered-list\n      listType=\"indented\"\n      idString=\"unordered-list-2\"\n    >\n      <sprk-list-item idString=\"list-item-7\">\n        Indented Item\n      </sprk-list-item>\n      <sprk-list-item idString=\"list-item-8\">\n        Indented Item\n      </sprk-list-item>\n      <sprk-list-item idString=\"list-item-9\">\n        Indented Item\n      </sprk-list-item>\n    </sprk-unordered-list>\n  `,\n})"
            },
            {
                "name": "info",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-alert/sprk-alert.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-alert\n      alertType=\"info\"\n      idString=\"alert-info-1\"\n      analyticsString=\"test\"\n    >\n      This is important information.\n    </sprk-alert>\n  `,\n})"
            },
            {
                "name": "info",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-modal/sprk-modal.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-modal\n      [(isVisible)]=\"infoVisible\"\n      title=\"For Your Information\"\n      (hide)=\"toggleInfoModal($event)\"\n      modalType=\"info\"\n      idString=\"modal-info-1\"\n    >\n      This is some content that is in a modal.\n      It explains what the modal is for.\n      There will also be a way to close the modal.\n    </sprk-modal>\n  `,\n  props: {\n    infoVisible: true,\n    toggleInfoModal: action('Cancel Click'),\n  },\n})"
            },
            {
                "name": "information",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"information\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "informational",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-dropdown/sprk-dropdown.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-dropdown\n      dropdownType=\"informational\"\n      additionalTriggerClasses=\"sprk-b-Link--plain\"\n      triggerText=\"Make a Selection...\"\n      title=\"My Choices\"\n      triggerIconType=\"chevron-down\"\n      [choices]=\"[{\n        content: {\n          title: 'Choice Title',\n          infoLine1: 'Information about this choice',\n          infoLine2: 'More Information'\n        },\n        value: 'Choice Title 1',\n        active: false\n      },\n      {\n        content: {\n          title: 'Choice Title',\n          infoLine1: 'Information about this choice',\n          infoLine2: 'More Information'\n        },\n        value: 'Choice Title 2',\n        active: true\n      }\n    ]\"\n    >\n      <div\n        class=\"sprk-c-Dropdown__footer sprk-u-TextAlign--center\"\n        sprkDropdownFooter\n      >\n        <a class=\"sprk-c-Button sprk-c-Button--tertiary\" href=\"#nogo\">\n          Go Elsewhere\n        </a>\n      </div>\n    </sprk-dropdown>\n  `\n})"
            },
            {
                "name": "informationFilled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"information-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "informationFilledSmall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"information-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "inlineSearchInput",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon-input-container>\n      <label\n        class=\"sprk-b-Label--with-icon sprk-u-ScreenReaderText\"\n        sprkLabel\n      >\n        Search\n      </label>\n      <sprk-icon\n        iconType=\"search\"\n        additionalClasses=\"sprk-b-InlineSearch__icon sprk-c-Icon--stroke-current-color\"\n        sprk-input-icon\n      ></sprk-icon>\n      <input\n        name=\"inline_search_input\"\n        class=\"sprk-b-TextInput--has-svg-icon\"\n        type=\"text\"\n        placeholder=\"Search\"\n        [(ngModel)]=\"inline_search_input\"\n        #inlineSearchInput=\"ngModel\"\n        data-id=\"input-search-1\"\n        sprkInput\n      >\n    </sprk-icon-input-container>\n  `,\n})"
            },
            {
                "name": "instagram",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"instagram\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "instagramTwoColor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"instagram-two-color\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "land",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"land\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "landline",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"landline\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "landlineFilled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"landline-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "landlineFilledSmall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"landline-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "laptop",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"laptop\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "largePurchase",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"large-purchase\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "linkedin",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"linkedin\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "linkedinTwoColor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"linkedin-two-color\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "lock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"lock\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "long",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-pagination/sprk-pagination.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-pagination\n      [currentPage]=\"11\"\n      [totalItems]=\"22\"\n      [itemsPerPage]=\"1\"\n      idString=\"pagination-2\"\n    >\n    </sprk-pagination>\n  `,\n})"
            },
            {
                "name": "medicalExpenses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"medical-expenses\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "menu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"menu\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "mls",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"mls\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "mobile",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"mobile\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "modules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "object",
                "defaultValue": "{\n  imports: [\n    SprkIconModule,\n  ],\n}"
            },
            {
                "name": "modules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-alert/sprk-alert.stories.ts",
                "type": "object",
                "defaultValue": "{\n  imports: [SprkAlertModule],\n}"
            },
            {
                "name": "modules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-link/sprk-link.stories.ts",
                "type": "object",
                "defaultValue": "{\n  imports: [\n    SprkLinkModule,\n    SprkIconModule,\n    RouterModule.forRoot([{\n      path: 'iframe.html',\n      component: SprkLinkComponent,\n    }]),\n  ],\n  providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\n}"
            },
            {
                "name": "modules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                "type": "object",
                "defaultValue": "{\n  imports: [\n    SparkInputContainerModule,\n    SprkLabelModule,\n    SprkInputModule,\n    SprkHugeInputContainerModule,\n    SprkIconModule,\n    SprkSelectionContainerModule,\n    SprkSelectionItemContainerModule,\n    SprkSelectionLabelModule,\n    SprkTextareaContainerModule,\n    SprkFieldErrorModule,\n    SprkFormatterSsnModule,\n    SprkFormatterMonetaryModule,\n    SprkFormatterPhoneNumberModule,\n    SprkFormatterDateModule,\n    SprkIconInputContainerModule,\n    SprkHelperTextModule,\n    SprkDatepickerModule,\n  ],\n}"
            },
            {
                "name": "modules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/directives/inputs/sprk-button/sprk-button.stories.ts",
                "type": "object",
                "defaultValue": "{\n  imports: [\n    SprkButtonModule,\n  ],\n}"
            },
            {
                "name": "modules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-card/sprk-card.stories.ts",
                "type": "object",
                "defaultValue": "{\n  imports: [\n    SprkCardModule,\n    SprkStackModule,\n    SprkStackItemModule,\n    RouterModule.forRoot([{\n      path: 'iframe.html',\n      component: SprkCardComponent,\n    }]),\n  ],\n  providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\n}"
            },
            {
                "name": "modules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-masthead/sprk-masthead.stories.ts",
                "type": "object",
                "defaultValue": "{\n  imports: [\n    SprkMastheadModule,\n    SprkLinkModule,\n    SprkDropdownModule,\n    RouterModule.forRoot([{\n      path: 'iframe.html',\n      component: SprkMastheadComponent,\n    }]),\n    BrowserAnimationsModule,\n  ],\n  providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\n}"
            },
            {
                "name": "modules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-dictionary/sprk-dictionary.stories.ts",
                "type": "object",
                "defaultValue": "{\n  imports: [SprkDictionaryModule],\n}"
            },
            {
                "name": "modules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-award/sprk-award.stories.ts",
                "type": "object",
                "defaultValue": "{\n  imports: [\n    SprkAwardModule,\n    RouterModule.forRoot([{\n      path: 'iframe.html',\n      component: SprkAwardComponent,\n    }]),\n    BrowserAnimationsModule,\n  ],\n  providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\n}"
            },
            {
                "name": "modules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-accordion/sprk-accordion.stories.ts",
                "type": "object",
                "defaultValue": "{\n  imports: [\n    SprkAccordionModule,\n    SprkAccordionItemModule,\n    RouterModule.forRoot([{ path: 'iframe.html', component: SprkAccordionComponent }]),\n    BrowserAnimationsModule,\n  ],\n  providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\n}"
            },
            {
                "name": "modules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-ordered-list/sprk-list.stories.ts",
                "type": "object",
                "defaultValue": "{\n  imports: [\n    SprkOrderedListModule,\n    SprkUnorderedListModule,\n    SprkListItemModule,\n  ],\n}"
            },
            {
                "name": "modules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-table/sprk-table.stories.ts",
                "type": "object",
                "defaultValue": "{\n  imports: [\n    SprkTableModule,\n  ],\n}"
            },
            {
                "name": "modules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-promo/sprk-promo.stories.ts",
                "type": "object",
                "defaultValue": "{\n  imports: [\n    SprkPromoModule,\n    RouterModule.forRoot([{\n      path: 'iframe.html',\n      component: SprkPromoComponent,\n    }]),\n  ],\n  providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\n}"
            },
            {
                "name": "modules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-pagination/sprk-pagination.stories.ts",
                "type": "object",
                "defaultValue": "{\n  imports: [\n    SprkPaginationModule,\n    RouterModule.forRoot([{\n      path: 'iframe.html',\n      component: SprkPaginationComponent,\n    }]),\n  ],\n  providers: [{ provide: APP_BASE_HREF, useValue: '/' }],\n}"
            },
            {
                "name": "modules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-footer/sprk-footer.stories.ts",
                "type": "object",
                "defaultValue": "{\n  imports: [\n    SprkFooterModule,\n    RouterModule.forRoot([{\n      path: 'iframe.html',\n      component: SprkFooterComponent,\n    }]),\n    BrowserAnimationsModule,\n  ],\n  providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\n}"
            },
            {
                "name": "modules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-toggle/sprk-toggle.stories.ts",
                "type": "object",
                "defaultValue": "{\n  imports: [\n    SprkToggleModule,\n    RouterModule.forRoot([{ path: 'iframe.html', component: SprkToggleComponent }]),\n    BrowserAnimationsModule,\n  ],\n  providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\n}"
            },
            {
                "name": "modules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-highlight-board/sprk-highlight-board.stories.ts",
                "type": "object",
                "defaultValue": "{\n  imports: [\n    SprkHighlightBoardModule,\n    RouterModule.forRoot([{\n      path: 'iframe.html',\n      component: SprkHighlightBoardComponent,\n    }]),\n  ],\n  providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\n}"
            },
            {
                "name": "modules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-divider/sprk-divider.stories.ts",
                "type": "object",
                "defaultValue": "{\n  imports: [\n    SprkDividerModule,\n  ],\n}"
            },
            {
                "name": "modules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-tabbed-navigation/sprk-tabbed-navigation.stories.ts",
                "type": "object",
                "defaultValue": "{\n  imports: [\n    SprkTabbedNavigationModule,\n    SprkTabbedNavigationPanelModule,\n    SprkTabbedNavigationTabModule,\n  ],\n}"
            },
            {
                "name": "modules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-modal/sprk-modal.stories.ts",
                "type": "object",
                "defaultValue": "{\n  imports: [\n    SprkModalModule,\n  ],\n}"
            },
            {
                "name": "modules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-dropdown/sprk-dropdown.stories.ts",
                "type": "object",
                "defaultValue": "{\n  imports: [\n    SprkDropdownModule,\n    RouterModule.forRoot([{ path: 'iframe.html', component: SprkDropdownComponent }]),\n  ],\n  providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\n}"
            },
            {
                "name": "monetaryInput",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon-input-container\n      iconContainerClasses=\"sprk-b-TextInputIconContainer--has-text-icon\"\n    >\n      <label class=\"sprk-b-Label--monetary\" sprkLabel>\n        Payment\n      </label>\n      <input\n        class=\"sprk-b-TextInput--has-text-icon\"\n        name=\"monetary_input\"\n        type=\"text\"\n        pattern=\"(^\\\\$?(\\\\d+|\\\\d{1,3}(,\\\\d{3})*)(\\\\.\\\\d+)?$)|^$\"\n        [(ngModel)]=\"monetary_input\"\n        #monetaryInput=\"ngModel\"\n        sprkFormatterMonetary\n        sprkInput\n      />\n      <div\n        [hidden]=\"monetaryInput.valid || monetaryInput.pristine\"\n        sprkFieldError\n      >\n        <sprk-icon\n          iconType=\"exclamation-filled-small\"\n          additionalClasses=\"sprk-b-ErrorIcon\"\n        ></sprk-icon>\n        <div class=\"sprk-b-ErrorText\">Invalid amount.</div>\n      </div>\n    </sprk-icon-input-container>\n  `,\n})"
            },
            {
                "name": "mortgage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"mortgage\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "multiFamily",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"multi-family\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "multiplePages",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"multiple-pages\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "noImage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-highlight-board/sprk-highlight-board.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-highlight-board\n      heading=\"Highlight Board Heading Example\"\n      ctaText=\"Learn More\"\n      ctaText2=\"Learn More\"\n      type=\"noImage\"\n      idString=\"highlightboard-3\"\n    >\n    </sprk-highlight-board>\n  `,\n})"
            },
            {
                "name": "oneTimeUpdate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"one-time-update\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "ordered",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-ordered-list/sprk-list.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-ordered-list idString=\"ordered-list-1\">\n      <sprk-list-item idString=\"list-item-4\">\n        Ordered List Item\n      </sprk-list-item>\n      <sprk-list-item idString=\"list-item-5\">\n        Ordered List Item\n      </sprk-list-item>\n      <sprk-list-item idString=\"list-item-6\">\n        Ordered List Item\n      </sprk-list-item>\n    </sprk-ordered-list>\n  `,\n})"
            },
            {
                "name": "organize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"organize\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "organizeFilled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"organize-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "organizeFilledSmall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"organize-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "ourFamily",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"our-family\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "pager",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-pagination/sprk-pagination.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-pagination\n      paginationType=\"pager\"\n      [totalItems]=\"40\"\n      [itemsPerPage]=\"10\"\n      idString=\"pagination-3\"\n    >\n    </sprk-pagination>\n  `,\n})"
            },
            {
                "name": "parking",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"parking\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "passwordInput",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-input-container>\n      <label sprkLabel>Password</label>\n      <input [type]=\"passwordType\" name=\"password_input\" sprkInput />\n      <sprk-selection-item-container\n        additionalClasses=\"sprk-b-InputContainer__visibility-toggle\"\n      >\n        <input\n          type=\"checkbox\"\n          sprkSelectionInput\n          (click)=\"togglePasswordType()\"\n          id=\"show-password\"\n        />\n        <label for=\"show-password\" sprkSelectionLabel>Show Password</label>\n      </sprk-selection-item-container>\n    </sprk-input-container>\n  `,\n  props: {\n    passwordType: 'password',\n    togglePasswordType(): void {\n      this.passwordType === 'password'\n        ? (this.passwordType = 'text')\n        : (this.passwordType = 'password');\n    }\n  },\n})"
            },
            {
                "name": "payment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"payment\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "paymentCenter",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"payment-center\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "percent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"percent\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "percentageInput",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon-input-container iconContainerClasses=\"sprk-b-InputContainer__icon-container--narrow\">\n      <label sprkLabel>Percentage</label>\n      <sprk-icon\n        iconType=\"percent\"\n        additionalClasses=\"sprk-b-InputContainer__icon sprk-b-InputContainer__icon--right\"\n        sprk-input-icon\n      ></sprk-icon>\n      <input\n        class=\"sprk-b-InputContainer__input--has-icon-right\"\n        name=\"percentage\"\n        type=\"tel\"\n        sprkInput\n      />\n    </sprk-icon-input-container>\n  `,\n})"
            },
            {
                "name": "phoneInput",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-input-container>\n      <label sprkLabel>Phone Number</label>\n      <input\n        name=\"phone_input\"\n        type=\"text\"\n        pattern=\"(^(\\\\+\\\\d{1,2}\\\\s)?((\\\\(\\\\d{3}\\\\))|\\\\d{3})[\\\\s.-]?\\\\d{3}[\\\\s.-]?\\\\d{4}$)|^$\"\n        placeholder=\"(000) 000-0000\"\n        [(ngModel)]=\"phone_input\"\n        required\n        #phoneInput=\"ngModel\"\n        sprkFormatterPhoneNumber\n        sprkInput\n      />\n      <span\n        [hidden]=\"phoneInput.valid || phoneInput.pristine\"\n        sprkFieldError\n      >\n        <sprk-icon\n          iconType=\"exclamation-filled-small\"\n          additionalClasses=\"sprk-b-ErrorIcon\"\n        ></sprk-icon>\n        <div class=\"sprk-b-ErrorText\">\n          {{\n            phoneInput.invalid && phoneInput.value === ''\n              ? 'This field is required.'\n              : 'This field is invalid.'\n          }}\n        </div>\n      </span>\n    </sprk-input-container>\n  `,\n})"
            },
            {
                "name": "pinterest",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"pinterest\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "pinterestTwoColor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"pinterest-two-color\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "play",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"play\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "plus",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"plus\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "plusFilled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"plus-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "plusFilledSmall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"plus-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "prequalified",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"prequalified\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "prequalifiedFilled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"prequalified-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "prequalifiedFilledSmall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"prequalified-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "pricePerSqFt",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"price-per-sq-ft\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/directives/inputs/sprk-button/sprk-button.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <button\n      data-id=\"button-primary\"\n      sprkButton\n    >\n      Buttons\n    </button>\n  `,\n})"
            },
            {
                "name": "print",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"print\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "question",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"question\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "questionFilled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"question-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "questionFilledSmall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"question-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "radioButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-selection-container>\n      <label sprkLabel>Radio Group Label</label>\n      <sprk-selection-item-container>\n        <input\n          type=\"radio\"\n          value=\"1\"\n          name=\"radio_input\"\n          [(ngModel)]=\"radio_input\"\n          sprkSelectionInput\n          #radioInput=\"ngModel\"\n          data-id=\"radio-1\"\n          id=\"radio-1\"\n          (change)=\"onRadioSelect($event)\"\n        >\n        <label\n          for=\"radio-1\"\n          sprkSelectionLabel\n        >\n          Item 1\n        </label>\n      </sprk-selection-item-container>\n      <sprk-selection-item-container>\n        <input\n          type=\"radio\"\n          value=\"2\"\n          name=\"radio_input\"\n          sprkSelectionInput\n          [(ngModel)]=\"radio_input\"\n          #radioInput=\"ngModel\"\n          data-id=\"radio-2\"\n          id=\"radio-2\"\n          (change)=\"onRadioSelect($event)\"\n        >\n        <label\n          for=\"radio-2\"\n          sprkSelectionLabel\n        >\n          Item 2\n        </label>\n      </sprk-selection-item-container>\n      <sprk-selection-item-container>\n        <input\n          type=\"radio\"\n          value=\"3\"\n          name=\"radio_input\"\n          sprkSelectionInput\n          [(ngModel)]=\"radio_input\"\n          #radioInput=\"ngModel\"\n          data-id=\"radio-3\"\n          id=\"radio-3\"\n          (change)=\"onRadioSelect($event)\"\n        >\n        <label\n          for=\"radio-3\"\n          sprkSelectionLabel\n        >\n          Item 3\n        </label>\n      </sprk-selection-item-container>\n    </sprk-selection-container>\n  `,\n  props: {\n    onRadioSelect($event) {\n      $event.target.checked === true && this.radio_input === '1'\n        ? (this.isRadioChecked = true)\n        : (this.isRadioChecked = false);\n    }\n  }\n})"
            },
            {
                "name": "rates",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"rates\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "rateShield",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"rate-shield\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "rateShieldFilled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"rate-shield-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "rateShieldFilledSmall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"rate-shield-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "recurringUpdate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"recurring-update\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "refinance",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"refinance\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/test.ts",
                "type": "any"
            },
            {
                "name": "reviews",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"reviews\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "rocket",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"rocket\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "rocketDocTwoColor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"rocket-doc-two-color\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "rotatePage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"rotate-page\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "rowComparison",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-table/sprk-table.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-table idString=\"table-4\">\n      <thead sprkTableHead>\n        <tr>\n          <th sprkTableEmptyHeading></th>\n          <th>Column Heading</th>\n          <th>Column Heading</th>\n          <th>Column Heading</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <th sprkTableRowHeading>Row Heading</th>\n          <td>Data 1</td>\n          <td>Data 2</td>\n          <td>Data 3</td>\n        </tr>\n        <tr>\n          <th sprkTableRowHeading>Row Heading</th>\n          <td>Data 1</td>\n          <td>Data 2</td>\n          <td>Data 3</td>\n        </tr>\n        <tr>\n          <th sprkTableRowHeading>Row Heading</th>\n          <td>Data 1</td>\n          <td>Data 2</td>\n          <td>Data 3</td>\n        </tr>\n        <tr>\n          <th sprkTableRowHeading>Row Heading</th>\n          <td>Data 1</td>\n          <td>Data 2</td>\n          <td>Data 3</td>\n        </tr>\n      </tbody>\n    </sprk-table>\n  `,\n})"
            },
            {
                "name": "sameDay",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"same-day\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "savings",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"savings\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "schools",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"schools\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "search",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"search\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "searchInput",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-input-container>\n      <label sprkLabel>Search Input</label>\n      <input\n        name=\"search_input\"\n        type=\"search\"\n        [(ngModel)]=\"search_input\"\n        #searchInput=\"ngModel\"\n        data-id=\"search-1\"\n        sprkInput\n      >\n    </sprk-input-container>\n  `,\n})"
            },
            {
                "name": "secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-table/sprk-table.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-table\n      idString=\"table-2\"\n      additionalTableClasses=\"sprk-b-Table--secondary\"\n    >\n      <thead sprkTableHead>\n        <tr>\n          <th>Column Heading</th>\n          <th>Column Heading</th>\n          <th>Column Heading</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>Data 1</td>\n          <td>Data 2</td>\n          <td>Data 3</td>\n        </tr>\n        <tr>\n          <td>Data 1</td>\n          <td>Data 2</td>\n          <td>Data 3</td>\n        </tr>\n        <tr>\n          <td>Data 1</td>\n          <td>Data 2</td>\n          <td>Data 3</td>\n        </tr>\n        <tr>\n          <td>Data 1</td>\n          <td>Data 2</td>\n          <td>Data 3</td>\n        </tr>\n      </tbody>\n    </sprk-table>\n  `,\n})"
            },
            {
                "name": "secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/directives/inputs/sprk-button/sprk-button.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <button\n      class=\"sprk-c-Button--secondary\"\n      data-id=\"button-secondary\"\n      sprkButton\n    >\n      Button\n    </button>\n  `,\n})"
            },
            {
                "name": "secondaryRowComparison",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-table/sprk-table.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-table idString=\"table-5\">\n      <tbody>\n        <tr>\n          <th sprkTableRowHeading>Row Heading</th>\n          <td>Data</td>\n          <td>Data</td>\n          <td class=\"sprk-o-Stack sprk-o-Stack--end-column\">\n            <div class=\"sprk-o-Stack__item\">\n              <button\n                class=\"sprk-c-Button sprk-c-Button--secondary\"\n                type=\"button\"\n              >\n                Learn More\n              </button>\n            </div>\n          </td>\n        </tr>\n        <tr>\n          <th sprkTableRowHeading>Row Heading</th>\n          <td>Data</td>\n          <td>Data</td>\n          <td class=\"sprk-o-Stack sprk-o-Stack--end-column\">\n            <div class=\"sprk-o-Stack__item\">\n              <button\n                class=\"sprk-c-Button sprk-c-Button--secondary\"\n                type=\"button\"\n              >\n                Learn More\n              </button>\n            </div>\n          </td>\n        </tr>\n        <tr>\n          <th sprkTableRowHeading>Row Heading</th>\n          <td>Data</td>\n          <td>Data</td>\n          <td class=\"sprk-o-Stack sprk-o-Stack--end-column\">\n            <div class=\"sprk-o-Stack__item\">\n              <button\n                class=\"sprk-c-Button sprk-c-Button--secondary\"\n                type=\"button\"\n              >\n                Learn More\n              </button>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </sprk-table>\n  `,\n})"
            },
            {
                "name": "secureProcess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"secure-process\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "selectBox",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-input-container>\n      <select\n        class=\"sprk-b-Select\"\n        id=\"select-normal-1\"\n        aria-describedby=\"select-normal--error-container\"\n        data-id=\"select-1\"\n        sprkInput\n      >\n        <option value=\"none\">Please choose...</option>\n        <option value=\"1\">Option 1</option>\n        <option value=\"2\">Option 2</option>\n        <option value=\"3\">Option 3</option>\n        <optgroup label=\"Grouped Options\">\n          <option value=\"g1\">Grouped Option 1</option>\n          <option value=\"g2\">Grouped Option 2</option>\n          <option value=\"g3\">Grouped Option 3</option>\n        </optgroup>\n      </select>\n      <sprk-icon\n        iconType=\"chevron-down\"\n        additionalClasses=\"sprk-c-Icon--stroke-current-color sprk-b-SelectContainer__icon\"\n        sprk-select-icon\n      ></sprk-icon>\n      <label sprkLabel for=\"select-normal-1\">Select Box Label</label>\n    </sprk-input-container>\n  `,\n})"
            },
            {
                "name": "settings",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"settings\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "settingsFilled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"settings-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "settingsFilledSmall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"settings-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-link/sprk-link.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-link\n      linkType=\"simple\"\n      href=\"#\"\n      idString=\"link-2\"\n      analyticsString=\"object.action.event\"\n    >\n      Simple Link\n    </sprk-link>\n  `,\n})"
            },
            {
                "name": "single",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"single\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "smallBusiness",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"small-business\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "snapchat",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"snapchat\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "snapchatTwoColor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"snapchat-two-color\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "spinner",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/directives/inputs/sprk-button/sprk-button.stories.ts",
                "type": "",
                "defaultValue": "() => {\n  return {\n    moduleMetadata: modules,\n    template: `\n      <button\n        data-id=\"button-spinner\"\n        sprkButton\n        [isSpinning]=\"true\"\n      >\n        Button\n      </button>\n    `,\n  };\n}"
            },
            {
                "name": "SSNInput",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-input-container>\n      <label for=\"ssn-input\" sprkLabel>SSN Input</label>\n      <input\n        [type]=\"ssnType\"\n        [ngClass]=\"{ 'sprk-b-TextInput--error': ssnInput.invalid && ssnInput.dirty }\"\n        pattern=\"(^(?!666|000|9\\\\d{2})\\\\d{3}([-]{0,1})(?!00)\\\\d{2}\\\\1(?!0{4})\\\\2\\\\d{4}$)|^$\"\n        placeholder=\"000-00-0000\"\n        name=\"ssn_input\"\n        [(ngModel)]=\"ssn_input\"\n        #ssnInput=\"ngModel\"\n        data-id=\"ssn-1\"\n        id=\"ssn-input\"\n        sprkFormatterSsn\n        sprkInput\n      >\n      <sprk-selection-item-container\n        additionalClasses=\"sprk-b-InputContainer__visibility-toggle\"\n      >\n        <input\n          type=\"checkbox\"\n          sprkSelectionInput\n          (click)=\"toggleSSNType()\"\n          data-id=\"ssn-reveal-3\"\n          id=\"show-ssn\"\n        >\n        <label for=\"show-ssn\" sprkSelectionLabel>Show SSN</label>\n      </sprk-selection-item-container>\n      <div\n        [hidden]=\"ssnInput.valid || ssnInput.pristine\"\n        sprkFieldError\n      >\n        <sprk-icon\n          iconType=\"exclamation-filled-small\"\n          additionalClasses=\"sprk-b-ErrorIcon\"\n        >\n        </sprk-icon>\n        <div class=\"sprk-b-ErrorText\">Invalid SSN.</div>\n      </div>\n    </sprk-input-container>\n  `,\n  props: {\n    ssnType: 'password',\n    toggleSSNType(): void {\n      this.ssnType === 'password'\n        ? (this.ssnType = 'text')\n        : (this.ssnType = 'password');\n    }\n  }\n})"
            },
            {
                "name": "stacked",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-highlight-board/sprk-highlight-board.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-highlight-board\n      heading=\"Highlight Board Heading Example\"\n      ctaText=\"Learn More\"\n      type=\"stacked\"\n      imgSrc=\"https://spark-assets.netlify.com/desktop.jpg\"\n      imgAlt=\"placeholder\"\n      idString=\"highlightboard-4\"\n    >\n    </sprk-highlight-board>\n  `,\n})"
            },
            {
                "name": "standout",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-card/sprk-card.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-card\n      cardType=\"base\"\n      idString=\"card-standout\"\n      additionalClasses=\"sprk-c-Card--standout\"\n    >\n      <div class=\"\n        sprk-o-Stack__item\n        sprk-c-Card__content\n        sprk-o-Stack\n        sprk-o-Stack--medium\">Standout Card Content</div>\n    </sprk-card>\n  `\n})"
            },
            {
                "name": "striped",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-dictionary/sprk-dictionary.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-dictionary\n     dictionaryType=\"striped\"\n     idString=\"dictionary-striped\"\n     [data]=\"{\n       'Email Address':'sparkdesignsystem@quickenloans.com',\n       'Mailing Address': '123 Main Street, Detroit, MI, 48216',\n       'Home Phone': '(123) 456-7890',\n       'Cell Phone': '(098) 765-4321',\n       'Work Phone': '(555) 555-5555',\n       'Work Extension': '55555'\n     }\"\n     idString=\"dictionary-1\"\n    ></sprk-dictionary>\n  `\n})"
            },
            {
                "name": "success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-alert/sprk-alert.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-alert\n      alertType=\"success\"\n      idString=\"alert-success-1\"\n      analyticsString=\"object.action.event\"\n    >\n      This is a success message.\n    </sprk-alert>\n  `\n})"
            },
            {
                "name": "teaser",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-card/sprk-card.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-card\n      media=\"img\"\n      cardType=\"teaser\"\n      title=\"Teaser Card Title\"\n      body=\"Lorem ipsum dolor sit amet, doctus invenirevix te. Facilisi perpetua.\"\n      imgSrc=\"https://spark-assets.netlify.com/desktop.jpg\"\n      imgAlt=\"Placeholder Image\"\n      imgHref=\"www.sparkdesignsystem.com\"\n      ctaType=\"button\"\n      ctaText=\"Learn More\"\n      ctaHref=\"www.sparkdesignsystem.com\"\n      ctaAnalytics=\"Button: Spark\"\n      idString=\"card-teaser\"\n    >\n    </sprk-card>\n `\n})"
            },
            {
                "name": "technology",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"technology\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "tertiary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/directives/inputs/sprk-button/sprk-button.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <button\n      class=\"sprk-c-Button--tertiary\"\n      data-id=\"button-tertiary\"\n      sprkButton\n    >\n      Button\n    </button>\n  `,\n})"
            },
            {
                "name": "textarea",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-textarea-container>\n      <label for=\"textarea-1\" sprkLabel>Description</label>\n      <textarea\n        name=\"textarea_input\"\n        id=\"textarea-1\"\n        [(ngModel)]=\"textarea_input\"\n        #textareaInput=\"ngModel\"\n        data-id=\"textarea-1\"\n        sprkInput\n      ></textarea>\n    </sprk-textarea-container>\n  `,\n})"
            },
            {
                "name": "textInput",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-input-container>\n      <label sprkLabel>Text Input Label</label>\n      <input\n        name=\"text_input\"\n        type=\"text\"\n        [(ngModel)]=\"text_input\"\n        required\n        #textInput=\"ngModel\"\n        sprkInput\n      />\n      <span [hidden]=\"textInput.valid || textInput.pristine\" sprkFieldError>\n        <sprk-icon\n          iconType=\"exclamation-filled-small\"\n          additionalClasses=\"sprk-b-ErrorIcon\"\n        ></sprk-icon>\n        <div class=\"sprk-b-ErrorText\">This field is required.</div>\n      </span>\n    </sprk-input-container>\n  `,\n})"
            },
            {
                "name": "threeUp",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-card/sprk-card.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n   <sprk-stack\n     itemSpacing=\"large\"\n     splitAt=\"large\"\n     additionalClasses=\"sprk-o-Stack--center-row\"\n   >\n     <div\n       class=\"sprk-c-Card__container sprk-o-Stack__item--flex@l\"\n       sprkStackItem\n     >\n       <sprk-card\n         cardType=\"teaser\"\n         idString=\"card-three-up-1\"\n         media=\"img\"\n         imgSrc=\"https://spark-assets.netlify.com/desktop.jpg\"\n         body=\"This Lorem ipsum dolor sit amet, doctus invenire vix te.\n           Facilisi perpetua an pri, errem commune mea at, mei prima\n           tantas signiferumque at. Numquam.\"\n         ctaType=\"button\"\n         ctaText=\"Learn More\"\n         title=\"Title\"\n         sprkStackItem\n       ></sprk-card>\n      </div>\n      <div\n        class=\"sprk-c-Card__container sprk-o-Stack__item--flex@l\"\n        sprkStackItem\n      >\n        <sprk-card\n          cardType=\"teaser\"\n          media=\"img\"\n          idString=\"card-three-up-2\"\n          imgSrc=\"https://spark-assets.netlify.com/desktop.jpg\"\n          body=\"This Lorem ipsum dolor sit amet, doctus invenire vix\n            te. Facilisi perpetua an pri, errem commune mea at, mei\n            prima tantas signiferumque at. Numquam.\"\n          ctaType=\"button\"\n          ctaText=\"Learn More\"\n          title=\"Title\"\n          sprkStackItem\n        ></sprk-card>\n      </div>\n      <div\n        class=\"sprk-c-Card__container sprk-o-Stack__item--flex@l\"\n        sprkStackItem\n      >\n        <sprk-card\n          cardType=\"teaser\"\n          media=\"img\"\n          idString=\"card-three-up-3\"\n          imgSrc=\"https://spark-assets.netlify.com/desktop.jpg\"\n          body=\"This Lorem ipsum dolor sit amet, doctus invenire vix\n            te. Facilisi perpetua an pri, errem commune mea at, mei\n            prima tantas signiferumque at. Numquam.\"\n          ctaType=\"button\"\n          ctaText=\"Learn More\"\n          title=\"Title\"\n          sprkStackItem\n        ></sprk-card>\n      </div>\n    </sprk-stack>\n  `,\n})"
            },
            {
                "name": "thumbsUp",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"thumbs-up\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "toggleAnimations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-toggle/sprk-toggle-animations.ts",
                "type": "literal type",
                "defaultValue": "{\n  toggleContent: trigger('toggleContent', [\n    state(\n      'closed',\n      style({\n        height: '0',\n        overflow: 'hidden',\n        visibility: 'hidden'\n      })\n    ),\n    state(\n      'open',\n      style({\n        height: '*',\n        visibility: 'visible'\n      })\n    ),\n    transition('open <=> closed', animate('300ms ease-in'))\n  ])\n}"
            },
            {
                "name": "townhouse",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"townhouse\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "trash",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"trash\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "trashFilled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"trash-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "trashFilledSmall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"trash-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "twitter",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"twitter\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "twitterTwoColor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"twitter-two-color\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "twoUp",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-card/sprk-card.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n   <sprk-stack\n     itemSpacing=\"large\"\n     splitAt=\"large\"\n     additionalClasses=\"sprk-o-Stack--center-row\"\n   >\n     <div\n       class=\"sprk-c-Card__container sprk-o-Stack__item--flex@l\"\n       sprkStackItem\n     >\n       <sprk-card\n         cardType=\"teaser\"\n         media=\"img\"\n         idString=\"card-two-up-1\"\n         imgSrc=\"https://spark-assets.netlify.com/desktop.jpg\"\n         body=\"This Lorem ipsum dolor sit amet, doctus invenire vix te.\n           Facilisi perpetua an pri, errem commune mea at, mei prima tantas\n           signiferumque at. Numquam.\"\n         ctaType=\"button\"\n         ctaText=\"Learn More\"\n         title=\"Title\"\n         sprkStackItem\n       ></sprk-card>\n      </div>\n      <div\n        class=\"sprk-c-Card__container sprk-o-Stack__item--flex@l\"\n        sprkStackItem\n      >\n        <sprk-card\n          cardType=\"teaser\"\n          media=\"img\"\n          idString=\"card-two-up-2\"\n          imgSrc=\"https://spark-assets.netlify.com/desktop.jpg\"\n          body=\"This Lorem ipsum dolor sit amet, doctus invenire vix\n            te. Facilisi perpetua an pri, errem commune mea at, mei\n            prima tantas signiferumque at. Numquam.\"\n          ctaType=\"button\"\n          ctaText=\"Learn More\"\n          title=\"Title\"\n          sprkStackItem\n        ></sprk-card>\n      </div>\n    </sprk-stack>\n  `,\n})"
            },
            {
                "name": "unlock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"unlock\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "unordered",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-ordered-list/sprk-list.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-unordered-list idString=\"unordered-list-1\">\n      <sprk-list-item idString=\"list-item-1\">\n        Unordered List Item\n      </sprk-list-item>\n      <sprk-list-item idString=\"list-item-2\">\n        Unordered List Item\n      </sprk-list-item>\n      <sprk-list-item idString=\"list-item-3\">\n        Unordered List Item\n      </sprk-list-item>\n    </sprk-unordered-list>\n  `,\n})"
            },
            {
                "name": "update",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"update\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "upload",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"upload\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "user",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"user\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "userAccount",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"user-account\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "verifiedApproval",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"verified-approval\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "vip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"vip\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "wait",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-modal/sprk-modal.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-modal\n      [(isVisible)]=\"waitVisible\"\n      title=\"Please wait...\"\n      modalType=\"wait\"\n      idString=\"modal-wait-1\"\n    >\n      This type of modal can't be closed by the\n      user.\n    </sprk-modal>\n  `,\n  props: {\n    waitVisible: true,\n  },\n})"
            },
            {
                "name": "wifi",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"wifi\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "withImage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-promo/sprk-promo.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-promo\n      title=\"Title\"\n      subtitle=\"Subtitle\"\n      media=\"img\"\n      imgAlt=\"placeholder\"\n      imgSrc=\"https://spark-assets.netlify.com/blue-house.jpg\"\n      cta=\"button\"\n      ctaText=\"Learn More\"\n      idString=\"promo-3\"\n    >\n      Lorem ipsum dolor. Sit amet pede. Tempus donec et. Suspendisse id\n      inventore integer eum non enim diam habitant. Maecenas nunc per lacus\n      neque egestas. Diam quod curabitur.\n    </sprk-promo>\n  `,\n})"
            },
            {
                "name": "withNoDismissButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-alert/sprk-alert.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-alert\n      alertType=\"success\"\n      [dismissible]=\"false\"\n      idString=\"alert-success-2\"\n      analyticsString=\"object.action.event\"\n    >\n      This success alert has no dismiss button.\n    </sprk-alert>\n  `\n})"
            },
            {
                "name": "withReversedImage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-promo/sprk-promo.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-promo\n      title=\"Title\"\n      subtitle=\"Subtitle\"\n      mediaRev=\"true\"\n      imgAlt=\"placeholder\"\n      imgSrc=\"https://spark-assets.netlify.com/blue-house.jpg\"\n      imgHref=\"https://sparkdesignsystem.com\"\n      cta=\"button\"\n      ctaText=\"Learn More\"\n      idString=\"promo-4\"\n    >\n      Lorem ipsum dolor. Sit amet pede. Tempus donec et. Suspendisse id\n      inventore integer eum non enim diam habitant. Maecenas nunc per lacus\n      neque egestas. Diam quod curabitur.\n    </sprk-promo>\n  `,\n})"
            },
            {
                "name": "writtenCheck",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"written-check\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "yearBuilt",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"year-built\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "youtube",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"youtube\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            },
            {
                "name": "youtubeTwoColor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"youtube-two-color\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts": [
                {
                    "name": "access",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"access\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "amountMoney",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"amount-money\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "application",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"application\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "applyNow",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"apply-now\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "autoLoans",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"auto-loans\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "baths",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"baths\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "beds",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"beds\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "bell",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"bell\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "bellFilled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"bell-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "bellFilledSmall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"bell-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "blog",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon iconType=\"blog\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "calculator",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"calculator\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "calendar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"calendar\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "callTeamMember",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"call-team-member\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "camera",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"camera\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "cashBack",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"cash-back\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "chatOnline",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chat-online\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "chatOnlineFilled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chat-online-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "chatOnlineFilledSmall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chat-online-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "checkMark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"check-mark\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "checkMarkFilled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"check-mark-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "checkMarkFilledSmall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"check-mark-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "chevronDown",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-down\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "chevronDownCircle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-down-circle\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "chevronDownCircleTwoColor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-down-circle-two-color\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "chevronDownFilled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-down-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "chevronDownFilledSmall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-down-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "chevronLeft",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-left\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "chevronLeftCircle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-left-circle\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "chevronLeftCircleTwoColor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-left-circle-two-color\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "chevronLeftFilled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-left-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "chevronLeftFilledSmall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-left-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "chevronRight",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-right\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "chevronRightCircle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-right-circle\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "chevronRightCircleTwoColor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-right-circle-two-color\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "chevronRightFilled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-right-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "chevronRightFilledSmall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-right-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "chevronUp",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-up\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "chevronUpCircle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-up-circle\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "chevronUpCircleTwoColor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-up-circle-two-color\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "chevronUpFilled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-up-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "chevronUpFilledSmall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"chevron-up-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "clock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"clock\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "clockFilled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"clock-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "clockFilledSmall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"clock-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "close",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"close\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "closeCircle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"close-circle\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "closeFilled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"close-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "closeFilledSmall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"close-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "cloud",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"cloud\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "cloudFilled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"cloud-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "cloudFilledSmall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"cloud-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "communication",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"communication\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "communicationFilled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"communication-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "communicationFilledSmall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"communication-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "condo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"condo\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "cooling",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"cooling\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "credit",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"credit\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "creditCardPayoff",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"credit-card-payoff\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "dedicatedTeam",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"dedicated-team\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "desktopComputer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"desktop-computer\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "documentReview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"document-review\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "documentReviewFilled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"document-review-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "documentReviewFilledSmall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"document-review-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "documents",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"documents\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "dollar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"dollar\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "download",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"download\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "downloadFilled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"download-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "downloadFilledSmall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"download-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "editable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"editable\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "educationalResources",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"educational-resources\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "email",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"email\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "emailFilled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"email-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "emailFilledSmall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"email-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "exclamation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"exclamation\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "exclamationCredit",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"exclamation-credit\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "exclamationFilled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"exclamation-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "exclamationFilledSmall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"exclamation-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "facebook",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"facebook\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "facebookTwoColor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"facebook-two-color\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "feedback",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"feedback\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "feedbackFilled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"feedback-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "feedbackFilledSmall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"feedback-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "findAgent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"find-agent\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "free",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"free\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "heat",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"heat\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "home",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"home\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "homeImprovement",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"home-improvement\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "homeShopping",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"home-shopping\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "homeSize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"home-size\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "information",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"information\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "informationFilled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"information-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "informationFilledSmall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"information-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "instagram",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"instagram\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "instagramTwoColor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"instagram-two-color\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "land",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"land\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "landline",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"landline\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "landlineFilled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"landline-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "landlineFilledSmall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"landline-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "laptop",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"laptop\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "largePurchase",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"large-purchase\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "linkedin",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"linkedin\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "linkedinTwoColor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"linkedin-two-color\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "lock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"lock\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "medicalExpenses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"medical-expenses\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "menu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"menu\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "mls",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"mls\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "mobile",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"mobile\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "modules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  imports: [\n    SprkIconModule,\n  ],\n}"
                },
                {
                    "name": "mortgage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"mortgage\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "multiFamily",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"multi-family\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "multiplePages",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"multiple-pages\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "oneTimeUpdate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"one-time-update\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "organize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"organize\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "organizeFilled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"organize-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "organizeFilledSmall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"organize-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "ourFamily",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"our-family\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "parking",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"parking\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "payment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"payment\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "paymentCenter",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"payment-center\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "percent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"percent\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "pinterest",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"pinterest\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "pinterestTwoColor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"pinterest-two-color\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "play",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"play\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "plus",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"plus\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "plusFilled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"plus-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "plusFilledSmall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"plus-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "prequalified",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"prequalified\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "prequalifiedFilled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"prequalified-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "prequalifiedFilledSmall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"prequalified-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "pricePerSqFt",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"price-per-sq-ft\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "print",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"print\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "question",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"question\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "questionFilled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"question-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "questionFilledSmall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"question-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "rates",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"rates\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "rateShield",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"rate-shield\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "rateShieldFilled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"rate-shield-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "rateShieldFilledSmall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"rate-shield-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "recurringUpdate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"recurring-update\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "refinance",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"refinance\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "reviews",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"reviews\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "rocket",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"rocket\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "rocketDocTwoColor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"rocket-doc-two-color\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "rotatePage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"rotate-page\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "sameDay",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"same-day\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "savings",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"savings\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "schools",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"schools\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "search",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"search\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "secureProcess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"secure-process\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "settings",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"settings\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "settingsFilled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"settings-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "settingsFilledSmall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"settings-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "single",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"single\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "smallBusiness",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"small-business\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "snapchat",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"snapchat\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "snapchatTwoColor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"snapchat-two-color\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "technology",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"technology\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "thumbsUp",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"thumbs-up\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "townhouse",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"townhouse\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "trash",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"trash\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "trashFilled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"trash-filled\"\n      additionalClasses=\"sprk-c-Icon--xl sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "trashFilledSmall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"trash-filled-small\"\n      additionalClasses=\"sprk-c-Icon--filled\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "twitter",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"twitter\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "twitterTwoColor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"twitter-two-color\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "unlock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"unlock\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "update",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"update\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "upload",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"upload\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "user",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"user\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "userAccount",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"user-account\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "verifiedApproval",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"verified-approval\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "vip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"vip\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "wifi",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"wifi\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "writtenCheck",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"written-check\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "yearBuilt",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"year-built\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "youtube",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"youtube\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                },
                {
                    "name": "youtubeTwoColor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon\n      iconType=\"youtube-two-color\"\n      additionalClasses=\"sprk-c-Icon--xl\"\n    >\n    </sprk-icon>\n  `,\n})"
                }
            ],
            "projects/spark-angular/src/lib/components/sprk-ordered-list/sprk-list.stories.ts": [
                {
                    "name": "bare",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-ordered-list/sprk-list.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-unordered-list\n      listType=\"bare\"\n      idString=\"unordered-list-2\"\n    >\n      <sprk-list-item idString=\"list-item-10\">\n        Bare List Item\n      </sprk-list-item>\n      <sprk-list-item idString=\"list-item-11\">\n        Bare List Item\n      </sprk-list-item>\n      <sprk-list-item idString=\"list-item-12\">\n        Bare List Item\n      </sprk-list-item>\n    </sprk-unordered-list>\n  `,\n})"
                },
                {
                    "name": "indented",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-ordered-list/sprk-list.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-unordered-list\n      listType=\"indented\"\n      idString=\"unordered-list-2\"\n    >\n      <sprk-list-item idString=\"list-item-7\">\n        Indented Item\n      </sprk-list-item>\n      <sprk-list-item idString=\"list-item-8\">\n        Indented Item\n      </sprk-list-item>\n      <sprk-list-item idString=\"list-item-9\">\n        Indented Item\n      </sprk-list-item>\n    </sprk-unordered-list>\n  `,\n})"
                },
                {
                    "name": "modules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-ordered-list/sprk-list.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  imports: [\n    SprkOrderedListModule,\n    SprkUnorderedListModule,\n    SprkListItemModule,\n  ],\n}"
                },
                {
                    "name": "ordered",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-ordered-list/sprk-list.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-ordered-list idString=\"ordered-list-1\">\n      <sprk-list-item idString=\"list-item-4\">\n        Ordered List Item\n      </sprk-list-item>\n      <sprk-list-item idString=\"list-item-5\">\n        Ordered List Item\n      </sprk-list-item>\n      <sprk-list-item idString=\"list-item-6\">\n        Ordered List Item\n      </sprk-list-item>\n    </sprk-ordered-list>\n  `,\n})"
                },
                {
                    "name": "unordered",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-ordered-list/sprk-list.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-unordered-list idString=\"unordered-list-1\">\n      <sprk-list-item idString=\"list-item-1\">\n        Unordered List Item\n      </sprk-list-item>\n      <sprk-list-item idString=\"list-item-2\">\n        Unordered List Item\n      </sprk-list-item>\n      <sprk-list-item idString=\"list-item-3\">\n        Unordered List Item\n      </sprk-list-item>\n    </sprk-unordered-list>\n  `,\n})"
                }
            ],
            "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts": [
                {
                    "name": "checkbox",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-selection-container>\n      <label sprkLabel>\n        Checkbox Group Label\n      </label>\n\n      <sprk-selection-item-container>\n        <input\n          type=\"checkbox\"\n          name=\"checkbox_input\"\n          [(ngModel)]=\"checkbox_input1\"\n          sprkSelectionInput\n          #checkboxInput1=\"ngModel\"\n          data-id=\"checkbox-1\"\n          id=\"checkbox-1\"\n          (change)=\"onSelect($event)\"\n        >\n\n        <label\n          for=\"checkbox-1\"\n          sprkSelectionLabel\n        >\n          Checkbox Item 1\n        </label>\n      </sprk-selection-item-container>\n\n      <sprk-selection-item-container>\n        <input\n          type=\"checkbox\"\n          name=\"checkbox_input\"\n          [(ngModel)]=\"checkbox_input2\"\n          sprkSelectionInput\n          #checkboxInput2=\"ngModel\"\n          data-id=\"checkbox-2\"\n          id=\"checkbox-2\"\n          (change)=\"onSelect($event)\"\n        >\n\n        <label\n          for=\"checkbox-2\"\n          sprkSelectionLabel\n        >\n          Checkbox Item 2\n        </label>\n      </sprk-selection-item-container>\n\n      <sprk-selection-item-container>\n        <input\n          type=\"checkbox\"\n          name=\"checkbox_input\"\n          [(ngModel)]=\"checkbox_input3\"\n          sprkSelectionInput\n          #checkboxInput3=\"ngModel\"\n          data-id=\"checkbox-3\"\n          id=\"checkbox-3\"\n          (change)=\"onSelect($event)\"\n        >\n\n        <label\n          for=\"checkbox-3\"\n          sprkSelectionLabel\n        >\n          Checkbox Item 3\n        </label>\n      </sprk-selection-item-container>\n    </sprk-selection-container>\n  `,\n  props: {\n    onSelect() {\n      this.checkbox_input1 === true\n        ? (this.isChecked = true)\n        : (this.isChecked = false);\n    }\n  },\n})"
                },
                {
                    "name": "dateInput",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-input-container>\n      <label sprkLabel>Date Input (No Picker)</label>\n      <input\n        name=\"date_input\"\n        type=\"text\"\n        pattern=\"^(((0[13578]|1[02])([\\\\/-]?)(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)([\\\\/-]?)(0[1-9]|[12]\\\\d|30)|02([\\\\/-]?)((0[1-9])|[12]\\\\d))(\\\\4|\\\\7|\\\\9)[12]\\\\d{3})?$\"\n        placeholder=\"MM/DD/YYYY\"\n        [(ngModel)]=\"date_input\"\n        #dateInput=\"ngModel\"\n        sprkFormatterDate\n        sprkInput\n      />\n      <span [hidden]=\"dateInput.valid || dateInput.pristine\" sprkFieldError>\n        <sprk-icon\n          iconType=\"exclamation-filled-small\"\n          additionalClasses=\"sprk-b-ErrorIcon\"\n        ></sprk-icon>\n        <div class=\"sprk-b-ErrorText\">Invalid date.</div>\n      </span>\n    </sprk-input-container>\n  `,\n})"
                },
                {
                    "name": "datePicker",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon-input-container>\n      <label class=\"sprk-b-Label--with-icon\" sprkLabel>\n        Date Input\n      </label>\n      <sprk-icon\n        iconType=\"calendar\"\n        additionalClasses=\"sprk-c-Icon--stroke-current-color sprk-b-DatePicker__icon\"\n        sprk-input-icon\n      ></sprk-icon>\n      <input\n        name=\"datepicker_input\"\n        class=\"sprk-b-TextInput--has-svg-icon\"\n        type=\"text\"\n        pattern=\"^(((0[13578]|1[02])([\\\\/-]?)(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)([\\\\/-]?)(0[1-9]|[12]\\\\d|30)|02([\\\\/-]?)((0[1-9])|[12]\\\\d))(\\\\4|\\\\7|\\\\9)[12]\\\\d{3})?$\"\n        placeholder=\"MM/DD/YYYY\"\n        [(ngModel)]=\"datepicker_input\"\n        #datepickerInput=\"ngModel\"\n        sprkFormatterDate\n        [sprkDatePickerConfig]=\"dpConfig\"\n        sprkDatepicker\n        sprkInput\n      />\n      <div\n        [hidden]=\"datepickerInput.valid || datepickerInput.pristine\"\n        sprkFieldError\n      >\n        <sprk-icon\n          iconType=\"exclamation-filled-small\"\n          additionalClasses=\"sprk-b-ErrorIcon\"\n        ></sprk-icon>\n        <div class=\"sprk-b-ErrorText\">Invalid date.</div>\n      </div>\n    </sprk-icon-input-container>\n  `,\n})"
                },
                {
                    "name": "helperText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-input-container>\n      <label sprkLabel>\n        Text Input Label\n      </label>\n      <input\n        sprkInput\n        name=\"text_input\"\n        type=\"text\"\n        [(ngModel)]=\"text_input\"\n        required\n        #textInput=\"ngModel\"\n        data-id=\"text-input-1\"\n      >\n      <p sprkHelperText>\n        Optional helper text, used to clarify the field's intent.\n      </p>\n    </sprk-input-container>\n  `,\n})"
                },
                {
                    "name": "hugeSelectBox",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-huge-input-container>\n      <select\n        id=\"select-huge-1\"\n        aria-describedby=\"select-normal--error-container\"\n        data-id=\"select-huge-1\"\n        data-sprk-input=\"huge\"\n        sprkInput\n      >\n        <option\n          value=\"\"\n          disabled\n          selected\n          hidden\n        ></option>\n        <option value=\"1\">Option 1</option>\n        <option value=\"2\">Option 2</option>\n        <option value=\"3\">Option 3</option>\n        <optgroup label=\"Grouped Options\">\n          <option value=\"g1\">Grouped Option 1</option>\n          <option value=\"g2\">Grouped Option 2</option>\n          <option value=\"g3\">Grouped Option 3</option>\n        </optgroup>\n      </select>\n      <label sprkLabel for=\"select-huge-1\">Huge Select Box Label</label>\n      <sprk-icon\n        iconType=\"chevron-down\"\n        additionalClasses=\"sprk-c-Icon--stroke-current-color sprk-b-SelectContainer__icon\"\n        sprk-select-icon\n      ></sprk-icon>\n    </sprk-huge-input-container>\n  `,\n})"
                },
                {
                    "name": "hugeTextInput",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-huge-input-container>\n      <input\n        placeholder=\"Placeholder\"\n        name=\"text_input_huge\"\n        type=\"text\"\n        [(ngModel)]=\"text_input_huge\"\n        required\n        #textInput=\"ngModel\"\n        sprkInput\n      />\n      <label sprkLabel>Huge Text Input</label>\n      <span [hidden]=\"textInput.valid || textInput.pristine\" sprkFieldError>\n        <sprk-icon\n          iconType=\"exclamation-filled-small\"\n          additionalClasses=\"sprk-b-ErrorIcon\"\n        ></sprk-icon>\n        <div class=\"sprk-b-ErrorText\">This field is required.</div>\n      </span>\n    </sprk-huge-input-container>\n  `,\n})"
                },
                {
                    "name": "inlineSearchInput",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon-input-container>\n      <label\n        class=\"sprk-b-Label--with-icon sprk-u-ScreenReaderText\"\n        sprkLabel\n      >\n        Search\n      </label>\n      <sprk-icon\n        iconType=\"search\"\n        additionalClasses=\"sprk-b-InlineSearch__icon sprk-c-Icon--stroke-current-color\"\n        sprk-input-icon\n      ></sprk-icon>\n      <input\n        name=\"inline_search_input\"\n        class=\"sprk-b-TextInput--has-svg-icon\"\n        type=\"text\"\n        placeholder=\"Search\"\n        [(ngModel)]=\"inline_search_input\"\n        #inlineSearchInput=\"ngModel\"\n        data-id=\"input-search-1\"\n        sprkInput\n      >\n    </sprk-icon-input-container>\n  `,\n})"
                },
                {
                    "name": "modules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  imports: [\n    SparkInputContainerModule,\n    SprkLabelModule,\n    SprkInputModule,\n    SprkHugeInputContainerModule,\n    SprkIconModule,\n    SprkSelectionContainerModule,\n    SprkSelectionItemContainerModule,\n    SprkSelectionLabelModule,\n    SprkTextareaContainerModule,\n    SprkFieldErrorModule,\n    SprkFormatterSsnModule,\n    SprkFormatterMonetaryModule,\n    SprkFormatterPhoneNumberModule,\n    SprkFormatterDateModule,\n    SprkIconInputContainerModule,\n    SprkHelperTextModule,\n    SprkDatepickerModule,\n  ],\n}"
                },
                {
                    "name": "monetaryInput",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon-input-container\n      iconContainerClasses=\"sprk-b-TextInputIconContainer--has-text-icon\"\n    >\n      <label class=\"sprk-b-Label--monetary\" sprkLabel>\n        Payment\n      </label>\n      <input\n        class=\"sprk-b-TextInput--has-text-icon\"\n        name=\"monetary_input\"\n        type=\"text\"\n        pattern=\"(^\\\\$?(\\\\d+|\\\\d{1,3}(,\\\\d{3})*)(\\\\.\\\\d+)?$)|^$\"\n        [(ngModel)]=\"monetary_input\"\n        #monetaryInput=\"ngModel\"\n        sprkFormatterMonetary\n        sprkInput\n      />\n      <div\n        [hidden]=\"monetaryInput.valid || monetaryInput.pristine\"\n        sprkFieldError\n      >\n        <sprk-icon\n          iconType=\"exclamation-filled-small\"\n          additionalClasses=\"sprk-b-ErrorIcon\"\n        ></sprk-icon>\n        <div class=\"sprk-b-ErrorText\">Invalid amount.</div>\n      </div>\n    </sprk-icon-input-container>\n  `,\n})"
                },
                {
                    "name": "passwordInput",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-input-container>\n      <label sprkLabel>Password</label>\n      <input [type]=\"passwordType\" name=\"password_input\" sprkInput />\n      <sprk-selection-item-container\n        additionalClasses=\"sprk-b-InputContainer__visibility-toggle\"\n      >\n        <input\n          type=\"checkbox\"\n          sprkSelectionInput\n          (click)=\"togglePasswordType()\"\n          id=\"show-password\"\n        />\n        <label for=\"show-password\" sprkSelectionLabel>Show Password</label>\n      </sprk-selection-item-container>\n    </sprk-input-container>\n  `,\n  props: {\n    passwordType: 'password',\n    togglePasswordType(): void {\n      this.passwordType === 'password'\n        ? (this.passwordType = 'text')\n        : (this.passwordType = 'password');\n    }\n  },\n})"
                },
                {
                    "name": "percentageInput",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-icon-input-container iconContainerClasses=\"sprk-b-InputContainer__icon-container--narrow\">\n      <label sprkLabel>Percentage</label>\n      <sprk-icon\n        iconType=\"percent\"\n        additionalClasses=\"sprk-b-InputContainer__icon sprk-b-InputContainer__icon--right\"\n        sprk-input-icon\n      ></sprk-icon>\n      <input\n        class=\"sprk-b-InputContainer__input--has-icon-right\"\n        name=\"percentage\"\n        type=\"tel\"\n        sprkInput\n      />\n    </sprk-icon-input-container>\n  `,\n})"
                },
                {
                    "name": "phoneInput",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-input-container>\n      <label sprkLabel>Phone Number</label>\n      <input\n        name=\"phone_input\"\n        type=\"text\"\n        pattern=\"(^(\\\\+\\\\d{1,2}\\\\s)?((\\\\(\\\\d{3}\\\\))|\\\\d{3})[\\\\s.-]?\\\\d{3}[\\\\s.-]?\\\\d{4}$)|^$\"\n        placeholder=\"(000) 000-0000\"\n        [(ngModel)]=\"phone_input\"\n        required\n        #phoneInput=\"ngModel\"\n        sprkFormatterPhoneNumber\n        sprkInput\n      />\n      <span\n        [hidden]=\"phoneInput.valid || phoneInput.pristine\"\n        sprkFieldError\n      >\n        <sprk-icon\n          iconType=\"exclamation-filled-small\"\n          additionalClasses=\"sprk-b-ErrorIcon\"\n        ></sprk-icon>\n        <div class=\"sprk-b-ErrorText\">\n          {{\n            phoneInput.invalid && phoneInput.value === ''\n              ? 'This field is required.'\n              : 'This field is invalid.'\n          }}\n        </div>\n      </span>\n    </sprk-input-container>\n  `,\n})"
                },
                {
                    "name": "radioButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-selection-container>\n      <label sprkLabel>Radio Group Label</label>\n      <sprk-selection-item-container>\n        <input\n          type=\"radio\"\n          value=\"1\"\n          name=\"radio_input\"\n          [(ngModel)]=\"radio_input\"\n          sprkSelectionInput\n          #radioInput=\"ngModel\"\n          data-id=\"radio-1\"\n          id=\"radio-1\"\n          (change)=\"onRadioSelect($event)\"\n        >\n        <label\n          for=\"radio-1\"\n          sprkSelectionLabel\n        >\n          Item 1\n        </label>\n      </sprk-selection-item-container>\n      <sprk-selection-item-container>\n        <input\n          type=\"radio\"\n          value=\"2\"\n          name=\"radio_input\"\n          sprkSelectionInput\n          [(ngModel)]=\"radio_input\"\n          #radioInput=\"ngModel\"\n          data-id=\"radio-2\"\n          id=\"radio-2\"\n          (change)=\"onRadioSelect($event)\"\n        >\n        <label\n          for=\"radio-2\"\n          sprkSelectionLabel\n        >\n          Item 2\n        </label>\n      </sprk-selection-item-container>\n      <sprk-selection-item-container>\n        <input\n          type=\"radio\"\n          value=\"3\"\n          name=\"radio_input\"\n          sprkSelectionInput\n          [(ngModel)]=\"radio_input\"\n          #radioInput=\"ngModel\"\n          data-id=\"radio-3\"\n          id=\"radio-3\"\n          (change)=\"onRadioSelect($event)\"\n        >\n        <label\n          for=\"radio-3\"\n          sprkSelectionLabel\n        >\n          Item 3\n        </label>\n      </sprk-selection-item-container>\n    </sprk-selection-container>\n  `,\n  props: {\n    onRadioSelect($event) {\n      $event.target.checked === true && this.radio_input === '1'\n        ? (this.isRadioChecked = true)\n        : (this.isRadioChecked = false);\n    }\n  }\n})"
                },
                {
                    "name": "searchInput",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-input-container>\n      <label sprkLabel>Search Input</label>\n      <input\n        name=\"search_input\"\n        type=\"search\"\n        [(ngModel)]=\"search_input\"\n        #searchInput=\"ngModel\"\n        data-id=\"search-1\"\n        sprkInput\n      >\n    </sprk-input-container>\n  `,\n})"
                },
                {
                    "name": "selectBox",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-input-container>\n      <select\n        class=\"sprk-b-Select\"\n        id=\"select-normal-1\"\n        aria-describedby=\"select-normal--error-container\"\n        data-id=\"select-1\"\n        sprkInput\n      >\n        <option value=\"none\">Please choose...</option>\n        <option value=\"1\">Option 1</option>\n        <option value=\"2\">Option 2</option>\n        <option value=\"3\">Option 3</option>\n        <optgroup label=\"Grouped Options\">\n          <option value=\"g1\">Grouped Option 1</option>\n          <option value=\"g2\">Grouped Option 2</option>\n          <option value=\"g3\">Grouped Option 3</option>\n        </optgroup>\n      </select>\n      <sprk-icon\n        iconType=\"chevron-down\"\n        additionalClasses=\"sprk-c-Icon--stroke-current-color sprk-b-SelectContainer__icon\"\n        sprk-select-icon\n      ></sprk-icon>\n      <label sprkLabel for=\"select-normal-1\">Select Box Label</label>\n    </sprk-input-container>\n  `,\n})"
                },
                {
                    "name": "SSNInput",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-input-container>\n      <label for=\"ssn-input\" sprkLabel>SSN Input</label>\n      <input\n        [type]=\"ssnType\"\n        [ngClass]=\"{ 'sprk-b-TextInput--error': ssnInput.invalid && ssnInput.dirty }\"\n        pattern=\"(^(?!666|000|9\\\\d{2})\\\\d{3}([-]{0,1})(?!00)\\\\d{2}\\\\1(?!0{4})\\\\2\\\\d{4}$)|^$\"\n        placeholder=\"000-00-0000\"\n        name=\"ssn_input\"\n        [(ngModel)]=\"ssn_input\"\n        #ssnInput=\"ngModel\"\n        data-id=\"ssn-1\"\n        id=\"ssn-input\"\n        sprkFormatterSsn\n        sprkInput\n      >\n      <sprk-selection-item-container\n        additionalClasses=\"sprk-b-InputContainer__visibility-toggle\"\n      >\n        <input\n          type=\"checkbox\"\n          sprkSelectionInput\n          (click)=\"toggleSSNType()\"\n          data-id=\"ssn-reveal-3\"\n          id=\"show-ssn\"\n        >\n        <label for=\"show-ssn\" sprkSelectionLabel>Show SSN</label>\n      </sprk-selection-item-container>\n      <div\n        [hidden]=\"ssnInput.valid || ssnInput.pristine\"\n        sprkFieldError\n      >\n        <sprk-icon\n          iconType=\"exclamation-filled-small\"\n          additionalClasses=\"sprk-b-ErrorIcon\"\n        >\n        </sprk-icon>\n        <div class=\"sprk-b-ErrorText\">Invalid SSN.</div>\n      </div>\n    </sprk-input-container>\n  `,\n  props: {\n    ssnType: 'password',\n    toggleSSNType(): void {\n      this.ssnType === 'password'\n        ? (this.ssnType = 'text')\n        : (this.ssnType = 'password');\n    }\n  }\n})"
                },
                {
                    "name": "textarea",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-textarea-container>\n      <label for=\"textarea-1\" sprkLabel>Description</label>\n      <textarea\n        name=\"textarea_input\"\n        id=\"textarea-1\"\n        [(ngModel)]=\"textarea_input\"\n        #textareaInput=\"ngModel\"\n        data-id=\"textarea-1\"\n        sprkInput\n      ></textarea>\n    </sprk-textarea-container>\n  `,\n})"
                },
                {
                    "name": "textInput",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-input-container>\n      <label sprkLabel>Text Input Label</label>\n      <input\n        name=\"text_input\"\n        type=\"text\"\n        [(ngModel)]=\"text_input\"\n        required\n        #textInput=\"ngModel\"\n        sprkInput\n      />\n      <span [hidden]=\"textInput.valid || textInput.pristine\" sprkFieldError>\n        <sprk-icon\n          iconType=\"exclamation-filled-small\"\n          additionalClasses=\"sprk-b-ErrorIcon\"\n        ></sprk-icon>\n        <div class=\"sprk-b-ErrorText\">This field is required.</div>\n      </span>\n    </sprk-input-container>\n  `,\n})"
                }
            ],
            "projects/spark-angular/src/lib/components/sprk-table/sprk-table.stories.ts": [
                {
                    "name": "columnComparison",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-table/sprk-table.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-table idString=\"table-1\">\n      <thead sprkTableHead>\n        <tr>\n          <th>Column Heading</th>\n          <th>Column Heading</th>\n          <th>Column Heading</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>Data 1</td>\n          <td>Data 2</td>\n          <td>Data 3</td>\n        </tr>\n        <tr>\n          <td>Data 1</td>\n          <td>Data 2</td>\n          <td>Data 3</td>\n        </tr>\n        <tr>\n          <td>Data 1</td>\n          <td>Data 2</td>\n          <td>Data 3</td>\n        </tr>\n        <tr>\n          <td>Data 1</td>\n          <td>Data 2</td>\n          <td>Data 3</td>\n        </tr>\n      </tbody>\n    </sprk-table>\n  `,\n})"
                },
                {
                    "name": "groupedColumns",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-table/sprk-table.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-table idString=\"table-3\">\n      <thead sprkTableHead>\n        <tr>\n          <th rowspan=\"2\">Column Heading</th>\n          <th colspan=\"3\">Column Heading</th>\n          <th rowspan=\"2\">Column Heading</th>\n        </tr>\n        <tr>\n          <th sprkTableGroupedColumn>SubHeading</th>\n          <th sprkTableGroupedColumn>SubHeading</th>\n          <th sprkTableGroupedColumn>SubHeading</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>Data 1</td>\n          <td>Data 2</td>\n          <td>Data 3</td>\n          <td>Data 4</td>\n          <td>Data 5</td>\n        </tr>\n        <tr>\n          <td>Data 1</td>\n          <td>Data 2</td>\n          <td>Data 3</td>\n          <td>Data 4</td>\n          <td>Data 5</td>\n        </tr>\n        <tr>\n          <td>Data 1</td>\n          <td>Data 2</td>\n          <td>Data 3</td>\n          <td>Data 4</td>\n          <td>Data 5</td>\n        </tr>\n        <tr>\n          <td>Data 1</td>\n          <td>Data 2</td>\n          <td>Data 3</td>\n          <td>Data 4</td>\n          <td>Data 5</td>\n        </tr>\n      </tbody>\n    </sprk-table>\n  `,\n})"
                },
                {
                    "name": "modules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-table/sprk-table.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  imports: [\n    SprkTableModule,\n  ],\n}"
                },
                {
                    "name": "rowComparison",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-table/sprk-table.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-table idString=\"table-4\">\n      <thead sprkTableHead>\n        <tr>\n          <th sprkTableEmptyHeading></th>\n          <th>Column Heading</th>\n          <th>Column Heading</th>\n          <th>Column Heading</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <th sprkTableRowHeading>Row Heading</th>\n          <td>Data 1</td>\n          <td>Data 2</td>\n          <td>Data 3</td>\n        </tr>\n        <tr>\n          <th sprkTableRowHeading>Row Heading</th>\n          <td>Data 1</td>\n          <td>Data 2</td>\n          <td>Data 3</td>\n        </tr>\n        <tr>\n          <th sprkTableRowHeading>Row Heading</th>\n          <td>Data 1</td>\n          <td>Data 2</td>\n          <td>Data 3</td>\n        </tr>\n        <tr>\n          <th sprkTableRowHeading>Row Heading</th>\n          <td>Data 1</td>\n          <td>Data 2</td>\n          <td>Data 3</td>\n        </tr>\n      </tbody>\n    </sprk-table>\n  `,\n})"
                },
                {
                    "name": "secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-table/sprk-table.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-table\n      idString=\"table-2\"\n      additionalTableClasses=\"sprk-b-Table--secondary\"\n    >\n      <thead sprkTableHead>\n        <tr>\n          <th>Column Heading</th>\n          <th>Column Heading</th>\n          <th>Column Heading</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>Data 1</td>\n          <td>Data 2</td>\n          <td>Data 3</td>\n        </tr>\n        <tr>\n          <td>Data 1</td>\n          <td>Data 2</td>\n          <td>Data 3</td>\n        </tr>\n        <tr>\n          <td>Data 1</td>\n          <td>Data 2</td>\n          <td>Data 3</td>\n        </tr>\n        <tr>\n          <td>Data 1</td>\n          <td>Data 2</td>\n          <td>Data 3</td>\n        </tr>\n      </tbody>\n    </sprk-table>\n  `,\n})"
                },
                {
                    "name": "secondaryRowComparison",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-table/sprk-table.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-table idString=\"table-5\">\n      <tbody>\n        <tr>\n          <th sprkTableRowHeading>Row Heading</th>\n          <td>Data</td>\n          <td>Data</td>\n          <td class=\"sprk-o-Stack sprk-o-Stack--end-column\">\n            <div class=\"sprk-o-Stack__item\">\n              <button\n                class=\"sprk-c-Button sprk-c-Button--secondary\"\n                type=\"button\"\n              >\n                Learn More\n              </button>\n            </div>\n          </td>\n        </tr>\n        <tr>\n          <th sprkTableRowHeading>Row Heading</th>\n          <td>Data</td>\n          <td>Data</td>\n          <td class=\"sprk-o-Stack sprk-o-Stack--end-column\">\n            <div class=\"sprk-o-Stack__item\">\n              <button\n                class=\"sprk-c-Button sprk-c-Button--secondary\"\n                type=\"button\"\n              >\n                Learn More\n              </button>\n            </div>\n          </td>\n        </tr>\n        <tr>\n          <th sprkTableRowHeading>Row Heading</th>\n          <td>Data</td>\n          <td>Data</td>\n          <td class=\"sprk-o-Stack sprk-o-Stack--end-column\">\n            <div class=\"sprk-o-Stack__item\">\n              <button\n                class=\"sprk-c-Button sprk-c-Button--secondary\"\n                type=\"button\"\n              >\n                Learn More\n              </button>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </sprk-table>\n  `,\n})"
                }
            ],
            "projects/spark-angular/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/test.ts",
                    "type": "any"
                }
            ],
            "projects/spark-angular/src/lib/components/sprk-dictionary/sprk-dictionary.stories.ts": [
                {
                    "name": "defaultDictionary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-dictionary/sprk-dictionary.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-dictionary\n     idString=\"dictionary-default\"\n     [data]=\"{\n       'Email Address':'sparkdesignsystem@quickenloans.com',\n       'Mailing Address': '123 Main Street, Detroit, MI, 48216',\n       'Home Phone': '(123) 456-7890',\n       'Cell Phone': '(098) 765-4321',\n       'Work Phone': '(555) 555-5555',\n       'Work Extension': '55555'\n     }\"\n     idString=\"dictionary-1\"\n    ></sprk-dictionary>\n  `\n})"
                },
                {
                    "name": "modules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-dictionary/sprk-dictionary.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  imports: [SprkDictionaryModule],\n}"
                },
                {
                    "name": "striped",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-dictionary/sprk-dictionary.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-dictionary\n     dictionaryType=\"striped\"\n     idString=\"dictionary-striped\"\n     [data]=\"{\n       'Email Address':'sparkdesignsystem@quickenloans.com',\n       'Mailing Address': '123 Main Street, Detroit, MI, 48216',\n       'Home Phone': '(123) 456-7890',\n       'Cell Phone': '(098) 765-4321',\n       'Work Phone': '(555) 555-5555',\n       'Work Extension': '55555'\n     }\"\n     idString=\"dictionary-1\"\n    ></sprk-dictionary>\n  `\n})"
                }
            ],
            "projects/spark-angular/src/lib/components/sprk-accordion/sprk-accordion.stories.ts": [
                {
                    "name": "defaultStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-accordion/sprk-accordion.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-accordion>\n      <sprk-accordion-item\n        title=\"This is an accordion heading\"\n        additionalClasses=\"sprk-u-mbs\"\n        isOpen=\"true\"\n        additionalHeadingClasses=\"sprk-b-TypeDisplaySeven\"\n        idString=\"accordion-item-1\"\n        analyticsString=\"object.action.event\"\n      >\n        <p>\n          This is an example of accordion content.\n          This is an example of accordion content.\n          This is an example of accordion content.\n          This is an example of accordion content.\n        </p>\n      </sprk-accordion-item>\n\n      <sprk-accordion-item\n        title=\"This is an accordion heading\"\n        idString=\"accordion-item-2\"\n        analyticsString=\"object.action.event\"\n        additionalHeadingClasses=\"sprk-b-TypeDisplaySeven\"\n      >\n        <p>\n          This is an example of accordion content.\n          This is an example of accordion content.\n          This is an example of accordion content.\n          This is an example of accordion content.\n        </p>\n      </sprk-accordion-item>\n\n      <sprk-accordion-item\n        title=\"This is an accordion heading\"\n        idString=\"accordion-item-3\"\n        analyticsString=\"object.action.event\"\n        additionalHeadingClasses=\"sprk-b-TypeDisplaySeven\"\n      >\n        <p>\n          This is an example of accordion content.\n          This is an example of accordion content.\n          This is an example of accordion content.\n          This is an example of accordion content.\n        </p>\n      </sprk-accordion-item>\n    </sprk-accordion>\n  `,\n})"
                },
                {
                    "name": "modules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-accordion/sprk-accordion.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  imports: [\n    SprkAccordionModule,\n    SprkAccordionItemModule,\n    RouterModule.forRoot([{ path: 'iframe.html', component: SprkAccordionComponent }]),\n    BrowserAnimationsModule,\n  ],\n  providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\n}"
                }
            ],
            "projects/spark-angular/src/lib/components/sprk-card/sprk-card.stories.ts": [
                {
                    "name": "defaultStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-card/sprk-card.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-card\n      cardType=\"base\"\n      idString=\"card-default\"\n    >\n      <div class=\"\n        sprk-o-Stack__item\n        sprk-c-Card__content\n        sprk-o-Stack\n        sprk-o-Stack--medium\">\n        Base Card Content\n      </div>\n    </sprk-card>\n  `\n})"
                },
                {
                    "name": "fourUp",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-card/sprk-card.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n   <sprk-stack\n     itemSpacing=\"large\"\n     splitAt=\"large\"\n     additionalClasses=\"sprk-o-Stack--center-row\"\n   >\n     <div\n       class=\"sprk-c-Card__container sprk-o-Stack__item--flex@l\"\n       sprkStackItem\n     >\n       <sprk-card\n         cardType=\"teaser\"\n         media=\"img\"\n         idString=\"card-four-up-1\"\n         imgSrc=\"https://spark-assets.netlify.com/desktop.jpg\"\n         body=\"This Lorem ipsum dolor sit amet, doctus invenire vix te.\n           Facilisi perpetua an pri, errem commune mea at, mei prima\n           tantas signiferumque at. Numquam.\"\n         ctaType=\"button\"\n         ctaText=\"Learn More\"\n         title=\"Title\"\n         sprkStackItem\n       ></sprk-card>\n      </div>\n      <div\n        class=\"sprk-c-Card__container sprk-o-Stack__item--flex@l\"\n        sprkStackItem\n      >\n        <sprk-card\n          cardType=\"teaser\"\n          media=\"img\"\n          idString=\"card-four-up-2\"\n          imgSrc=\"https://spark-assets.netlify.com/desktop.jpg\"\n          body=\"This Lorem ipsum dolor sit amet, doctus invenire vix\n            te. Facilisi perpetua an pri, errem commune mea at, mei\n            prima tantas signiferumque at. Numquam.\"\n          ctaType=\"button\"\n          ctaText=\"Learn More\"\n          title=\"Title\"\n          sprkStackItem\n        ></sprk-card>\n      </div>\n      <div\n        class=\"sprk-c-Card__container sprk-o-Stack__item--flex@l\"\n        sprkStackItem\n      >\n        <sprk-card\n          cardType=\"teaser\"\n          media=\"img\"\n          idString=\"card-four-up-3\"\n          imgSrc=\"https://spark-assets.netlify.com/desktop.jpg\"\n          body=\"This Lorem ipsum dolor sit amet, doctus invenire vix\n            te. Facilisi perpetua an pri, errem commune mea at, mei\n            prima tantas signiferumque at. Numquam.\"\n          ctaType=\"button\"\n          ctaText=\"Learn More\"\n          title=\"Title\"\n          sprkStackItem\n        ></sprk-card>\n      </div>\n      <div\n        class=\"sprk-c-Card__container sprk-o-Stack__item--flex@l\"\n        sprkStackItem\n      >\n        <sprk-card\n          cardType=\"teaser\"\n          media=\"img\"\n          idString=\"card-four-up-4\"\n          imgSrc=\"https://spark-assets.netlify.com/desktop.jpg\"\n          body=\"This Lorem ipsum dolor sit amet, doctus invenire vix\n            te. Facilisi perpetua an pri, errem commune mea at, mei\n            prima tantas signiferumque at. Numquam.\"\n          ctaType=\"button\"\n          ctaText=\"Learn More\"\n          title=\"Title\"\n          sprkStackItem\n         ></sprk-card>\n      </div>\n    </sprk-stack>\n  `,\n})"
                },
                {
                    "name": "highlightedHeader",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-card/sprk-card.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-card\n      cardType=\"base\"\n      idString=\"card-highlighted-header\"\n      additionalClasses=\"sprk-c-Card--standout\"\n    >\n      <div class=\"\n        sprk-o-Stack__item\n        sprk-c-Card__header\n        sprk-o-Stack\n        sprk-o-Stack--medium\">\n        <h3 class=\"\n          sprk-b-TypeDisplaySeven\n          sprk-o-Stack__item\n          sprk-u-Color--white\">\n          Description\n        </h3>\n\n        <h4 class=\"\n          sprk-b-TypeDisplayFive\n          sprk-o-Stack__item\n          sprk-u-Color--white\">\n          Card Title\n        </h4>\n      </div>\n\n      <div class=\"\n        sprk-o-Stack__item\n        sprk-o-Stack\n        sprk-o-Stack--medium\n        sprk-c-Card__content\">\n        <p class=\"sprk-b-TypeBodyTwo sprk-o-Stack__item\">\n          Lorem ipsum dolor sit amet, doctus invenire vix te. Facilisi\n          perpetua an pri, errem commune mea at, mei prima tantas\n          signiferumque at. Numquam.\n        </p>\n      </div>\n  </sprk-card>`\n})"
                },
                {
                    "name": "modules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-card/sprk-card.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  imports: [\n    SprkCardModule,\n    SprkStackModule,\n    SprkStackItemModule,\n    RouterModule.forRoot([{\n      path: 'iframe.html',\n      component: SprkCardComponent,\n    }]),\n  ],\n  providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\n}"
                },
                {
                    "name": "standout",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-card/sprk-card.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-card\n      cardType=\"base\"\n      idString=\"card-standout\"\n      additionalClasses=\"sprk-c-Card--standout\"\n    >\n      <div class=\"\n        sprk-o-Stack__item\n        sprk-c-Card__content\n        sprk-o-Stack\n        sprk-o-Stack--medium\">Standout Card Content</div>\n    </sprk-card>\n  `\n})"
                },
                {
                    "name": "teaser",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-card/sprk-card.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-card\n      media=\"img\"\n      cardType=\"teaser\"\n      title=\"Teaser Card Title\"\n      body=\"Lorem ipsum dolor sit amet, doctus invenirevix te. Facilisi perpetua.\"\n      imgSrc=\"https://spark-assets.netlify.com/desktop.jpg\"\n      imgAlt=\"Placeholder Image\"\n      imgHref=\"www.sparkdesignsystem.com\"\n      ctaType=\"button\"\n      ctaText=\"Learn More\"\n      ctaHref=\"www.sparkdesignsystem.com\"\n      ctaAnalytics=\"Button: Spark\"\n      idString=\"card-teaser\"\n    >\n    </sprk-card>\n `\n})"
                },
                {
                    "name": "threeUp",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-card/sprk-card.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n   <sprk-stack\n     itemSpacing=\"large\"\n     splitAt=\"large\"\n     additionalClasses=\"sprk-o-Stack--center-row\"\n   >\n     <div\n       class=\"sprk-c-Card__container sprk-o-Stack__item--flex@l\"\n       sprkStackItem\n     >\n       <sprk-card\n         cardType=\"teaser\"\n         idString=\"card-three-up-1\"\n         media=\"img\"\n         imgSrc=\"https://spark-assets.netlify.com/desktop.jpg\"\n         body=\"This Lorem ipsum dolor sit amet, doctus invenire vix te.\n           Facilisi perpetua an pri, errem commune mea at, mei prima\n           tantas signiferumque at. Numquam.\"\n         ctaType=\"button\"\n         ctaText=\"Learn More\"\n         title=\"Title\"\n         sprkStackItem\n       ></sprk-card>\n      </div>\n      <div\n        class=\"sprk-c-Card__container sprk-o-Stack__item--flex@l\"\n        sprkStackItem\n      >\n        <sprk-card\n          cardType=\"teaser\"\n          media=\"img\"\n          idString=\"card-three-up-2\"\n          imgSrc=\"https://spark-assets.netlify.com/desktop.jpg\"\n          body=\"This Lorem ipsum dolor sit amet, doctus invenire vix\n            te. Facilisi perpetua an pri, errem commune mea at, mei\n            prima tantas signiferumque at. Numquam.\"\n          ctaType=\"button\"\n          ctaText=\"Learn More\"\n          title=\"Title\"\n          sprkStackItem\n        ></sprk-card>\n      </div>\n      <div\n        class=\"sprk-c-Card__container sprk-o-Stack__item--flex@l\"\n        sprkStackItem\n      >\n        <sprk-card\n          cardType=\"teaser\"\n          media=\"img\"\n          idString=\"card-three-up-3\"\n          imgSrc=\"https://spark-assets.netlify.com/desktop.jpg\"\n          body=\"This Lorem ipsum dolor sit amet, doctus invenire vix\n            te. Facilisi perpetua an pri, errem commune mea at, mei\n            prima tantas signiferumque at. Numquam.\"\n          ctaType=\"button\"\n          ctaText=\"Learn More\"\n          title=\"Title\"\n          sprkStackItem\n        ></sprk-card>\n      </div>\n    </sprk-stack>\n  `,\n})"
                },
                {
                    "name": "twoUp",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-card/sprk-card.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n   <sprk-stack\n     itemSpacing=\"large\"\n     splitAt=\"large\"\n     additionalClasses=\"sprk-o-Stack--center-row\"\n   >\n     <div\n       class=\"sprk-c-Card__container sprk-o-Stack__item--flex@l\"\n       sprkStackItem\n     >\n       <sprk-card\n         cardType=\"teaser\"\n         media=\"img\"\n         idString=\"card-two-up-1\"\n         imgSrc=\"https://spark-assets.netlify.com/desktop.jpg\"\n         body=\"This Lorem ipsum dolor sit amet, doctus invenire vix te.\n           Facilisi perpetua an pri, errem commune mea at, mei prima tantas\n           signiferumque at. Numquam.\"\n         ctaType=\"button\"\n         ctaText=\"Learn More\"\n         title=\"Title\"\n         sprkStackItem\n       ></sprk-card>\n      </div>\n      <div\n        class=\"sprk-c-Card__container sprk-o-Stack__item--flex@l\"\n        sprkStackItem\n      >\n        <sprk-card\n          cardType=\"teaser\"\n          media=\"img\"\n          idString=\"card-two-up-2\"\n          imgSrc=\"https://spark-assets.netlify.com/desktop.jpg\"\n          body=\"This Lorem ipsum dolor sit amet, doctus invenire vix\n            te. Facilisi perpetua an pri, errem commune mea at, mei\n            prima tantas signiferumque at. Numquam.\"\n          ctaType=\"button\"\n          ctaText=\"Learn More\"\n          title=\"Title\"\n          sprkStackItem\n        ></sprk-card>\n      </div>\n    </sprk-stack>\n  `,\n})"
                }
            ],
            "projects/spark-angular/src/lib/components/sprk-footer/sprk-footer.stories.ts": [
                {
                    "name": "defaultStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-footer/sprk-footer.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-footer\n      idString=\"footer-1\"\n      [localLinks]=\"[\n        {\n          heading: 'Site Links',\n          links: [\n            {\n              text: 'About This',\n              href: '/about-this',\n              analyticsString: 'Link to Sub Item 1'\n            },\n            {\n              text: 'About This Other Thing',\n              href: '/about-this-other-thing'\n            },\n            {\n              text: 'About That',\n              href: '/about-that'\n            },\n            {\n              text: 'Link Item',\n              href: '/link-item',\n              analyticsString: 'Link to Sub Item 1'\n            },\n            {\n              text: 'This Link Item',\n              href: '/this-link-item',\n              analyticsString: 'Link to Sub Item 1'\n            }\n          ]\n        },\n        {\n          heading: 'Learn More',\n          links: [\n            {\n              text: 'About This Other Thing',\n              href: '/learn-more-1'\n            },\n            {\n              text: 'About This',\n              href: '/learn-more-2'\n            },\n            {\n              text: 'About That',\n              href: '/learn-more-3'\n            },\n            {\n              text: 'Link Item',\n              href: '/learn-more-4',\n              analyticsString: 'Link to Sub Item 1'\n            }\n          ]\n        },\n        {\n          heading: 'Support',\n          links: [\n            {\n              text: 'Share Your Screen',\n              href: '/share-screen',\n              analyticsString: 'Link to Sub Item 1'\n            },\n            {\n              text: 'Opt Out',\n              href: '/opt-out'\n            },\n            {\n              text: 'About That',\n              href: '/about-that'\n            },\n            {\n              text: 'Disclosures and Other Things',\n              href: '/things',\n              analyticsString: 'Link to Sub Item 1'\n            },\n            {\n              text: 'We Want Your Feedback',\n              href: '/feedback',\n              analyticsString: 'Link to Sub Item 1'\n            }\n          ]\n        }\n      ]\"\n\n      globalHeading=\"Global Links\"\n      [globalLinks]=\"[\n        {\n          text: 'Lorem ipsum dolor sit amet, consectetur.',\n          href: '/global-1',\n          icon: 'auto-loans',\n          iconCSS: 'sprk-c-Icon--xl sprk-c-Icon--stroke-current-color',\n          analytics: 'link-1',\n          iconScreenReaderText: 'auto loans'\n        },\n        {\n          text: 'Lorem ipsum dolor sit amet, consectetur.',\n          href: '/global-2',\n          imgSrc:\n            'https://spark-assets.netlify.com/spark-placeholder.jpg',\n          imgCSS: 'sprk-u-Width-20',\n          imgAlt: 'Spark Placeholder Image',\n          analytics: 'link-2'\n        },\n        {\n          text: 'Lorem ipsum dolor sit amet, consectetur.',\n          href: '/global-3',\n          imgSrc:\n            'https://spark-assets.netlify.com/spark-placeholder.jpg',\n          imgCSS: 'sprk-u-Width-20',\n          imgAlt: 'Spark Placeholder Image',\n          analytics: 'link-3'\n        },\n        {\n          text: 'Lorem ipsum dolor sit amet, consectetur.',\n          href: '/global-4',\n          icon: 'auto-loans',\n          iconCSS: 'sprk-c-Icon--xl sprk-c-Icon--stroke-current-color',\n          analytics: 'link-4',\n          iconScreenReaderText: 'auto loans'\n        },\n        {\n          text: 'Lorem ipsum dolor sit amet, consectetur.',\n          href: '/global-5',\n          icon: 'payment-center',\n          iconCSS: 'sprk-c-Icon--xl sprk-c-Icon--stroke-current-color',\n          analytics: 'link-5',\n          iconScreenReaderText: 'payment center'\n        }\n      ]\"\n\n      [socialLinks]=\"[\n        {\n          href: '/icons-1',\n          icon: 'facebook-two-color',\n          iconCSS: 'sprk-c-Icon--l sprk-c-Icon--stroke-current-color',\n          analytics: 'social-link-1',\n          iconScreenReaderText: 'facebook'\n        },\n        {\n          href: '/icons-2',\n          icon: 'instagram-two-color',\n          iconCSS: 'sprk-c-Icon--l sprk-c-Icon--stroke-current-color',\n          analytics: 'social-link-2',\n          iconScreenReaderText: 'instagram'\n        },\n        {\n          href: '/icons-3',\n          icon: 'twitter-two-color',\n          iconCSS: 'sprk-c-Icon--l sprk-c-Icon--stroke-current-color',\n          analytics: 'social-link-3',\n          iconScreenReaderText: 'twitter'\n        },\n        {\n          href: '/icons-4',\n          icon: 'youtube-two-color',\n          iconCSS: 'sprk-c-Icon--l sprk-c-Icon--stroke-current-color',\n          analytics: 'social-link-4',\n          iconScreenReaderText: 'youtube'\n        }\n      ]\"\n\n      [badgeLinks]=\"[\n        {\n          href: '/badge-1',\n          icon: 'townhouse',\n          iconCSS: 'sprk-c-Icon--l sprk-c-Icon--stroke-current-color',\n          analytics: 'link-1',\n          iconScreenReaderText: 'townhouse'\n        },\n        {\n          href: '/badge-2',\n          icon: 'townhouse',\n          iconCSS: 'sprk-c-Icon--l sprk-c-Icon--stroke-current-color',\n          analytics: 'link-2',\n          iconScreenReaderText: 'townhouse'\n        },\n        {\n          href: '/badge-3',\n          icon: 'townhouse',\n          iconCSS: 'sprk-c-Icon--l sprk-c-Icon--stroke-current-color',\n          analytics: 'link-3',\n          iconScreenReaderText: 'townhouse'\n        }\n      ]\"\n\n      awardsHeading=\"Awards\"\n      [awards]=\"[\n        {\n          href: '/awards-1',\n          imgSrc:\n            'https://spark-assets.netlify.com/spark-placeholder.jpg',\n          imgCSS: 'sprk-u-Width-50',\n          imgAlt: 'placeholder',\n          analytics: 'awards-link-1'\n        },\n        {\n          href: '/awards-2',\n          imgSrc:\n            'https://spark-assets.netlify.com/spark-placeholder.jpg',\n          imgCSS: 'sprk-u-Width-50',\n          imgAlt: 'placeholder',\n          analytics: 'awards-link-2'\n        }\n      ]\"\n\n      connectHeading=\"Connect With Us\"\n      [disclaimerText]=\"[\n        {\n          text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.'\n        },\n        {\n          text:\n            'Incididunt ut labore et dolore magna aliqua.\n             Ut enim ad minim veniam.'\n        },\n        {\n          text: 'Lorem ipsum dolor sit amet, consectetur.'\n        },\n        {\n          text: 'Lorem ipsum dolor sit amet, consectetur.'\n        }\n      ]\"\n      [disclaimerToggle]=\"[\n        {\n          title: 'My Award Disclaimer',\n          body:\n            'Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n             Aliquam in laoreet ante.',\n          analytics: 'disclaimer'\n        }\n      ]\"\n    >\n    </sprk-footer>\n  `,\n})"
                },
                {
                    "name": "modules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-footer/sprk-footer.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  imports: [\n    SprkFooterModule,\n    RouterModule.forRoot([{\n      path: 'iframe.html',\n      component: SprkFooterComponent,\n    }]),\n    BrowserAnimationsModule,\n  ],\n  providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\n}"
                }
            ],
            "projects/spark-angular/src/lib/components/sprk-toggle/sprk-toggle.stories.ts": [
                {
                    "name": "defaultStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-toggle/sprk-toggle.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-toggle\n      title=\"My Disclaimer\"\n      analyticsString=\"My Disclaimer\"\n      idString=\"toggle-1\"\n    >\n      <p class=\"sprk-b-TypeBodyFour\">\n        This is an example of disclaimer\n        content. The aria-expanded=\"true\"\n        attribute will be viewable in the\n        DOM on the toggle link when this\n        content is shown. When this content\n        is hidden the aria-expanded attribute\n        will have the value of false. This helps\n        accessibilty devices in understanding\n        that the link is a control for\n        expandable content.\n      </p>\n    </sprk-toggle>\n  `,\n})"
                },
                {
                    "name": "modules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-toggle/sprk-toggle.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  imports: [\n    SprkToggleModule,\n    RouterModule.forRoot([{ path: 'iframe.html', component: SprkToggleComponent }]),\n    BrowserAnimationsModule,\n  ],\n  providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\n}"
                }
            ],
            "projects/spark-angular/src/lib/components/sprk-divider/sprk-divider.stories.ts": [
                {
                    "name": "defaultStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-divider/sprk-divider.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-divider idString=\"divider-1\"></sprk-divider>\n  `\n})"
                },
                {
                    "name": "modules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-divider/sprk-divider.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  imports: [\n    SprkDividerModule,\n  ],\n}"
                }
            ],
            "projects/spark-angular/src/lib/components/sprk-masthead/sprk-masthead.stories.ts": [
                {
                    "name": "defaultStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-masthead/sprk-masthead.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-masthead\n      [narrowNavLinks]=\"defaultNarrowLinks\"\n      idString=\"masthead-1\"\n    >\n      <svg\n        logo-slot\n        class=\"sprk-c-Masthead__logo\"\n        height=\"49\"\n        viewBox=\"0 0 175 49\"\n        width=\"175\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <g fill=\"none\">\n          <path\n            d=\"m42.5897384 43.9901408 9.3126761-16.244668c1.3653924-2.3981891 1.3653924-5.3565392-.0175051-7.7372233l-2.6082494-4.4987927-6.4943662 11.1682092c.3325955 3.6585513-1.680483 7.1245473-5.0239437 8.6474849l-7.2995976 12.5686117 5.4440644-.0175051c2.7482897-.017505 5.3040242-1.4879275 6.6869215-3.8861167z\"\n            fill=\"#ff451a\"\n          ></path>\n          <g\n            fill=\"#000\"\n            transform=\"translate(57.42 2.32)\"\n          >\n            <path\n              d=\"m17.7816098 26.5107847h-14.89678086c-.43762566 0-.85774634-.1750503-1.17283714-.4901408-.31509022-.3150906-.4901406-.7352113-.4901406-1.172837 0-.4376258.17505038-.8577466.4901406-1.1728371.3150908-.3150905.73521148-.4901408 1.17283714-.4901408h14.91428586c2.2056339 0 4.043662-1.732998 4.0961769-3.9211268.017505-1.0853119-.3851107-2.1356137-1.1378271-2.905835-.7527159-.7702213-1.8030182-1.2078471-2.8883299-1.2078471h-10.18792732c-4.04366198 0-7.38712285-3.2209255-7.43963796-7.26458753-.01750504-1.96056333.75271646-3.85110662 2.13561394-5.234004 1.3828969-1.40040241 3.25593556-2.17062374 5.21649854-2.17062374h14.8617709c.9102613 0 1.6629778.73521127 1.6629778 1.66297786 0 .43762576-.1750504.85774648-.4901406 1.17283703-.3150908.31509053-.7352115.49014085-1.1728372.49014085h-14.7917504c-2.20563386 0-4.04366198 1.73299795-4.0961775 3.92112678-.03500996 1.08531183.38511072 2.13561365 1.13782718 2.90583495s1.80301816 1.2078471 2.88832982 1.2078471h10.2929578c1.9605636 0 3.8336017.7877264 5.2164991 2.1706237 1.3828975 1.3828975 2.153119 3.2734407 2.135614 5.2340041-.0525155 4.043662-3.413481 7.2645875-7.457143 7.2645875z\"\n            ></path>\n            <path\n              d=\"m41.693481.37577465h-12.6911471v24.52454725c-.017505.6126761.2975858 1.1903421.8227364 1.4879276.5251511.2975855 1.1728371.3150905 1.6979883 0 .5251505-.3150906.8402413-.8927565.8227364-1.4879276v-21.18108652h9.4352109c2.2931593.01750504 4.1486924 1.83802818 4.2012073 4.13118717.017505 1.12032191-.4201206 2.18812875-1.2078471 2.97585515-.8052314.8227364-1.925553 1.2953722-3.0808851 1.2953722h-4.9189133c-.9102619.0350101-1.6279678.7702213-1.6279678 1.6804829s.7177059 1.6454728 1.6279678 1.6804829h4.9889332c2.0130785 0 3.9386321-.8052314 5.3565395-2.2406439 1.4179075-1.4354125 2.2056339-3.36096577 2.1881289-5.37404421 0-4.13118717-3.4309859-7.49215294-7.6146883-7.49215294z\"\n            ></path>\n            <path\n              d=\"m94.0335214 23.7274849-8.052314-8.2448692h.9977867c2.0130785 0 3.9386316-.8052314 5.356539-2.2406439s2.2056339-3.3784708 2.1881289-5.39154925c-.03501-4.13118717-3.4659959-7.4746479-7.6496983-7.4746479h-12.6911471v24.52454725c-.0175049.6126761.2975859 1.1903421.822737 1.4879276.5251506.3150905 1.1728366.3150905 1.6979877 0 .5251511-.3150906.8402414-.8927565.8227364-1.4879276v-21.18108652h9.4352115c2.2931587.01750504 4.1486918 1.83802818 4.2012068 4.13118717.0175049 1.12032191-.4201207 2.18812875-1.2078471 2.97585515-.8052314.8227364-1.9255531 1.2953722-3.0808852 1.2953722h-4.726358c-.7527164-.0875252-1.4879279.3501006-1.7680082 1.0678069-.2800802.7177062-.0350099 1.5229376.5776661 1.9780683l10.6605636 10.9231389c.665191.560161 1.6454727.5251509 2.2581488-.0875252.665191-.630181.7177059-1.6104628.1575454-2.2756539z\"\n            ></path>\n            <path\n              d=\"m116.019839 23.9200402-9.505231-11.4832998 8.314889-9.2426559c.612676-.68269617.560161-1.75050301-.122535-2.36317907-.682697-.61267605-1.750503-.56016097-2.363179.12253521l-11.745876 13.09376256v-12.0784708c.017505-.61267606-.297585-1.19034206-.8227359-1.48792757-.5251512-.31509054-1.1728372-.31509054-1.6979877 0-.5251512.31509054-.840242.89275654-.822737 1.48792757v22.9315895c-.017505.6126761.2975858 1.1903421.822737 1.4879276.5251505.3150905 1.1728365.3150905 1.6979877 0 .5251509-.3150906.8402409-.8927565.8227359-1.4879276v-5.829175l3.676057-4.0961771 9.190141 11.0981891c.28008.3501007.682696.560161 1.137826.5951711h.157546c.647686 0 1.242857-.3851107 1.505432-.9627767.262576-.595171.175051-1.2778672-.24507-1.7855131z\"\n            ></path>\n            <path\n              d=\"m70.8043462 24.4626962-9.9778676-22.73903423c-.4026157-.9277666-1.3303819-1.52293762-2.3456737-1.52293762-1.0152917 0-1.9430586.59517102-2.3456743 1.52293762l-9.977867 22.73903423c-.3676057.8402414.017505 1.8030181.8577464 2.1706237.8402413.3676056 1.8030181-.017505 2.1706239-.8402415l9.295171-21.18108643 3.2734406 7.45714283h-3.3084505c-.9627768 0-1.7505033.7877264-1.7505033 1.750503 0 .9627767.7877265 1.750503 1.7505033 1.750503h4.8488933l4.4812877 10.2229376c.3851107.8052314 1.3478869 1.1728371 2.1531183.8052314.840242-.3676056 1.2253521-1.3128772.8752519-2.1356136z\"\n            ></path>\n            <path\n              d=\"m3.9701406 31.7272837c3.44849092 0 5.35653954 2.1356137 5.35653954 5.6366197s-1.90804862 5.6541248-5.35653954 5.6541248h-3.71106614v-11.2907445zm-2.64325952 10.3279678h2.59074458c2.76579496 0 4.32374282-1.750503 4.32374282-4.6738431 0-2.92334-1.57545284-4.673843-4.32374282-4.673843h-2.59074458z\"\n            ></path>\n            <path\n              d=\"m17.9566602 43.0180282h-6.8269619v-11.2907445h6.8269619v.9627766h-5.7591552v4.0611671h5.4615694v.9627766h-5.4615694v4.3412475h5.7591552z\"\n            ></path>\n            <path\n              d=\"m20.3898594 40.0946881c.1400398 1.2953722 1.4354124 2.1881288 3.1684101 2.1881288 1.6979883 0 2.9058354-.9452716 2.9058354-2.2056338 0-1.0678068-.7702215-1.750503-2.5207247-2.1881288l-1.295372-.3325955c-2.118109-.525151-3.0108653-1.4179075-3.0108653-2.9408451 0-1.8205231 1.5754529-3.1334004 3.8686116-3.1334004 2.153119 0 3.7635818 1.2778672 3.8686116 2.9933602h-1.0853116c-.1750504-1.2078471-1.2603621-2.0130785-2.8183099-2.0130785-1.6279678 0-2.74829.8927565-2.74829 2.1181086 0 .9802817.7002015 1.5579477 2.4156942 1.9955734l1.1203222.2800805c2.3281687.577666 3.2909455 1.5054327 3.2909455 3.0983904 0 1.9780684-1.6279678 3.2909457-4.0961769 3.2909457-2.3281693 0-4.008652-1.2778672-4.1486924-3.1684105z\"\n            ></path>\n            <path\n              d=\"m29.2649092 43.0180282v-11.2907445h1.0853122v11.2907445z\"\n            ></path>\n            <path\n              d=\"m37.2121933 43.2630986c-3.0633802 0-5.0589537-2.328169-5.0589537-5.8816902 0-3.5535211 1.9955735-5.8816901 5.0414487-5.8816901 2.4156942 0 4.2187118 1.3828974 4.6213275 3.5360161h-1.0853116c-.4726357-1.6104628-1.7505033-2.5382294-3.5360159-2.5382294-2.3806842 0-3.9386321 1.9255533-3.9386321 4.8839034s1.5579479 4.9014085 3.9561371 4.9014085c2.2231389 0 3.6410463-1.4004024 3.6410463-3.5360161v-.3851106h-3.4484909v-.9627767h4.5162976v1.2603621c0 2.7832999-1.8555331 4.603823-4.708853 4.603823z\"\n            ></path>\n            <path\n              d=\"m43.7590744 43.0180282v-11.2907445h1.0503017l6.5818916 9.3826962h.1050299v-9.3826962h1.0503023v11.2907445h-1.0503023l-6.599396-9.3826962h-.1050305v9.3826962z\"\n            ></path>\n            <path\n              d=\"m59.040966 40.0946881c.1400399 1.2953722 1.4354124 2.1881288 3.1684101 2.1881288 1.6979883 0 2.9058354-.9452716 2.9058354-2.2056338 0-1.0678068-.7702215-1.750503-2.5207247-2.1881288l-1.295372-.3325955c-2.1181089-.525151-3.0108652-1.4179075-3.0108652-2.9408451 0-1.8205231 1.5754528-3.1334004 3.8686116-3.1334004 2.1706239 0 3.7635817 1.2778672 3.8686116 2.9933602h-1.0853117c-.1750504-1.2078471-1.260362-2.0130785-2.8358149-2.0130785-1.6279678 0-2.730785.8927565-2.730785 2.1181086 0 .9802817.7002015 1.5579477 2.4156942 1.9955734l1.1203222.2800805c2.3281687.577666 3.2909455 1.5054327 3.2909455 3.0983904 0 1.9780684-1.6279677 3.2909457-4.0961769 3.2909457-2.3281693 0-4.026157-1.2778672-4.1486924-3.1684105z\"\n            ></path>\n            <path\n              d=\"m70.9618916 43.0180282v-4.8839035l-4.0611675-6.406841h1.2253526l3.3084505 5.3215292h.1050299l3.3084511-5.3215292h1.2253521l-4.043662 6.406841v4.8839035z\"\n            ></path>\n            <path\n              d=\"m77.8413685 40.0946881c.1400398 1.2953722 1.4354124 2.1881288 3.1684101 2.1881288 1.6979882 0 2.9058353-.9452716 2.9058353-2.2056338 0-1.0678068-.7702214-1.750503-2.5207246-2.1881288l-1.295372-.3325955c-2.118109-.525151-3.0108653-1.4179075-3.0108653-2.9408451 0-1.8205231 1.5754529-3.1334004 3.8686116-3.1334004 2.1531189 0 3.7635817 1.2778672 3.8686116 2.9933602h-1.0853116c-.1750504-1.2078471-1.2603627-2.0130785-2.8183099-2.0130785-1.6279678 0-2.74829.8927565-2.74829 2.1181086 0 .9802817.7002015 1.5579477 2.4156942 1.9955734l1.1203222.2800805c2.3281687.577666 3.2909455 1.5054327 3.2909455 3.0983904 0 1.9780684-1.6279678 3.2909457-4.0961769 3.2909457-2.3281693 0-4.026157-1.2778672-4.1486925-3.1684105z\"\n            ></path>\n            <path\n              d=\"m89.7447885 43.0180282v-10.3279679h-3.7810861v-.9627766h8.6474845v.9627766h-3.7985911v10.3279679z\"\n            ></path>\n            <path\n              d=\"m102.926077 43.0180282h-6.8269622v-11.2907445h6.8269622v.9627766h-5.7416505v4.0611671h5.4615695v.9627766h-5.4615695v4.3412475h5.7416505z\"\n            ></path>\n            <path\n              d=\"m104.834125 43.0180282v-11.2907445h1.225352l4.166197 9.837827h.10503l4.148693-9.837827h1.242857v11.2907445h-.997787v-9.2076459h-.087526l-3.903621 9.1551308h-.927766l-3.903623-9.1551308h-.070019v9.2076459z\"\n            ></path>\n          </g>\n          <path\n            d=\"m37.7408451 35.3426559c-.0175051.0175051-.0525151.0350101-.0700201.0350101l-16.0696177 7.3521127-3.0283703 5.1989939 11.8684105-.03501z\"\n            fill=\"#ff5c1c\"\n          ></path>\n          <path\n            d=\"m42.9748491 5.95171025-7.544668 12.97122735c3.9561368.560161 7.002012 3.7810865 7.3346077 7.7722334l6.4943662-11.1682093-5.2340041-8.99758543c-.2100603-.38511066-.612676-.59517106-1.0503018-.57766602z\"\n            fill=\"#ff5c1c\"\n          ></path>\n          <path\n            d=\"m21.0585513 42.9748491-5.7066398 2.6082495c-.4551308.2100603-.7352113.7002012-.6651912 1.1903421.0700201.4901408.4376258.9102615.9277666.9977867.5076459.1050301 1.0152918.1575452 1.5229376.1575452h.0175051 1.4179074l3.0283703-5.1989939z\"\n            fill=\"#ff721e\"\n          ></path>\n          <path\n            d=\"m35.4301811 18.9229376 7.544668-12.97122735c-.1400403 0-.2800805.03501008-.4201207.10503017l-3.5885312 1.59295776-11.8859155 5.26901412-6.4243461 11.045674 9.855332-4.3937626c1.5404427-.6826961 3.2559356-.9102615 4.9189135-.6476861z\"\n            fill=\"#ff721e\"\n          ></path>\n          <path\n            d=\"m17.3649899 17.2249497c-1.8905432.8402415-2.7832997 3.0458753-2.0130784 4.9014085.3851106.9277665 1.1378269 1.6629778 2.0830986 2.0480885.9452716.3676056 1.9955734.3501006 2.9058349-.0525151l.3150906-.1400403 6.4243461-11.063179z\"\n            fill=\"#ff8920\"\n          ></path>\n          <path\n            d=\"m37.5657948 25.9774648c-.3851107-.9277666-1.137827-1.6629779-2.0830986-2.0480885-.9452717-.3676056-1.9955735-.3501007-2.905835.052515l-.1225352.0525151-6.4243461 11.0631791 9.5227364-4.2187123c1.8905433-.8402414 2.8008048-3.0283702 2.0130785-4.9014084z\"\n            fill=\"#ff5c1c\"\n          ></path>\n          <path\n            d=\"m17.6275654 29.1983903-7.509658 12.9362174c.0875252-.0175051.1750504-.0350101.2450705-.0700202l3.5885312-1.5929577 12.0959758-5.3565392 6.4243461-11.0631791-10.0653924 4.4812877c-1.5054326.6651911-3.1684104.8927565-4.7788732.6651911z\"\n            fill=\"#ff721e\"\n          ></path>\n          <path\n            d=\"m31.859155 5.12897384 5.7066398-2.60824949c.4726358-.21006037.7352112-.70020121.6826961-1.20784709-.052515-.50764587-.4376257-.91026157-.9452716-.99778671-.5076458-.10503019-1.0152917-.15754528-1.5229376-.15754528h-.017505-1.2778673l-2.9758551 5.11146881z\"\n            fill=\"#ff721e\"\n          ></path>\n          <path\n            d=\"m10.8881288 24.2619718c-.3676057-.8227364-.6126761-1.6979879-.7177062-2.6082495l-6.44185117 11.0806841 5.14647889 8.8575453c.24507042.4201207.73521125.6476861 1.22535208.542656l7.527163-12.9362174c-2.9408451-.3851106-5.4790745-2.2406438-6.7394366-4.9364185z\"\n            fill=\"#ff8920\"\n          ></path>\n          <path\n            d=\"m15.3869216 12.6561368 16.1396377-7.36961768 2.9583501-5.11146881-11.8684104.03501005z\"\n            fill=\"#ff8920\"\n          ></path>\n          <path\n            d=\"m10.6605634 17.5925554c.8052314-2.1706238 2.4682092-3.9211268 4.5863179-4.8663985l.1400403-.0525151 7.2295774-12.4460764h-5.5841046c-2.7657948.01750502-5.3215292 1.48792756-6.7044266 3.88611669l-9.31267605 16.24466801c-1.36539235 2.3981892-1.34788732 5.3565392.03501006 7.7372234l2.67826962 4.6213279 6.44185117-11.0806841c-.17505037-1.3653923 0-2.7482897.4901408-4.0436619z\"\n            fill=\"#ffa022\"\n          ></path>\n        </g>\n      </svg>\n\n      <sprk-link\n        navItem-slot\n        linkType=\"plain\"\n        additionalClasses=\"sprk-c-Masthead__link\"\n        href=\"#nogo\"\n      >\n        Sign In\n      </sprk-link>\n\n      <div\n        class=\"sprk-o-Stack__item sprk-o-Stack__item--flex@xxs sprk-o-Stack sprk-o-Stack--misc-a sprk-o-Stack--split@xxs sprk-o-Stack--end-row\"\n        little-nav-slot\n      >\n        <ul\n          class=\"sprk-c-Masthead__site-links sprk-o-Stack__item sprk-o-HorizontalList sprk-o-HorizontalList--spacing-large sprk-o-Stack__item--center-column\"\n        >\n          <li>\n            <a\n              class=\"sprk-b-Link sprk-b-Link--plain sprk-c-Masthead__link\"\n              href=\"#nogo\"\n            >\n              Item 1\n            </a>\n          </li>\n          <li>\n            <a\n              class=\"sprk-b-Link sprk-b-Link--plain sprk-c-Masthead__link\"\n              href=\"#nogo\"\n            >\n              Item 2\n            </a>\n          </li>\n        </ul>\n      </div>\n      <ul\n        class=\"sprk-o-Stack__item sprk-o-HorizontalList sprk-o-HorizontalList--spacing-large sprk-o-Stack--center-column\"\n        utility-slot\n      >\n        <li>\n          <a\n            class=\"sprk-b-Link sprk-b-Link--plain sprk-c-Masthead__link\"\n            href=\"#nogo\"\n          >\n            (555) 555-5555\n          </a>\n        </li>\n        <li>\n          <a\n            class=\"sprk-b-Link sprk-b-Link--plain sprk-c-Masthead__link\"\n            href=\"#nogo\"\n          >\n            Talk To Us\n          </a>\n        </li>\n        <li>\n          <a\n            class=\"sprk-c-Button sprk-c-Button--secondary sprk-c-Button--compact\"\n            href=\"#nogo\"\n          >\n            Sign In\n          </a>\n        </li>\n      </ul>\n      <div\n        class=\"sprk-u-mas\"\n        narrowNavFooter\n      >\n        <a\n          class=\"sprk-c-Button sprk-c-Button--secondary sprk-c-Button--compact sprk-c-Button--full@s\"\n          href=\"#nogo\"\n        >\n          Sign In\n        </a>\n      </div>\n    </sprk-masthead>\n  `,\n  props: {\n    defaultNarrowLinks: [\n      {\n        text: 'Item 1',\n        href: '#nogo',\n        subNav: [\n          {\n            text: 'Item 1',\n            href: '#nogo',\n          },\n          {\n            text: 'Item 2',\n            href: '#nogo',\n          },\n          {\n            text: 'Item 3',\n            href: '#nogo',\n          }\n        ]\n      },\n      {\n        text: 'Item 2',\n        href: '#nogo',\n        active: true\n      },\n      {\n        text: '(555) 555-5555',\n        href: '#nogo',\n        active: false,\n        leadingIcon: 'landline'\n      },\n      {\n        text: 'Talk To Us',\n        href: '#nogo',\n        active: false,\n        leadingIcon: 'call-team-member'\n      }\n    ]\n  }\n})"
                },
                {
                    "name": "extended",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-masthead/sprk-masthead.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-masthead\n      [bigNavLinks]=\"links\"\n      [narrowNavLinks]=\"extendedNarrowLinks\"\n      [narrowSelector]=\"mySelector\"\n      idString=\"masthead-extended-1\"\n    >\n      <svg\n        logo-slot\n        class=\"sprk-c-Masthead__logo\"\n        height=\"49\"\n        viewBox=\"0 0 175 49\"\n        width=\"175\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <g fill=\"none\">\n          <path\n            d=\"m42.5897384 43.9901408 9.3126761-16.244668c1.3653924-2.3981891 1.3653924-5.3565392-.0175051-7.7372233l-2.6082494-4.4987927-6.4943662 11.1682092c.3325955 3.6585513-1.680483 7.1245473-5.0239437 8.6474849l-7.2995976 12.5686117 5.4440644-.0175051c2.7482897-.017505 5.3040242-1.4879275 6.6869215-3.8861167z\"\n            fill=\"#ff451a\"\n          ></path>\n          <g\n            fill=\"#000\"\n            transform=\"translate(57.42 2.32)\"\n          >\n            <path\n              d=\"m17.7816098 26.5107847h-14.89678086c-.43762566 0-.85774634-.1750503-1.17283714-.4901408-.31509022-.3150906-.4901406-.7352113-.4901406-1.172837 0-.4376258.17505038-.8577466.4901406-1.1728371.3150908-.3150905.73521148-.4901408 1.17283714-.4901408h14.91428586c2.2056339 0 4.043662-1.732998 4.0961769-3.9211268.017505-1.0853119-.3851107-2.1356137-1.1378271-2.905835-.7527159-.7702213-1.8030182-1.2078471-2.8883299-1.2078471h-10.18792732c-4.04366198 0-7.38712285-3.2209255-7.43963796-7.26458753-.01750504-1.96056333.75271646-3.85110662 2.13561394-5.234004 1.3828969-1.40040241 3.25593556-2.17062374 5.21649854-2.17062374h14.8617709c.9102613 0 1.6629778.73521127 1.6629778 1.66297786 0 .43762576-.1750504.85774648-.4901406 1.17283703-.3150908.31509053-.7352115.49014085-1.1728372.49014085h-14.7917504c-2.20563386 0-4.04366198 1.73299795-4.0961775 3.92112678-.03500996 1.08531183.38511072 2.13561365 1.13782718 2.90583495s1.80301816 1.2078471 2.88832982 1.2078471h10.2929578c1.9605636 0 3.8336017.7877264 5.2164991 2.1706237 1.3828975 1.3828975 2.153119 3.2734407 2.135614 5.2340041-.0525155 4.043662-3.413481 7.2645875-7.457143 7.2645875z\"\n            ></path>\n            <path\n              d=\"m41.693481.37577465h-12.6911471v24.52454725c-.017505.6126761.2975858 1.1903421.8227364 1.4879276.5251511.2975855 1.1728371.3150905 1.6979883 0 .5251505-.3150906.8402413-.8927565.8227364-1.4879276v-21.18108652h9.4352109c2.2931593.01750504 4.1486924 1.83802818 4.2012073 4.13118717.017505 1.12032191-.4201206 2.18812875-1.2078471 2.97585515-.8052314.8227364-1.925553 1.2953722-3.0808851 1.2953722h-4.9189133c-.9102619.0350101-1.6279678.7702213-1.6279678 1.6804829s.7177059 1.6454728 1.6279678 1.6804829h4.9889332c2.0130785 0 3.9386321-.8052314 5.3565395-2.2406439 1.4179075-1.4354125 2.2056339-3.36096577 2.1881289-5.37404421 0-4.13118717-3.4309859-7.49215294-7.6146883-7.49215294z\"\n            ></path>\n            <path\n              d=\"m94.0335214 23.7274849-8.052314-8.2448692h.9977867c2.0130785 0 3.9386316-.8052314 5.356539-2.2406439s2.2056339-3.3784708 2.1881289-5.39154925c-.03501-4.13118717-3.4659959-7.4746479-7.6496983-7.4746479h-12.6911471v24.52454725c-.0175049.6126761.2975859 1.1903421.822737 1.4879276.5251506.3150905 1.1728366.3150905 1.6979877 0 .5251511-.3150906.8402414-.8927565.8227364-1.4879276v-21.18108652h9.4352115c2.2931587.01750504 4.1486918 1.83802818 4.2012068 4.13118717.0175049 1.12032191-.4201207 2.18812875-1.2078471 2.97585515-.8052314.8227364-1.9255531 1.2953722-3.0808852 1.2953722h-4.726358c-.7527164-.0875252-1.4879279.3501006-1.7680082 1.0678069-.2800802.7177062-.0350099 1.5229376.5776661 1.9780683l10.6605636 10.9231389c.665191.560161 1.6454727.5251509 2.2581488-.0875252.665191-.630181.7177059-1.6104628.1575454-2.2756539z\"\n            ></path>\n            <path\n              d=\"m116.019839 23.9200402-9.505231-11.4832998 8.314889-9.2426559c.612676-.68269617.560161-1.75050301-.122535-2.36317907-.682697-.61267605-1.750503-.56016097-2.363179.12253521l-11.745876 13.09376256v-12.0784708c.017505-.61267606-.297585-1.19034206-.8227359-1.48792757-.5251512-.31509054-1.1728372-.31509054-1.6979877 0-.5251512.31509054-.840242.89275654-.822737 1.48792757v22.9315895c-.017505.6126761.2975858 1.1903421.822737 1.4879276.5251505.3150905 1.1728365.3150905 1.6979877 0 .5251509-.3150906.8402409-.8927565.8227359-1.4879276v-5.829175l3.676057-4.0961771 9.190141 11.0981891c.28008.3501007.682696.560161 1.137826.5951711h.157546c.647686 0 1.242857-.3851107 1.505432-.9627767.262576-.595171.175051-1.2778672-.24507-1.7855131z\"\n            ></path>\n            <path\n              d=\"m70.8043462 24.4626962-9.9778676-22.73903423c-.4026157-.9277666-1.3303819-1.52293762-2.3456737-1.52293762-1.0152917 0-1.9430586.59517102-2.3456743 1.52293762l-9.977867 22.73903423c-.3676057.8402414.017505 1.8030181.8577464 2.1706237.8402413.3676056 1.8030181-.017505 2.1706239-.8402415l9.295171-21.18108643 3.2734406 7.45714283h-3.3084505c-.9627768 0-1.7505033.7877264-1.7505033 1.750503 0 .9627767.7877265 1.750503 1.7505033 1.750503h4.8488933l4.4812877 10.2229376c.3851107.8052314 1.3478869 1.1728371 2.1531183.8052314.840242-.3676056 1.2253521-1.3128772.8752519-2.1356136z\"\n            ></path>\n            <path\n              d=\"m3.9701406 31.7272837c3.44849092 0 5.35653954 2.1356137 5.35653954 5.6366197s-1.90804862 5.6541248-5.35653954 5.6541248h-3.71106614v-11.2907445zm-2.64325952 10.3279678h2.59074458c2.76579496 0 4.32374282-1.750503 4.32374282-4.6738431 0-2.92334-1.57545284-4.673843-4.32374282-4.673843h-2.59074458z\"\n            ></path>\n            <path\n              d=\"m17.9566602 43.0180282h-6.8269619v-11.2907445h6.8269619v.9627766h-5.7591552v4.0611671h5.4615694v.9627766h-5.4615694v4.3412475h5.7591552z\"\n            ></path>\n            <path\n              d=\"m20.3898594 40.0946881c.1400398 1.2953722 1.4354124 2.1881288 3.1684101 2.1881288 1.6979883 0 2.9058354-.9452716 2.9058354-2.2056338 0-1.0678068-.7702215-1.750503-2.5207247-2.1881288l-1.295372-.3325955c-2.118109-.525151-3.0108653-1.4179075-3.0108653-2.9408451 0-1.8205231 1.5754529-3.1334004 3.8686116-3.1334004 2.153119 0 3.7635818 1.2778672 3.8686116 2.9933602h-1.0853116c-.1750504-1.2078471-1.2603621-2.0130785-2.8183099-2.0130785-1.6279678 0-2.74829.8927565-2.74829 2.1181086 0 .9802817.7002015 1.5579477 2.4156942 1.9955734l1.1203222.2800805c2.3281687.577666 3.2909455 1.5054327 3.2909455 3.0983904 0 1.9780684-1.6279678 3.2909457-4.0961769 3.2909457-2.3281693 0-4.008652-1.2778672-4.1486924-3.1684105z\"\n            ></path>\n            <path\n              d=\"m29.2649092 43.0180282v-11.2907445h1.0853122v11.2907445z\"\n            ></path>\n            <path\n              d=\"m37.2121933 43.2630986c-3.0633802 0-5.0589537-2.328169-5.0589537-5.8816902 0-3.5535211 1.9955735-5.8816901 5.0414487-5.8816901 2.4156942 0 4.2187118 1.3828974 4.6213275 3.5360161h-1.0853116c-.4726357-1.6104628-1.7505033-2.5382294-3.5360159-2.5382294-2.3806842 0-3.9386321 1.9255533-3.9386321 4.8839034s1.5579479 4.9014085 3.9561371 4.9014085c2.2231389 0 3.6410463-1.4004024 3.6410463-3.5360161v-.3851106h-3.4484909v-.9627767h4.5162976v1.2603621c0 2.7832999-1.8555331 4.603823-4.708853 4.603823z\"\n            ></path>\n            <path\n              d=\"m43.7590744 43.0180282v-11.2907445h1.0503017l6.5818916 9.3826962h.1050299v-9.3826962h1.0503023v11.2907445h-1.0503023l-6.599396-9.3826962h-.1050305v9.3826962z\"\n            ></path>\n            <path\n              d=\"m59.040966 40.0946881c.1400399 1.2953722 1.4354124 2.1881288 3.1684101 2.1881288 1.6979883 0 2.9058354-.9452716 2.9058354-2.2056338 0-1.0678068-.7702215-1.750503-2.5207247-2.1881288l-1.295372-.3325955c-2.1181089-.525151-3.0108652-1.4179075-3.0108652-2.9408451 0-1.8205231 1.5754528-3.1334004 3.8686116-3.1334004 2.1706239 0 3.7635817 1.2778672 3.8686116 2.9933602h-1.0853117c-.1750504-1.2078471-1.260362-2.0130785-2.8358149-2.0130785-1.6279678 0-2.730785.8927565-2.730785 2.1181086 0 .9802817.7002015 1.5579477 2.4156942 1.9955734l1.1203222.2800805c2.3281687.577666 3.2909455 1.5054327 3.2909455 3.0983904 0 1.9780684-1.6279677 3.2909457-4.0961769 3.2909457-2.3281693 0-4.026157-1.2778672-4.1486924-3.1684105z\"\n            ></path>\n            <path\n              d=\"m70.9618916 43.0180282v-4.8839035l-4.0611675-6.406841h1.2253526l3.3084505 5.3215292h.1050299l3.3084511-5.3215292h1.2253521l-4.043662 6.406841v4.8839035z\"\n            ></path>\n            <path\n              d=\"m77.8413685 40.0946881c.1400398 1.2953722 1.4354124 2.1881288 3.1684101 2.1881288 1.6979882 0 2.9058353-.9452716 2.9058353-2.2056338 0-1.0678068-.7702214-1.750503-2.5207246-2.1881288l-1.295372-.3325955c-2.118109-.525151-3.0108653-1.4179075-3.0108653-2.9408451 0-1.8205231 1.5754529-3.1334004 3.8686116-3.1334004 2.1531189 0 3.7635817 1.2778672 3.8686116 2.9933602h-1.0853116c-.1750504-1.2078471-1.2603627-2.0130785-2.8183099-2.0130785-1.6279678 0-2.74829.8927565-2.74829 2.1181086 0 .9802817.7002015 1.5579477 2.4156942 1.9955734l1.1203222.2800805c2.3281687.577666 3.2909455 1.5054327 3.2909455 3.0983904 0 1.9780684-1.6279678 3.2909457-4.0961769 3.2909457-2.3281693 0-4.026157-1.2778672-4.1486925-3.1684105z\"\n            ></path>\n            <path\n              d=\"m89.7447885 43.0180282v-10.3279679h-3.7810861v-.9627766h8.6474845v.9627766h-3.7985911v10.3279679z\"\n            ></path>\n            <path\n              d=\"m102.926077 43.0180282h-6.8269622v-11.2907445h6.8269622v.9627766h-5.7416505v4.0611671h5.4615695v.9627766h-5.4615695v4.3412475h5.7416505z\"\n            ></path>\n            <path\n              d=\"m104.834125 43.0180282v-11.2907445h1.225352l4.166197 9.837827h.10503l4.148693-9.837827h1.242857v11.2907445h-.997787v-9.2076459h-.087526l-3.903621 9.1551308h-.927766l-3.903623-9.1551308h-.070019v9.2076459z\"\n            ></path>\n          </g>\n          <path\n            d=\"m37.7408451 35.3426559c-.0175051.0175051-.0525151.0350101-.0700201.0350101l-16.0696177 7.3521127-3.0283703 5.1989939 11.8684105-.03501z\"\n            fill=\"#ff5c1c\"\n          ></path>\n          <path\n            d=\"m42.9748491 5.95171025-7.544668 12.97122735c3.9561368.560161 7.002012 3.7810865 7.3346077 7.7722334l6.4943662-11.1682093-5.2340041-8.99758543c-.2100603-.38511066-.612676-.59517106-1.0503018-.57766602z\"\n            fill=\"#ff5c1c\"\n          ></path>\n          <path\n            d=\"m21.0585513 42.9748491-5.7066398 2.6082495c-.4551308.2100603-.7352113.7002012-.6651912 1.1903421.0700201.4901408.4376258.9102615.9277666.9977867.5076459.1050301 1.0152918.1575452 1.5229376.1575452h.0175051 1.4179074l3.0283703-5.1989939z\"\n            fill=\"#ff721e\"\n          ></path>\n          <path\n            d=\"m35.4301811 18.9229376 7.544668-12.97122735c-.1400403 0-.2800805.03501008-.4201207.10503017l-3.5885312 1.59295776-11.8859155 5.26901412-6.4243461 11.045674 9.855332-4.3937626c1.5404427-.6826961 3.2559356-.9102615 4.9189135-.6476861z\"\n            fill=\"#ff721e\"\n          ></path>\n          <path\n            d=\"m17.3649899 17.2249497c-1.8905432.8402415-2.7832997 3.0458753-2.0130784 4.9014085.3851106.9277665 1.1378269 1.6629778 2.0830986 2.0480885.9452716.3676056 1.9955734.3501006 2.9058349-.0525151l.3150906-.1400403 6.4243461-11.063179z\"\n            fill=\"#ff8920\"\n          ></path>\n          <path\n            d=\"m37.5657948 25.9774648c-.3851107-.9277666-1.137827-1.6629779-2.0830986-2.0480885-.9452717-.3676056-1.9955735-.3501007-2.905835.052515l-.1225352.0525151-6.4243461 11.0631791 9.5227364-4.2187123c1.8905433-.8402414 2.8008048-3.0283702 2.0130785-4.9014084z\"\n            fill=\"#ff5c1c\"\n          ></path>\n          <path\n            d=\"m17.6275654 29.1983903-7.509658 12.9362174c.0875252-.0175051.1750504-.0350101.2450705-.0700202l3.5885312-1.5929577 12.0959758-5.3565392 6.4243461-11.0631791-10.0653924 4.4812877c-1.5054326.6651911-3.1684104.8927565-4.7788732.6651911z\"\n            fill=\"#ff721e\"\n          ></path>\n          <path\n            d=\"m31.859155 5.12897384 5.7066398-2.60824949c.4726358-.21006037.7352112-.70020121.6826961-1.20784709-.052515-.50764587-.4376257-.91026157-.9452716-.99778671-.5076458-.10503019-1.0152917-.15754528-1.5229376-.15754528h-.017505-1.2778673l-2.9758551 5.11146881z\"\n            fill=\"#ff721e\"\n          ></path>\n          <path\n            d=\"m10.8881288 24.2619718c-.3676057-.8227364-.6126761-1.6979879-.7177062-2.6082495l-6.44185117 11.0806841 5.14647889 8.8575453c.24507042.4201207.73521125.6476861 1.22535208.542656l7.527163-12.9362174c-2.9408451-.3851106-5.4790745-2.2406438-6.7394366-4.9364185z\"\n            fill=\"#ff8920\"\n          ></path>\n          <path\n            d=\"m15.3869216 12.6561368 16.1396377-7.36961768 2.9583501-5.11146881-11.8684104.03501005z\"\n            fill=\"#ff8920\"\n          ></path>\n          <path\n            d=\"m10.6605634 17.5925554c.8052314-2.1706238 2.4682092-3.9211268 4.5863179-4.8663985l.1400403-.0525151 7.2295774-12.4460764h-5.5841046c-2.7657948.01750502-5.3215292 1.48792756-6.7044266 3.88611669l-9.31267605 16.24466801c-1.36539235 2.3981892-1.34788732 5.3565392.03501006 7.7372234l2.67826962 4.6213279 6.44185117-11.0806841c-.17505037-1.3653923 0-2.7482897.4901408-4.0436619z\"\n            fill=\"#ffa022\"\n          ></path>\n        </g>\n      </svg>\n\n      <sprk-link\n        navItem-slot\n        linkType=\"plain\"\n        additionalClasses=\"sprk-c-Masthead__link\"\n        href=\"#nogo\"\n      >\n        Sign In\n      </sprk-link>\n\n      <div\n        little-nav-slot\n        class=\"sprk-o-Stack__item sprk-o-Stack__item--flex@xxs sprk-o-Stack sprk-o-Stack--center-column sprk-o-Stack--center-row\"\n      >\n        <div class=\"sprk-o-Stack__item sprk-u-Position--relative\">\n          <sprk-dropdown\n            dropdownType=\"informational\"\n            additionalTriggerClasses=\"sprk-c-Masthead__selector sprk-b-Link sprk-b-Link--plain sprk-o-Stack sprk-o-Stack--split@xxs sprk-o-Stack--center-column\"\n            triggerText=\"My Selector\"\n            additionalClasses=\"sprk-c-Masthead__selector-dropdown sprk-u-Width-100\"\n            triggerIconType=\"chevron-down\"\n            [choices]=\"siteDropdownChoices\"\n            selector=\"Select One\"\n            additionalIconClasses=\"sprk-c-Icon--l sprk-c-Icon--stroke-current-color sprk-Stack__item\"\n            additionalTriggerTextClasses=\"sprk-o-Stack__item sprk-o-Stack__item--flex@xxs\"\n          >\n            <div\n              class=\"sprk-c-Dropdown__footer sprk-u-TextAlign--center\"\n              sprkDropdownFooter\n            >\n              <a\n                class=\"sprk-c-Button sprk-c-Button--compact sprk-c-Button--tertiary\"\n                href=\"#nogo\"\n              >\n                Placeholder\n              </a>\n            </div>\n          </sprk-dropdown>\n        </div>\n      </div>\n\n      <ul\n        utility-slot\n        class=\"sprk-o-Stack__item sprk-o-HorizontalList sprk-o-HorizontalList--spacing-medium sprk-o-Stack--center-column\"\n      >\n        <li>\n          <a\n            class=\"sprk-b-Link sprk-b-Link--plain sprk-c-Masthead__link\"\n            href=\"#nogo\"\n          >\n            Talk To Us\n          </a>\n        </li>\n        <li>\n          <sprk-dropdown\n            [choices]=\"simpleChoices\"\n            dropdownType=\"simple\"\n            title=\"My Account\"\n            triggerIconType=\"user-account\"\n            additionalTriggerClasses=\"sprk-b-Link--plain sprk-c-Masthead__link\"\n            additionalIconClasses=\"sprk-c-Icon--l\"\n            additionalClasses=\"sprk-u-Right--zero sprk-u-mrm\"\n            screenReaderText=\"User Account\"\n          >\n          </sprk-dropdown>\n        </li>\n      </ul>\n    </sprk-masthead>\n  `,\n  props: {\n    links: [\n      {\n        text: 'Navigation Item',\n        href: '#nogo',\n        active: false\n      },\n      {\n        text: 'Your Item',\n        active: false,\n        subNav: [\n          {\n            text: 'Item 1',\n            href: '#nogo'\n          },\n          {\n            text: 'Item 2',\n            href: '#nogo'\n          },\n          {\n            text: 'Item 3',\n            href: '#nogo'\n          }\n        ]\n      },\n      {\n        text: 'Nav Item',\n        href: '#nogo',\n        active: false,\n        leadingIcon: 'settings'\n      },\n      {\n        text: 'Navigation Item',\n        href: '#nogo',\n        leadingIcon: 'chat-online',\n        subNav: [\n          {\n            text: 'Item 1',\n            href: '#nogo'\n          },\n          {\n            text: 'Item 2',\n            href: '#nogo'\n          },\n          {\n            text: 'Item 3',\n            href: '#nogo'\n          }\n        ]\n      },\n      {\n        text: 'Item',\n        href: '#nogo',\n        active: false,\n        leadingIcon: 'chat-online'\n      }\n    ],\n    extendedNarrowLinks: [\n      {\n        text: 'Item 1',\n        href: '#nogo',\n        subNav: [\n          {\n            text: 'Item 1',\n            href: '#nogo'\n          },\n          {\n            text: 'Item 2',\n            href: '#nogo'\n          },\n          {\n            text: 'Item 3',\n            href: '#nogo'\n          }\n        ]\n      },\n      {\n        text: 'Item 2',\n        href: '#nogo',\n        active: true\n      },\n      {\n        text: 'Item 3',\n        href: '#nogo',\n        subNav: [\n          {\n            text: 'Item 1',\n            href: '#nogo'\n          },\n          {\n            text: 'Item 2',\n            href: '#nogo'\n          },\n          {\n            text: 'Item 3',\n            href: '#nogo'\n          }\n        ]\n      },\n      {\n        text: 'Item 4',\n        href: '#nogo'\n      },\n      {\n        text: 'Item 5',\n        href: '#nogo'\n      },\n      {\n        text: '(586) 123-4567',\n        href: '#nogo',\n        active: false,\n        leadingIcon: 'landline'\n      },\n      {\n        text: 'Talk To Us',\n        href: '#nogo',\n        active: false,\n        leadingIcon: 'call-team-member'\n      },\n      {\n        text: 'Settings',\n        href: '#nogo',\n        active: false,\n        leadingIcon: 'settings'\n      },\n      {\n        text: 'My Account',\n        href: '#nogo',\n        active: false,\n        leadingIcon: 'user',\n        subNav: [\n          {\n            text: 'Change Username',\n            href: '#nogo'\n          },\n          {\n            text: 'Change Password',\n            href: '#nogo'\n          },\n          {\n            text: 'Sign Out',\n            href: '#nogo'\n          }\n        ]\n      }\n    ],\n    mySelector: {\n      trigger: {\n        text: 'Select One'\n      },\n      choices: [\n        {\n          content: {\n            title: 'Choice Title',\n            infoLine1: 'Information about this choice',\n            infoLine2: 'More Information'\n          },\n          value: 'Choice Title 1',\n          active: false\n        },\n        {\n          content: {\n            title: 'Choice Title',\n            infoLine1: 'Information about this choice',\n            infoLine2: 'More Information'\n          },\n          value: 'Choice Title 2',\n          active: true\n        }\n      ],\n      footer: {\n        analyticsString: 'Go Elsewhere Link',\n        text: 'Go Elsewhere',\n        href: '#nogo',\n      }\n    },\n    siteDropdownChoices: [\n      {\n        content: {\n          title: 'Choice Title',\n          infoLine1: 'Information about this choice',\n          infoLine2: 'More Information'\n        },\n        value: 'Choice Title 1',\n        active: false\n      },\n      {\n        content: {\n          title: 'Choice Title',\n          infoLine1: 'Information about this choice',\n          infoLine2: 'More Information'\n        },\n        value: 'Choice Title 2',\n        active: true\n      }\n    ],\n    simpleChoices: [\n      {\n        text: 'Change Username',\n        value: 'change-username'\n      },\n      {\n        text: 'Change Password',\n        value: 'change-password'\n      },\n      {\n        text: 'Sign Out',\n        value: 'sign-out'\n      }\n    ],\n  },\n})"
                },
                {
                    "name": "modules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-masthead/sprk-masthead.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  imports: [\n    SprkMastheadModule,\n    SprkLinkModule,\n    SprkDropdownModule,\n    RouterModule.forRoot([{\n      path: 'iframe.html',\n      component: SprkMastheadComponent,\n    }]),\n    BrowserAnimationsModule,\n  ],\n  providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\n}"
                }
            ],
            "projects/spark-angular/src/lib/components/sprk-modal/sprk-modal.stories.ts": [
                {
                    "name": "defaultStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-modal/sprk-modal.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-modal\n      [(isVisible)]=\"choiceVisible\"\n      title=\"Are you sure?\"\n      (hide)=\"toggleChoiceModal($event)\"\n      modalType=\"choice\"\n      idString=\"modal-choice-1\"\n      (confirmClick)=\"confirmClick($event)\"\n    >\n      This is some modal content.\n    </sprk-modal>\n  `,\n  props: {\n    choiceVisible: true,\n    toggleChoiceModal: action('Cancel Click'),\n    confirmClick: action('Confirm Click'),\n  },\n})"
                },
                {
                    "name": "info",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-modal/sprk-modal.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-modal\n      [(isVisible)]=\"infoVisible\"\n      title=\"For Your Information\"\n      (hide)=\"toggleInfoModal($event)\"\n      modalType=\"info\"\n      idString=\"modal-info-1\"\n    >\n      This is some content that is in a modal.\n      It explains what the modal is for.\n      There will also be a way to close the modal.\n    </sprk-modal>\n  `,\n  props: {\n    infoVisible: true,\n    toggleInfoModal: action('Cancel Click'),\n  },\n})"
                },
                {
                    "name": "modules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-modal/sprk-modal.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  imports: [\n    SprkModalModule,\n  ],\n}"
                },
                {
                    "name": "wait",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-modal/sprk-modal.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-modal\n      [(isVisible)]=\"waitVisible\"\n      title=\"Please wait...\"\n      modalType=\"wait\"\n      idString=\"modal-wait-1\"\n    >\n      This type of modal can't be closed by the\n      user.\n    </sprk-modal>\n  `,\n  props: {\n    waitVisible: true,\n  },\n})"
                }
            ],
            "projects/spark-angular/src/lib/components/sprk-dropdown/sprk-dropdown.stories.ts": [
                {
                    "name": "defaultStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-dropdown/sprk-dropdown.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-dropdown\n      dropdownType=\"base\"\n      title=\"My Choices\"\n      triggerIconType=\"settings\"\n      additionalTriggerClasses=\"sprk-b-Link--plain\"\n      [choices]=\"[{\n          text: 'Option 1',\n          value: 'Option 1'\n        },\n        {\n          text: 'Option 2',\n          value: 'Option 2'\n        }\n      ]\"\n    >\n    </sprk-dropdown>\n  `\n})"
                },
                {
                    "name": "informational",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-dropdown/sprk-dropdown.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-dropdown\n      dropdownType=\"informational\"\n      additionalTriggerClasses=\"sprk-b-Link--plain\"\n      triggerText=\"Make a Selection...\"\n      title=\"My Choices\"\n      triggerIconType=\"chevron-down\"\n      [choices]=\"[{\n        content: {\n          title: 'Choice Title',\n          infoLine1: 'Information about this choice',\n          infoLine2: 'More Information'\n        },\n        value: 'Choice Title 1',\n        active: false\n      },\n      {\n        content: {\n          title: 'Choice Title',\n          infoLine1: 'Information about this choice',\n          infoLine2: 'More Information'\n        },\n        value: 'Choice Title 2',\n        active: true\n      }\n    ]\"\n    >\n      <div\n        class=\"sprk-c-Dropdown__footer sprk-u-TextAlign--center\"\n        sprkDropdownFooter\n      >\n        <a class=\"sprk-c-Button sprk-c-Button--tertiary\" href=\"#nogo\">\n          Go Elsewhere\n        </a>\n      </div>\n    </sprk-dropdown>\n  `\n})"
                },
                {
                    "name": "modules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-dropdown/sprk-dropdown.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  imports: [\n    SprkDropdownModule,\n    RouterModule.forRoot([{ path: 'iframe.html', component: SprkDropdownComponent }]),\n  ],\n  providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\n}"
                }
            ],
            "projects/spark-angular/src/lib/components/sprk-highlight-board/sprk-highlight-board.stories.ts": [
                {
                    "name": "defaultStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-highlight-board/sprk-highlight-board.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-highlight-board\n      heading=\"Hello, Welcome To Spark Design System\"\n      ctaText=\"Designers\"\n      ctaHref=\"https://sparkdesignsystem.com/\"\n      ctaText2=\"Developers\"\n      ctaHref2=\"https://sparkdesignsystem.com/\"\n      imgSrc=\"https://spark-assets.netlify.com/desktop.jpg\"\n      imgAlt=\"placeholder\"\n      idString=\"highlightboard-1\"\n    >\n    </sprk-highlight-board>\n  `,\n})"
                },
                {
                    "name": "modules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-highlight-board/sprk-highlight-board.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  imports: [\n    SprkHighlightBoardModule,\n    RouterModule.forRoot([{\n      path: 'iframe.html',\n      component: SprkHighlightBoardComponent,\n    }]),\n  ],\n  providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\n}"
                },
                {
                    "name": "noImage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-highlight-board/sprk-highlight-board.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-highlight-board\n      heading=\"Highlight Board Heading Example\"\n      ctaText=\"Learn More\"\n      ctaText2=\"Learn More\"\n      type=\"noImage\"\n      idString=\"highlightboard-3\"\n    >\n    </sprk-highlight-board>\n  `,\n})"
                },
                {
                    "name": "stacked",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-highlight-board/sprk-highlight-board.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-highlight-board\n      heading=\"Highlight Board Heading Example\"\n      ctaText=\"Learn More\"\n      type=\"stacked\"\n      imgSrc=\"https://spark-assets.netlify.com/desktop.jpg\"\n      imgAlt=\"placeholder\"\n      idString=\"highlightboard-4\"\n    >\n    </sprk-highlight-board>\n  `,\n})"
                }
            ],
            "projects/spark-angular/src/lib/components/sprk-link/sprk-link.stories.ts": [
                {
                    "name": "defaultStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-link/sprk-link.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-link\n      href=\"#\"\n      idString=\"link-1\"\n      analyticsString=\"object.action.event\"\n    >\n      Base Link\n    </sprk-link>\n  `,\n})"
                },
                {
                    "name": "disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-link/sprk-link.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-link\n      isDisabled=\"true\"\n      idString=\"link-4\"\n      analyticsString=\"object.action.event\"\n    >\n      Disabled Link\n    </sprk-link>\n  `,\n})"
                },
                {
                    "name": "iconWithTextLink",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-link/sprk-link.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-link\n      linkType=\"icon\"\n      href=\"#\"\n      idString=\"link-3\"\n      analyticsString=\"object.action.event\"\n    >\n      <sprk-icon\n        iconType=\"communication\"\n        additionalClasses=\"sprk-c-Icon--l sprk-c-Icon--stroke-current-color sprk-u-mrs\"\n      >\n      </sprk-icon>\n      Message Us\n    </sprk-link>\n  `,\n})"
                },
                {
                    "name": "modules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-link/sprk-link.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  imports: [\n    SprkLinkModule,\n    SprkIconModule,\n    RouterModule.forRoot([{\n      path: 'iframe.html',\n      component: SprkLinkComponent,\n    }]),\n  ],\n  providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\n}"
                },
                {
                    "name": "simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-link/sprk-link.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-link\n      linkType=\"simple\"\n      href=\"#\"\n      idString=\"link-2\"\n      analyticsString=\"object.action.event\"\n    >\n      Simple Link\n    </sprk-link>\n  `,\n})"
                }
            ],
            "projects/spark-angular/src/lib/components/sprk-tabbed-navigation/sprk-tabbed-navigation.stories.ts": [
                {
                    "name": "defaultStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-tabbed-navigation/sprk-tabbed-navigation.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-tabbed-navigation idString=\"tabs-1\">\n      <button\n        sprkTabbedNavigationTab\n        analyticsString=\"Tab: 1\"\n        data-id=\"tab-1\"\n      >\n        Tab 1\n      </button>\n      <button\n        sprkTabbedNavigationTab\n        data-id=\"tab-2\"\n        [defaultActive]=true\n      >\n        Tab 2\n      </button>\n      <button\n        sprkTabbedNavigationTab\n        data-id=\"tab-3\"\n      >\n        Tab 3\n      </button>\n      <div sprkTabbedNavigationPanel>\n        <p>Tab 1 Content Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed quis rhoncus ipsum. Nulla\n        euismod nisi est, vel consequat ante consectetur in. Ut interdum dictum est at ornare. Nam nec dapibus nibh.\n        Integer venenatis ex eu mi euismod, non ultricies lacus venenatis.</p>\n      </div>\n      <div [defaultActive]=true sprkTabbedNavigationPanel>\n        <p>Tab 2 Content Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed quis rhoncus ipsum. Nulla\n        euismod nisi est, vel consequat ante consectetur in. Ut interdum dictum est at ornare. Nam nec dapibus nibh.\n        Integer venenatis ex eu mi euismod, non ultricies lacus venenatis.</p>\n      </div>\n      <div sprkTabbedNavigationPanel>\n        <p>Tab 3 Content Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed quis rhoncus ipsum. Nulla\n        euismod nisi est, vel consequat ante consectetur in. Ut interdum dictum est at ornare. Nam nec dapibus nibh.\n        Integer venenatis ex eu mi euismod, non ultricies lacus venenatis.</p>\n      </div>\n    </sprk-tabbed-navigation>\n  `,\n})"
                },
                {
                    "name": "modules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-tabbed-navigation/sprk-tabbed-navigation.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  imports: [\n    SprkTabbedNavigationModule,\n    SprkTabbedNavigationPanelModule,\n    SprkTabbedNavigationTabModule,\n  ],\n}"
                }
            ],
            "projects/spark-angular/src/lib/components/sprk-promo/sprk-promo.stories.ts": [
                {
                    "name": "defaultStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-promo/sprk-promo.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-promo\n      title=\"Title\"\n      subtitle=\"Subtitle\"\n      cta=\"button\"\n      ctaLinkHref=\"foo\"\n      ctaText=\"Learn More\"\n      hasBorder=\"true\"\n      idString=\"promo-1\"\n    >\n      Lorem ipsum dolor. Sit amet pede. Tempus donec et. Suspendisse id\n      inventore integer eum non enim diam habitant. Maecenas nunc per lacus\n      neque egestas. Diam quod curabitur.\n    </sprk-promo>\n  `,\n})"
                },
                {
                    "name": "flag",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-promo/sprk-promo.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-promo\n      isFlag=\"true\"\n      imgSrc=\"https://spark-assets.netlify.com/spark-placeholder.jpg\"\n      imgAlt=\"Spark Design System Logo\"\n      idString=\"promo-2\"\n    >\n      Lorem ipsum dolor. Sit amet pede. Tempus donec et. Suspendisse id\n      inventore integer eum non enim diam habitant. Maecenas nunc per lacus\n      neque egestas. Diam quod curabitur.\n    </sprk-promo>\n  `,\n})"
                },
                {
                    "name": "modules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-promo/sprk-promo.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  imports: [\n    SprkPromoModule,\n    RouterModule.forRoot([{\n      path: 'iframe.html',\n      component: SprkPromoComponent,\n    }]),\n  ],\n  providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\n}"
                },
                {
                    "name": "withImage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-promo/sprk-promo.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-promo\n      title=\"Title\"\n      subtitle=\"Subtitle\"\n      media=\"img\"\n      imgAlt=\"placeholder\"\n      imgSrc=\"https://spark-assets.netlify.com/blue-house.jpg\"\n      cta=\"button\"\n      ctaText=\"Learn More\"\n      idString=\"promo-3\"\n    >\n      Lorem ipsum dolor. Sit amet pede. Tempus donec et. Suspendisse id\n      inventore integer eum non enim diam habitant. Maecenas nunc per lacus\n      neque egestas. Diam quod curabitur.\n    </sprk-promo>\n  `,\n})"
                },
                {
                    "name": "withReversedImage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-promo/sprk-promo.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-promo\n      title=\"Title\"\n      subtitle=\"Subtitle\"\n      mediaRev=\"true\"\n      imgAlt=\"placeholder\"\n      imgSrc=\"https://spark-assets.netlify.com/blue-house.jpg\"\n      imgHref=\"https://sparkdesignsystem.com\"\n      cta=\"button\"\n      ctaText=\"Learn More\"\n      idString=\"promo-4\"\n    >\n      Lorem ipsum dolor. Sit amet pede. Tempus donec et. Suspendisse id\n      inventore integer eum non enim diam habitant. Maecenas nunc per lacus\n      neque egestas. Diam quod curabitur.\n    </sprk-promo>\n  `,\n})"
                }
            ],
            "projects/spark-angular/src/lib/components/sprk-pagination/sprk-pagination.stories.ts": [
                {
                    "name": "defaultStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-pagination/sprk-pagination.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-pagination\n      [totalItems]=\"3\"\n      [itemsPerPage]=\"1\"\n      idString=\"pagination-1\"\n    >\n    </sprk-pagination>\n  `,\n})"
                },
                {
                    "name": "long",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-pagination/sprk-pagination.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-pagination\n      [currentPage]=\"11\"\n      [totalItems]=\"22\"\n      [itemsPerPage]=\"1\"\n      idString=\"pagination-2\"\n    >\n    </sprk-pagination>\n  `,\n})"
                },
                {
                    "name": "modules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-pagination/sprk-pagination.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  imports: [\n    SprkPaginationModule,\n    RouterModule.forRoot([{\n      path: 'iframe.html',\n      component: SprkPaginationComponent,\n    }]),\n  ],\n  providers: [{ provide: APP_BASE_HREF, useValue: '/' }],\n}"
                },
                {
                    "name": "pager",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-pagination/sprk-pagination.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-pagination\n      paginationType=\"pager\"\n      [totalItems]=\"40\"\n      [itemsPerPage]=\"10\"\n      idString=\"pagination-3\"\n    >\n    </sprk-pagination>\n  `,\n})"
                }
            ],
            "projects/spark-angular/src/lib/components/sprk-award/sprk-award.stories.ts": [
                {
                    "name": "defaultStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-award/sprk-award.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-award\n      splitAt=\"tiny\"\n      title=\"Spark Award Component\"\n      imgOneSrc=\"https://spark-assets.netlify.com/spark-placeholder.jpg\"\n      imgTwoSrc=\"https://spark-assets.netlify.com/spark-placeholder.jpg\"\n      imgOneAlt=\"placeholder!\"\n      imgOneHref=\"#nogo\"\n      imgTwoHref=\"#nogo\"\n      imgTwoAlt=\"placeholder!\"\n      disclaimerCopy=\"This is some copy for the disclaimer about disclaimer things.\"\n      disclaimerTitle=\"My disclaimer title\"\n      analyticsStringImgOne=\"Foo\"\n      analyticsStringImgTwo=\"Test\"\n      idString=\"award-1\"\n    >\n    </sprk-award>\n  `,\n})"
                },
                {
                    "name": "modules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-award/sprk-award.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  imports: [\n    SprkAwardModule,\n    RouterModule.forRoot([{\n      path: 'iframe.html',\n      component: SprkAwardComponent,\n    }]),\n    BrowserAnimationsModule,\n  ],\n  providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\n}"
                }
            ],
            "projects/spark-angular/src/lib/directives/inputs/sprk-button/sprk-button.stories.ts": [
                {
                    "name": "disabledPrimary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/directives/inputs/sprk-button/sprk-button.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <button\n      disabled\n      data-id=\"button-disabled-primary\"\n      sprkButton\n    >\n      Button\n    </button>\n  `,\n})"
                },
                {
                    "name": "disabledSecondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/directives/inputs/sprk-button/sprk-button.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <button\n      disabled\n      class=\"sprk-c-Button--secondary\"\n      data-id=\"button-disabled-secondary\"\n      sprkButton\n    >\n      Button\n    </button>\n  `,\n})"
                },
                {
                    "name": "disabledTertiary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/directives/inputs/sprk-button/sprk-button.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <button\n      disabled\n      class=\"sprk-c-Button--tertiary\"\n      data-id=\"button-disabled-tertiary\"\n      sprkButton\n    >\n      Button\n    </button>\n  `,\n})"
                },
                {
                    "name": "fullWidthAtExtraSmallViewport",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/directives/inputs/sprk-button/sprk-button.stories.ts",
                    "type": "",
                    "defaultValue": "() => {\n  return {\n    moduleMetadata: modules,\n    template: `\n      <button\n        class=\"sprk-c-Button--full@xs\"\n        data-id=\"button-full-width-at-extra-small\"\n        sprkButton\n      >\n        Button\n      </button>\n    `,\n  };\n}"
                },
                {
                    "name": "fullWidthAtSmallViewport",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/directives/inputs/sprk-button/sprk-button.stories.ts",
                    "type": "",
                    "defaultValue": "() => {\n  return {\n    moduleMetadata: modules,\n    template: `\n      <button\n        class=\"sprk-c-Button--full@s\"\n        data-id=\"button-full-width-at-small\"\n        sprkButton\n      >\n        Button\n      </button>\n    `,\n  };\n}"
                },
                {
                    "name": "modules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/directives/inputs/sprk-button/sprk-button.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  imports: [\n    SprkButtonModule,\n  ],\n}"
                },
                {
                    "name": "primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/directives/inputs/sprk-button/sprk-button.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <button\n      data-id=\"button-primary\"\n      sprkButton\n    >\n      Buttons\n    </button>\n  `,\n})"
                },
                {
                    "name": "secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/directives/inputs/sprk-button/sprk-button.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <button\n      class=\"sprk-c-Button--secondary\"\n      data-id=\"button-secondary\"\n      sprkButton\n    >\n      Button\n    </button>\n  `,\n})"
                },
                {
                    "name": "spinner",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/directives/inputs/sprk-button/sprk-button.stories.ts",
                    "type": "",
                    "defaultValue": "() => {\n  return {\n    moduleMetadata: modules,\n    template: `\n      <button\n        data-id=\"button-spinner\"\n        sprkButton\n        [isSpinning]=\"true\"\n      >\n        Button\n      </button>\n    `,\n  };\n}"
                },
                {
                    "name": "tertiary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/directives/inputs/sprk-button/sprk-button.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <button\n      class=\"sprk-c-Button--tertiary\"\n      data-id=\"button-tertiary\"\n      sprkButton\n    >\n      Button\n    </button>\n  `,\n})"
                }
            ],
            "projects/spark-angular/src/environment/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/environment/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  version: '9.3.0'\n}"
                }
            ],
            "projects/spark-angular/src/lib/components/sprk-alert/sprk-alert.stories.ts": [
                {
                    "name": "fail",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-alert/sprk-alert.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-alert\n      alertType=\"fail\"\n      idString=\"alert-fail-1\"\n      analyticsString=\"object.action.event\"\n    >\n      This is a failure message to alert\n      that something was not successful.\n    </sprk-alert>\n  `\n})"
                },
                {
                    "name": "info",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-alert/sprk-alert.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-alert\n      alertType=\"info\"\n      idString=\"alert-info-1\"\n      analyticsString=\"test\"\n    >\n      This is important information.\n    </sprk-alert>\n  `,\n})"
                },
                {
                    "name": "modules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-alert/sprk-alert.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  imports: [SprkAlertModule],\n}"
                },
                {
                    "name": "success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-alert/sprk-alert.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-alert\n      alertType=\"success\"\n      idString=\"alert-success-1\"\n      analyticsString=\"object.action.event\"\n    >\n      This is a success message.\n    </sprk-alert>\n  `\n})"
                },
                {
                    "name": "withNoDismissButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-alert/sprk-alert.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n  moduleMetadata: modules,\n  template: `\n    <sprk-alert\n      alertType=\"success\"\n      [dismissible]=\"false\"\n      idString=\"alert-success-2\"\n      analyticsString=\"object.action.event\"\n    >\n      This success alert has no dismiss button.\n    </sprk-alert>\n  `\n})"
                }
            ],
            "projects/spark-angular/src/lib/components/sprk-toggle/sprk-toggle-animations.ts": [
                {
                    "name": "toggleAnimations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/spark-angular/src/lib/components/sprk-toggle/sprk-toggle-animations.ts",
                    "type": "literal type",
                    "defaultValue": "{\n  toggleContent: trigger('toggleContent', [\n    state(\n      'closed',\n      style({\n        height: '0',\n        overflow: 'hidden',\n        visibility: 'hidden'\n      })\n    ),\n    state(\n      'open',\n      style({\n        height: '*',\n        visibility: 'visible'\n      })\n    ),\n    transition('open <=> closed', animate('300ms ease-in'))\n  ])\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 8,
        "status": "low",
        "files": [
            {
                "filePath": "projects/spark-angular/src/environment/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/inputs/sprk-huge-input-container/sprk-huge-input-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprkHugeInputContainerComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/inputs/sprk-icon-input-container/sprk-icon-input-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprkIconInputContainerComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/inputs/sprk-input-container/sprk-input-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SparkInputContainerComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "checkbox",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "dateInput",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "datePicker",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "helperText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "hugeSelectBox",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "hugeTextInput",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "inlineSearchInput",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "modules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "monetaryInput",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "passwordInput",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "percentageInput",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "phoneInput",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "radioButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "searchInput",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectBox",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SSNInput",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "textarea",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/inputs/sprk-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "textInput",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/inputs/sprk-selection-container/sprk-selection-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprkSelectionContainerComponent",
                "coveragePercent": 80,
                "coverageCount": "4/5",
                "status": "very-good"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/inputs/sprk-selection-item-container/sprk-selection-item-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprkSelectionItemContainerComponent",
                "coveragePercent": 75,
                "coverageCount": "3/4",
                "status": "good"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/inputs/sprk-textarea-container/sprk-textarea-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprkTextareaContainerComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-accordion-item/sprk-accordion-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprkAccordionItemComponent",
                "coveragePercent": 83,
                "coverageCount": "10/12",
                "status": "very-good"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-accordion/sprk-accordion.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprkAccordionComponent",
                "coveragePercent": 50,
                "coverageCount": "1/2",
                "status": "medium"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-accordion/sprk-accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-accordion/sprk-accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "modules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-alert/sprk-alert.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprkAlertComponent",
                "coveragePercent": 85,
                "coverageCount": "6/7",
                "status": "very-good"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-alert/sprk-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fail",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-alert/sprk-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "info",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-alert/sprk-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "modules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-alert/sprk-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-alert/sprk-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "withNoDismissButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-award/sprk-award.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprkAwardComponent",
                "coveragePercent": 94,
                "coverageCount": "18/19",
                "status": "very-good"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-award/sprk-award.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-award/sprk-award.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "modules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-card/sprk-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprkCardComponent",
                "coveragePercent": 95,
                "coverageCount": "19/20",
                "status": "very-good"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-card/sprk-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-card/sprk-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fourUp",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-card/sprk-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "highlightedHeader",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-card/sprk-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "modules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-card/sprk-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "standout",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-card/sprk-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "teaser",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-card/sprk-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "threeUp",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-card/sprk-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "twoUp",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-carousel-item/sprk-carousel-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprkCarouselItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-carousel/sprk-carousel.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprkCarouselComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-dictionary/sprk-dictionary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprkDictionaryComponent",
                "coveragePercent": 80,
                "coverageCount": "4/5",
                "status": "very-good"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-dictionary/sprk-dictionary.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultDictionary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-dictionary/sprk-dictionary.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "modules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-dictionary/sprk-dictionary.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "striped",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-divider/sprk-divider.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprkDividerComponent",
                "coveragePercent": 66,
                "coverageCount": "2/3",
                "status": "good"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-divider/sprk-divider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-divider/sprk-divider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "modules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-dropdown/sprk-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprkDropdownComponent",
                "coveragePercent": 83,
                "coverageCount": "15/18",
                "status": "very-good"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-dropdown/sprk-dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-dropdown/sprk-dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "informational",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-dropdown/sprk-dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "modules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-footer/sprk-footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprkFooterComponent",
                "coveragePercent": 92,
                "coverageCount": "12/13",
                "status": "very-good"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-footer/sprk-footer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-footer/sprk-footer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "modules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-highlight-board/sprk-highlight-board.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprkHighlightBoardComponent",
                "coveragePercent": 92,
                "coverageCount": "12/13",
                "status": "very-good"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-highlight-board/sprk-highlight-board.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-highlight-board/sprk-highlight-board.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "modules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-highlight-board/sprk-highlight-board.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "noImage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-highlight-board/sprk-highlight-board.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "stacked",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprkIconComponent",
                "coveragePercent": 75,
                "coverageCount": "3/4",
                "status": "good"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "access",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "amountMoney",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "application",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "applyNow",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "autoLoans",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "baths",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "beds",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "bell",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "bellFilled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "bellFilledSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "blog",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "calculator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "calendar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "callTeamMember",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "camera",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "cashBack",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "chatOnline",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "chatOnlineFilled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "chatOnlineFilledSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "checkMark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "checkMarkFilled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "checkMarkFilledSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "chevronDown",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "chevronDownCircle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "chevronDownCircleTwoColor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "chevronDownFilled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "chevronDownFilledSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "chevronLeft",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "chevronLeftCircle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "chevronLeftCircleTwoColor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "chevronLeftFilled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "chevronLeftFilledSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "chevronRight",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "chevronRightCircle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "chevronRightCircleTwoColor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "chevronRightFilled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "chevronRightFilledSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "chevronUp",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "chevronUpCircle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "chevronUpCircleTwoColor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "chevronUpFilled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "chevronUpFilledSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "clock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "clockFilled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "clockFilledSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "close",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "closeCircle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "closeFilled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "closeFilledSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "cloud",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "cloudFilled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "cloudFilledSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "communication",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "communicationFilled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "communicationFilledSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "condo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "cooling",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "credit",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "creditCardPayoff",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "dedicatedTeam",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "desktopComputer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "documentReview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "documentReviewFilled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "documentReviewFilledSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "documents",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "dollar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "download",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "downloadFilled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "downloadFilledSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "editable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "educationalResources",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "email",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "emailFilled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "emailFilledSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "exclamation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "exclamationCredit",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "exclamationFilled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "exclamationFilledSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "facebook",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "facebookTwoColor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "feedback",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "feedbackFilled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "feedbackFilledSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "findAgent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "free",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "heat",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "home",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "homeImprovement",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "homeShopping",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "homeSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "information",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "informationFilled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "informationFilledSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "instagram",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "instagramTwoColor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "land",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "landline",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "landlineFilled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "landlineFilledSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "laptop",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "largePurchase",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "linkedin",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "linkedinTwoColor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "lock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "medicalExpenses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "menu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mls",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mobile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "modules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mortgage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "multiFamily",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "multiplePages",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "oneTimeUpdate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "organize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "organizeFilled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "organizeFilledSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ourFamily",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "parking",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "payment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "paymentCenter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "percent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pinterest",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pinterestTwoColor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "play",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "plus",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "plusFilled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "plusFilledSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "prequalified",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "prequalifiedFilled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "prequalifiedFilledSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pricePerSqFt",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "print",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "question",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "questionFilled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "questionFilledSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "rates",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "rateShield",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "rateShieldFilled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "rateShieldFilledSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "recurringUpdate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "refinance",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "reviews",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "rocket",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "rocketDocTwoColor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "rotatePage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sameDay",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "savings",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "schools",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "search",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "secureProcess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "settings",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "settingsFilled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "settingsFilledSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "single",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "smallBusiness",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "snapchat",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "snapchatTwoColor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "technology",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "thumbsUp",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "townhouse",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "trash",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "trashFilled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "trashFilledSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "twitter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "twitterTwoColor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "unlock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "update",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "upload",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "user",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "userAccount",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "verifiedApproval",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "vip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "wifi",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "writtenCheck",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "yearBuilt",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "youtube",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-icon/sprk-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "youtubeTwoColor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-link/sprk-link.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprkLinkComponent",
                "coveragePercent": 94,
                "coverageCount": "18/19",
                "status": "very-good"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-link/sprk-link.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-link/sprk-link.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-link/sprk-link.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "iconWithTextLink",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-link/sprk-link.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "modules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-link/sprk-link.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-list-item/sprk-list-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprkListItemComponent",
                "coveragePercent": 75,
                "coverageCount": "3/4",
                "status": "good"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-masthead/sprk-masthead-accordion-item/sprk-masthead-accordion-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprkMastheadAccordionItemComponent",
                "coveragePercent": 81,
                "coverageCount": "9/11",
                "status": "very-good"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-masthead/sprk-masthead-accordion/sprk-masthead-accordion.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprkMastheadAccordionComponent",
                "coveragePercent": 66,
                "coverageCount": "2/3",
                "status": "good"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-masthead/sprk-masthead.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprkMastheadComponent",
                "coveragePercent": 90,
                "coverageCount": "10/11",
                "status": "very-good"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-masthead/sprk-masthead.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-masthead/sprk-masthead.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "extended",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-masthead/sprk-masthead.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "modules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-modal/sprk-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprkModalComponent",
                "coveragePercent": 85,
                "coverageCount": "12/14",
                "status": "very-good"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-modal/sprk-modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-modal/sprk-modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "info",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-modal/sprk-modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "modules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-modal/sprk-modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "wait",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-ordered-list/sprk-list.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "bare",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-ordered-list/sprk-list.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "indented",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-ordered-list/sprk-list.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "modules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-ordered-list/sprk-list.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ordered",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-ordered-list/sprk-list.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "unordered",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-ordered-list/sprk-ordered-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprkOrderedListComponent",
                "coveragePercent": 66,
                "coverageCount": "4/6",
                "status": "good"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-pagination/sprk-pagination.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprkPaginationComponent",
                "coveragePercent": 88,
                "coverageCount": "16/18",
                "status": "very-good"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-pagination/sprk-pagination.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-pagination/sprk-pagination.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "long",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-pagination/sprk-pagination.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "modules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-pagination/sprk-pagination.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pager",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-promo/sprk-promo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprkPromoComponent",
                "coveragePercent": 95,
                "coverageCount": "21/22",
                "status": "very-good"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-promo/sprk-promo.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-promo/sprk-promo.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "flag",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-promo/sprk-promo.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "modules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-promo/sprk-promo.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "withImage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-promo/sprk-promo.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "withReversedImage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-stack/sprk-stack.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprkStackComponent",
                "coveragePercent": 80,
                "coverageCount": "4/5",
                "status": "very-good"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-stepper/sprk-stepper-step/sprk-stepper-step.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprkStepperStepComponent",
                "coveragePercent": 14,
                "coverageCount": "2/14",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-stepper/sprk-stepper.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprkStepperComponent",
                "coveragePercent": 50,
                "coverageCount": "3/6",
                "status": "medium"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-tabbed-navigation/sprk-tabbed-navigation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprkTabbedNavigationComponent",
                "coveragePercent": 80,
                "coverageCount": "4/5",
                "status": "very-good"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-tabbed-navigation/sprk-tabbed-navigation.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-tabbed-navigation/sprk-tabbed-navigation.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "modules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-table/sprk-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprkTableComponent",
                "coveragePercent": 75,
                "coverageCount": "3/4",
                "status": "good"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-table/sprk-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "columnComparison",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-table/sprk-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "groupedColumns",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-table/sprk-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "modules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-table/sprk-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "rowComparison",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-table/sprk-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-table/sprk-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "secondaryRowComparison",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-toggle/sprk-toggle-animations.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "toggleAnimations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-toggle/sprk-toggle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprkToggleComponent",
                "coveragePercent": 85,
                "coverageCount": "6/7",
                "status": "very-good"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-toggle/sprk-toggle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-toggle/sprk-toggle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "modules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/components/sprk-unordered-list/sprk-unordered-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprkUnorderedListComponent",
                "coveragePercent": 66,
                "coverageCount": "4/6",
                "status": "good"
            },
            {
                "filePath": "projects/spark-angular/src/lib/directives/inputs/formatters/sprk-formatter-date/sprk-formatter-date.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SprkFormatterDateDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/directives/inputs/formatters/sprk-formatter-monetary/sprk-formatter-monetary.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SprkFormatterMonetaryDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/directives/inputs/formatters/sprk-formatter-phone-number/sprk-formatter-phone-number.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SprkFormatterPhoneNumberDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/directives/inputs/formatters/sprk-formatter-ssn/sprk-formatter-ssn.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SprkFormatterSsnDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/directives/inputs/sprk-button/sprk-button.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SprkButtonDirective",
                "coveragePercent": 25,
                "coverageCount": "1/4",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/directives/inputs/sprk-button/sprk-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "disabledPrimary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/directives/inputs/sprk-button/sprk-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "disabledSecondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/directives/inputs/sprk-button/sprk-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "disabledTertiary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/directives/inputs/sprk-button/sprk-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fullWidthAtExtraSmallViewport",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/directives/inputs/sprk-button/sprk-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fullWidthAtSmallViewport",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/directives/inputs/sprk-button/sprk-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "modules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/directives/inputs/sprk-button/sprk-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/directives/inputs/sprk-button/sprk-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/directives/inputs/sprk-button/sprk-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "spinner",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/directives/inputs/sprk-button/sprk-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "tertiary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/directives/inputs/sprk-datepicker/sprk-datepicker.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SprkDatepickerDirective",
                "coveragePercent": 25,
                "coverageCount": "1/4",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/directives/inputs/sprk-field-error/sprk-field-error.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SprkFieldErrorDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/directives/inputs/sprk-helper-text/sprk-helper-text.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SprkHelperTextDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/directives/inputs/sprk-input/sprk-input.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SprkInputDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/directives/inputs/sprk-label/sprk-label.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SprkLabelDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/directives/inputs/sprk-selection-input/sprk-selection-input.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SprkSelectionInputDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/directives/inputs/sprk-selection-label/sprk-selection-label.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SprkSelectionLabelDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/directives/sprk-stack-item/sprk-stack-item.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SprkStackItemDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/lib/directives/sprk-table-empty-heading/sprk-table-empty-heading.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SprkTableEmptyHeadingDirective",
                "coveragePercent": 50,
                "coverageCount": "1/2",
                "status": "medium"
            },
            {
                "filePath": "projects/spark-angular/src/lib/directives/sprk-table-grouped-column/sprk-table-grouped-column.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SprkTableGroupedColumnDirective",
                "coveragePercent": 50,
                "coverageCount": "1/2",
                "status": "medium"
            },
            {
                "filePath": "projects/spark-angular/src/lib/directives/sprk-table-head/sprk-table-head.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SprkTableHeadDirective",
                "coveragePercent": 50,
                "coverageCount": "1/2",
                "status": "medium"
            },
            {
                "filePath": "projects/spark-angular/src/lib/directives/sprk-table-row-heading/sprk-table-row-heading.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SprkTableRowHeadingDirective",
                "coveragePercent": 50,
                "coverageCount": "1/2",
                "status": "medium"
            },
            {
                "filePath": "projects/spark-angular/src/lib/directives/tabbed-navigation/sprk-tabbed-navigation-panel/sprk-tabbed-navigation-panel.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SprkTabbedNavigationPanelDirective",
                "coveragePercent": 66,
                "coverageCount": "2/3",
                "status": "good"
            },
            {
                "filePath": "projects/spark-angular/src/lib/directives/tabbed-navigation/sprk-tabbed-navigation-tab/sprk-tabbed-navigation-tab.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SprkTabbedNavigationTabDirective",
                "coveragePercent": 75,
                "coverageCount": "3/4",
                "status": "good"
            },
            {
                "filePath": "projects/spark-angular/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/spark-angular/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}