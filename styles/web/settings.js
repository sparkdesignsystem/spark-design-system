/* eslint-disable max-len */
/* eslint-disable prettier/prettier */
export const AccordionMaxWidth = '53.125rem'; // The maximum width of Accordions.
export const AccordionBorder = '2px solid rgb(230, 230, 230)'; // The border of Accordions.
export const AccordionSummaryTextDecoration = 'none'; // The text decoration of the Accordion item summary.
export const AccordionSummaryTextAlign = 'left'; // The text-align value of the Accordion item summary.
export const AccordionSummaryActiveTextDecoration = 'none'; // The text decoration of the Accordion item summary when active.
export const AccordionSummaryColor = '#1c1b1a'; // The font color of the Accordion item summary.
export const AccordionSummaryBackgroundColor = 'transparent'; // The background color of the Accordion item summary.
export const AccordionSummaryBorder = 'none'; // The border of the Accordion item summary.
export const AccordionSummaryActiveColor = '#603aa1'; // The color of the icon in the summary when the Accordion item is open or hovered.
export const AccordionSummaryHoverIconFill = '#603aa1'; // The fill color of the icon when the Accordion item is hovered.
export const AccordionSummaryPadding = '24rem 0'; // The padding of the Accordion summary.
export const AccordionContentPadding = '0 0 32rem'; // The padding of the Accordion content.
export const AccordionActiveBackgroundColor = '#f7f7f7'; // The background color used for hover and active on items in the Accordion.
export const AlertBorderRadius = '4rem'; // Value for border-radius on the Alert component.
export const AlertBorderColor = '#f7f7f7'; // Value for border color on the Alert component.
export const AlertBorderWidth = '2rem'; // Value for border size on the Alert component.
export const AlertBorderStyle = 'solid'; // Value for border style on the Alert component.
export const AlertBorder = '2rem solid #f7f7f7'; // Value for border on the Alert component.
export const AlertShadowColor = '#000000'; // Value for shadow color on the Alert component.
export const AlertShadow = '0 3px 10px 1px #000000'; // Value for shadow on the Alert component.
export const AlertColor = '#1c1b1a'; // Value for color of the Alert component.
export const AlertFontSize = '1rem'; // The font size of the text in the content area of the Alert component.
export const AlertFontWeight = '400'; // The font weight of the text in the content area of the Alert component.
export const AlertLineHeight = '1.5'; // The line height of the text in the content area of the Alert component.
export const AlertContentPadding = '16rem 16rem 16rem 24rem'; // The padding around the main content icon and message in the Alert component.
export const AlertDismissPadding = '16rem 24rem 16rem 16rem'; // The padding around the dismiss icon in the Alert component.
export const AlertDismissIconColor = '#1c1b1a'; // The color of the dismiss icon in the Alert component.
export const AlertDismissIconSize = '16rem'; // The size of the dismiss icon in the Alert component.
export const AlertIconMarginTop = '0rem'; // The margin top for the icon in the Alert component.
export const AlertIconMarginBottom = '0rem'; // The margin bottom for the icon in the Alert component.
export const AlertIconMarginLeft = '0rem'; // The margin left for the icon in the Alert component.
export const AlertIconMargin = '0rem 24rem 0rem 0rem'; // The margin for the icon in the Alert component.
export const AlertIconSize = '32rem'; // Sets the height and width of the two icons used in the Alert component.
export const AlertIconColorInfo = '#1c6ef2'; // The icon color of the Information Alert component.
export const AlertIconColorSuccess = '#298540'; // The icon color of the Success Alert component.
export const AlertIconColorFail = '#e50158'; // The icon color of the Fail Alert component.
export const AlertBorderInfo = '2px solid #1c6ef2'; // The border value of the Information Alert component.
export const AlertBorderSuccess = '2px solid #298540'; // The border value of the Success Alert component.
export const AlertBorderFail = '2px solid #e50158'; // The border value of the Fail Alert component.
export const AlertBgColor = '#ffffff'; // The background color of the default Alert component.
export const AlertBgColorFail = '#ffffff'; // The background color of the Fail Alert component.
export const AlertBgColorSuccess = '#ffffff'; // The background color of the Success Alert component.
export const AlertBgColorInfo = '#ffffff'; // The background color of the Information Alert component.
export const AlertTextColorFail = '#1c1b1a'; // The value for the color property in the Fail Alert component.
export const AlertTextColorSuccess = '#1c1b1a'; // The value for the color property in the Success Alert component.
export const AlertTextColorInfo = '#1c1b1a'; // The value for the color property in the Information Alert component.
export const BlockquoteSourcePrefix = "'-'"; // Before pseudo-element on the Blockquote component.
export const BlockquoteMargin = '0rem'; // Value for the margin property on Blockquote component.
export const BlockquoteQuoteMargin = '0rem'; // Value for the margin property on the quote in the Blockquote component.
export const BlockquoteQuoteLastMargin = '0rem'; // Value for the margin property on the last quote in the Blockquote component.
export const BoxPaddingTiny = '4rem'; // The padding of the tiny Box object.
export const BoxPaddingSmall = '8rem'; // The padding of the small Box object.
export const BoxPadding = '16rem'; // The padding of the default (medium) Box object.
export const BoxPaddingLarge = '32rem'; // The padding of the large Box object.
export const BoxPaddingHuge = '64rem'; // The padding of the huge Box object.
export const BtnBackgroundColor = '#c8102e'; // The background color of the Button component.
export const BtnShadowColor = '#141414'; // The box shadow color value for the Button component.
export const BtnShadow = '0 3px 10px #141414'; // The box shadow value of the Button component.
export const BtnBorderStyle = 'solid'; // The border style of the Button component.
export const BtnBorderColor = '#c8102e'; // The border color of the Button component.
export const BtnBorderWidth = '2rem'; // The border width of the Button component.
export const BtnBorder = '2rem solid #c8102e'; // The border of the Button component.
export const BtnFontWeight = '500'; // The font weight of the Button component.
export const BtnFontSize = 'inherit'; // The font size of the Button component.
export const BtnFontFamily = 'inherit'; // The font family of the Button component.
export const BtnLineHeight = 'normal'; // The line height of the Button component.
export const BtnTextColor = '#ffffff'; // The text color of the Button component.
export const BtnVisitedTextColor = '#ffffff'; // The visited text color of the Button component.
export const BtnBorderRadius = '4rem'; // The border radius of the Button component.
export const BtnHoverBackgroundColor = '#9d2235'; // The background color of the Button component on hover.
export const BtnHoverTextColor = '#ffffff'; // The text color of the Button component on hover.
export const BtnPadding = '16rem 24px'; // The padding of the Button component.
export const BtnPaddingTop = '16rem'; // The top padding of the Button component.
export const BtnPaddingBottom = '16rem'; // The bottom padding of the Button component.
export const BtnPaddingRight = '24rem'; // The right padding of the Button component.
export const BtnPaddingLeft = '24rem'; // The left padding of the Button component.
export const BtnBreakpointXs = '30rem'; // The extra small breakpoint at which Full Width Buttons switch to normal width.
export const BtnBreakpointS = '42.5rem'; // The small breakpoint at which Full Width Buttons switch to normal width.
export const BtnTransitionSpeed = '0.3s'; // The transition speed setting for transitions on the Button component.
export const BtnLetterSpacing = '0.62rem'; // The letter spacing value of the Button component.
export const BtnDisabledOpacity = '1rem'; // The opacity value of the Disabled Button component.
export const BtnDisabledBorderWidth = '2rem'; // The border width of the Disabled Button component.
export const BtnDisabledBorderStyle = 'solid'; // The border style of the Disabled Button component.
export const BtnDisabledBackgroundColor = '#8d8d8c'; // The background color of the Disabled Button component.
export const BtnDisabledTextColor = '#ffffff'; // The text color of the Disabled Button component.
export const BtnDisabledBorderColor = 'transparent'; // The border color of the Disabled Button component.
export const BtnDisabledBorder = '2rem solid transparent'; // The border of the Disabled Button component.
export const BtnDisabledShadow = 'none'; // The shadow color of the Disabled Button component.
export const BtnDisabledHoverBorder = '2rem solid transparent'; // The border of the Button component when disabled on hover.
export const BtnSecondaryDisabledBorderWidth = 'solid'; // The border width of the Secondary Button component when disabled.
export const BtnSecondaryDisabledBorderStyle = 'solid'; // The border style of the Secondary Button component when disabled.
export const BtnSecondaryDisabledBackgroundColor = 'transparent'; // The background color of the Disabled Button component.
export const BtnSecondaryDisabledTextColor = '#8d8d8c'; // The text color of the Secondary Button component when disabled.
export const BtnSecondaryDisabledBorderColor = '#8d8d8c'; // The border color of the Secondary Button component when disabled.
export const BtnSecondaryDisabledShadow = 'none'; // The box shadow of the Secondary Button component when disabled.
export const BtnSecondaryDisabledHoverBorder = 'solid solid #8d8d8c'; // The border of the Secondary Button component when disabled on hover.
export const BtnSecondaryBackgroundColor = 'transparent'; // The background color of the Secondary Button component.
export const BtnSecondaryBorderColor = '#c8102e'; // The border color of the Secondary Button component.
export const BtnSecondaryBorder = '2rem solid #c8102e'; // The border of the Secondary Button component.
export const BtnSecondaryTextColor = '#c8102e'; // The text color of the Secondary Button component.
export const BtnSecondaryVisitedTextColor = '#c8102e'; // The text color of the Secondary Button component when visited.
export const BtnSecondaryHoverTextColor = '#c8102e'; // The hover text color of the Secondary Button component.
export const BtnSecondaryHoverBackgroundColor = '#f9e7ea'; // The background color of the Secondary Button component on hover.
export const BtnSecondaryHoverBorderColor = '#c8102e'; // The border color of the Secondary Button component on hover.
export const BtnSecondaryHoverShadow = '0 3px 10px #141414'; // The box shadow of the Secondary Button component on hover.
export const BtnSecondaryHoverBorder = '2rem solid #c8102e'; // The border of the Secondary Button component on hover.
export const BtnSecondaryLetterSpacing = '0.62rem'; // The letter spacing of the Secondary Button component.
export const BtnTertiaryDisabledBackgroundColor = 'transparent'; // The background color of the Tertiary Button component when disabled.
export const BtnTertiaryDisabledBorderWidth = '2rem'; // The border width of the Tertiary Button component when disabled.
export const BtnTertiaryDisabledBorderStyle = 'solid'; // The border style of the Tertiary Button component when disabled.
export const BtnTertiaryDisabledBorderColor = '#8d8d8c'; // The border color of the Tertiary Button component when disabled.
export const BtnTertiaryDisabledShadow = 'none'; // The box shadow of the Tertiary Button component when disabled.
export const BtnTertiaryDisabledHoverBorder = '2rem solid #8d8d8c'; // The border of the Tertiary Button component when disabled on hover.
export const BtnTertiaryDisabledTextColor = '#8d8d8c'; // The text color of the Tertiary Button component when disabled.
export const BtnTertiaryBackgroundColor = 'transparent'; // The background color of the Tertiary Button component.
export const BtnTertiaryBorderColor = '#3c3174'; // The border color of the Tertiary Button component.
export const BtnTertiaryBorder = '2rem solid #3c3174'; // The border of the Tertiary Button component.
export const BtnTertiaryTextColor = '#3c3174'; // The text color of the Tertiary Button component.
export const BtnTertiaryVisitedTextColor = '#3c3174'; // The text color of the Tertiary Button component when visited.
export const BtnTertiaryHoverTextColor = '#603aa1'; // The text color of the Tertiary Button component on hover.
export const BtnTertiaryHoverBackgroundColor = '#e7e2f2'; // The background color of the Tertiary Button component on hover.
export const BtnTertiaryHoverBorderColor = '#603aa1'; // The border color of the Tertiary Button component on hover.
export const BtnTertiaryHoverShadow = '0 3px 10px #141414'; // The box shadow of the Tertiary Button component on hover
export const BtnTertiaryHoverBorder = '2rem solid #8d8d8c'; // The border of the Tertiary Button component when disabled on hover.
export const BtnTertiaryLetterSpacing = '0.62rem'; // The letter spacing of the Tertiary Button component.
export const BtnQuaternaryDisabledBorderWidth = '2rem'; // The border width of the Quaternary Button component when disabled.
export const BtnQuaternaryDisabledBorderStyle = 'solid'; // The border style of the Quaternary Button component when disabled.
export const BtnQuaternaryDisabledBorderColor = '#8d8d8c'; // The border color of the Quaternary Button component when disabled.
export const BtnQuaternaryDisabledTextColor = '#8d8d8c'; // The text color of the Quaternary Button component when disabled.
export const BtnQuaternaryDisabledBackgroundColor = 'transparent'; // The background color of the Quaternary Button component when disabled.
export const BtnQuaternaryDisabledShadow = 'none'; // The box shadow of the Quaternary Button component when disabled.
export const BtnQuaternaryDisabledHoverBorder = '2rem solid #8d8d8c'; // The border of the Quaternary Button component when disabled on hover.
export const BtnQuaternaryBackgroundColor = 'transparent'; // The background color of the Quaternary Button component.
export const BtnQuaternaryBorderColor = '#8d8d8c'; // The border color of the Quaternary Button component.
export const BtnQuaternaryBorder = '2rem solid #8d8d8c'; // The border of the Quaternary Button component.
export const BtnQuaternaryTextColor = '#1c1b1a'; // The text color of the Quaternary Button component
export const BtnQuaternaryVisitedTextColor = '#1c1b1a'; // The text color of the Quaternary Button component when visited.
export const BtnQuaternaryBoxShadow = 'none'; // The box-shadow of the Quaternary Button component.
export const BtnQuaternaryHoverTextColor = '#1c1b1a'; // The text color of the Quaternary Button component on hover.
export const BtnQuaternaryHoverBackgroundColor = 'transparent'; // The background color of the Quaternary Button component on hover.
export const BtnQuaternaryHoverBorderColor = '#1c1b1a'; // The border color of the Quaternary Button component on hover.
export const BtnQuaternaryHoverShadow = '0 3px 10px #141414'; // The box shadow of the Quaternary Button component on hover.
export const BtnQuaternaryLetterSpacing = '0.62rem'; // The letter spacing of the Quaternary Button component.
export const CardMaxWidth = '26.5625rem'; // The maximum width of the Card.
export const CardBreakpoint = '42.5rem'; // The main Card breakpoint.
export const CardShadow = '0 3px 10px 1px rgba(0, 0, 0, 0.08)'; // The box shadow of the Card on narrow viewports.
export const CardShadowColorWideViewport = '#000000'; // The box shadow color of the Card on wide viewports.
export const CardShadowWideViewport = '0 3px 18px #000000'; // The box shadow of the Card on wide viewports.
export const CardShadowColorStandout = '#000000'; // The box shadow color of the Standout Card variant on narrow viewports.
export const CardShadowColorStandoutWideViewport = '#000000'; // The box shadow color of the Standout Card variant on wide viewports.
export const CardShadowStandout = '0 4px 20px 2px #000000'; // The box shadow of the Standout Card variant on narrow viewports.
export const CardShadowStandoutWideViewport = '0 4px 40px 2px #000000'; // The box shadow of the Standout Card variant on wide viewports.
export const CardBorderRadius = '8rem'; // The border radius of the Card.
export const CardContentPadding = '24rem'; // The padding of the content inside the Card.
export const CardHeaderBgColor = '#603aa1'; // The background color of the header area for the Highlighted Header Card.
export const CardHeaderTextColor = '#ffffff'; // The text color for the Highlighted Header Card.
export const CarouselDotSpacing = '16rem'; // The spacing between the dots in the Carousel component.
export const CarouselDotWidth = '10rem'; // The width of the dots in the Carousel component.
export const CarouselDotHeight = '10rem'; // The height of the dots in the Carousel component.
export const CarouselDotSelected = '0 0 0 8rem #e7e2f2'; // The box shadow of the active dot in the Carousel component.
export const CarouselDotSelectedBgColor = '#ffffff'; // The background color of the active dot in the Carousel component.
export const CarouselDotSelectedBgColorDarkBg = '#603aa1'; // The background color of the active dot in the Carousel component on a dark background.
export const CarouselDotContainerPadding = '4rem'; // The padding value for the dots container in the Carousel component.
export const CarouselDotBorder = '2rem solid #ffffff'; // The border value for the Carousel component.
export const CarouselDotBorderDarkBg = '2rem solid #2e1166'; // The border value for the Carousel component on dark background.
export const CarouselWideDotWidth = '10rem'; // The spacing between the dots in the Carousel component.
export const CarouselWideDotHeight = '10rem'; // The spacing between the dots in the Carousel component.
export const CarouselWideDotSpacing = '16rem'; // The wide viewport spacing between the dots in the Carousel component.
export const CarouselArrowPadding = '16rem'; // The padding value of the arrows in the Carousel component.
export const CarouselArrowEdgeSpacing = '0rem'; // The left and right values of the arrows in the Carousel component.
export const CarouselArrowSpacing = '16rem'; // The spacing for the arrows in the Carousel component.
export const CarouselArrowColor = '#ffffff'; // The color of the arrows in the Carousel component.
export const CarouselArrowPositionBreakpoint = '31.25rem'; // The breakpoint for the arrows in the Carousel component.
export const CarouselBreakpoint = '80rem'; // The breakpoint for the Carousel component.
export const CarouselNarrowImageMaxWidth = '18.75rem'; // The maximum width of the image in the Carousel component.
export const CenteredColumnWidth = '1232rem'; // Width value for the Centered Column layout container.
export const Red = '#c8102e'; // Red for key branded moments throughout the product as our primary brand color.
export const DeepRed = '#76232f'; // Darkest red for key branded moments throughout the product.
export const MidRed = '#9d2235'; // Mid red for key branded moments throughout the product.
export const Purple = '#603aa1'; // Main purple for secondary actions and brand elements.
export const PurpleDark = '#3c3174'; // Dark purple for interactive elements. Can also be used for limited floods of color.
export const PurpleDeep = '#2e1166'; // Deep purple for interactive elements. Can also be used for limited floods of color.
export const PurpleLight = '#9265d3'; // Light purple for interactive elements.
export const PurpleLightest = '#e7e2f2'; // Lightest purple for interactive elements. Can also be used for limited floods of color.
export const Green = '#298540'; // Use to communicate a positive status or message.
export const Blue = '#1c6ef2'; // Use to communicate an informative status or message.
export const Pink = '#e50158'; // Use to communicate an error status or message.
export const Yellow = '#eda302'; // Use to communicate an urgent status or message. Be sure to follow accessibility guidelines when using this color.
export const White = '#ffffff'; // White for floods of color and accents, like backgrounds and cards.
export const Black = '#1c1b1a'; // Black for main text color, specifically in headline and body copy.
export const BlackTint10 = '#e8e8e8'; // Black at 10%. Use this gray in combination with content hierarchy, font-weight and background color to create AA accessible text.
export const BlackTint20 = '#d2d1d1'; // Black at 20%. Use this gray in combination with content hierarchy, font-weight and background color to create AA accessible text.
export const BlackTint30 = '#bababa'; // Black at 30%. Use this gray in combination with content hierarchy, font-weight and background color to create AA accessible text.
export const BlackTint40 = '#a4a4a3'; // Black at 40%. Use this gray in combination with content hierarchy, font-weight and background color to create AA accessible text.
export const BlackTint50 = '#8d8d8c'; // Black at 50%. Use this gray in combination with content hierarchy, font-weight and background color to create AA accessible text.
export const BlackTint60 = '#777676'; // Black at 60%. Use this gray in combination with content hierarchy, font-weight and background color to create AA accessible text.
export const BlackTint70 = '#605f5e'; // Black at 70%. Use this gray in combination with content hierarchy, font-weight and background color to create AA accessible text.
export const BlackTint80 = '#494948'; // Black at 80%. Use this gray in combination with content hierarchy, font-weight and background color to create AA accessible text.
export const BlackTint90 = '#323130'; // Black at 90%. Use this gray in combination with content hierarchy, font-weight and background color to create AA accessible text.
export const Gray = '#f7f7f7'; // Lightest gray. Use in combination with content hierarchy, font-weight and background color to create AA accessible text.
export const PurpleNavy = '#1c0152'; // Color value for Purple Navy.
export const Lavender = '#be84f7'; // Color value for Lavender.
export const Wisteria = '#deb1fd'; // Color value for Wisteria.
export const Magnolia = '#f0daff'; // Color value for Magnolia.
export const DictionaryBorder = '1px solid #f7f7f7'; // The border surrounding the Dictionary.
export const DictionaryStripeColor = '#f7f7f7'; // The background color of the key value pairs in the striped Dictionary.
export const DictionaryBreakpoint = '38.4375rem'; // The breakpoint of the Dictionary component.
export const DictionaryLabelFontSize = '1rem'; // The font size of the labels in the Dictionary.
export const DictionaryLabelFontWeight = '500'; // The font weight of the labels in the Dictionary.
export const DictionaryLabelLineHeight = '1.6rem'; // The line height of the labels in the Dictionary.
export const DividerColor = '#e6e6e6'; // The value for color of Dividers.
export const DividerBorderWidth = '2rem'; // The size value of border for Dividers.
export const DividerBorderStyle = 'solid'; // The style value of border for Dividers.
export const DividerBorder = '2rem solid #e6e6e6'; // The value of border for Dividers.
export const DropdownActiveBackgroundColor = '#f7f7f7'; // Background color of the Dropdown items that are active or hovered.
export const DropdownActiveBorder = '2.5px solid #603aa1'; // The left border of the Dropdown item that is active.
export const DropdownActiveBoxShadow = '-1px 0 0 0 #603aa1'; // The box-shadow of the Dropdown item that is active.
export const DropdownBorderWidth = '1rem'; // The border size of the Dropdown.
export const DropdownBorderStyle = 'solid'; // The border style of the Dropdown.
export const DropdownBorderColor = '#f7f7f7'; // The border color of the Dropdown.
export const DropdownBorder = '1rem solid #f7f7f7'; // The border of the Dropdown.
export const DropdownPadding = '24rem'; // The padding around the Dropdown items.
export const DropdownFooterPadding = '16rem'; // The padding around the Informational Dropdown footer.
export const DropdownMaxWidth = '24rem'; // The max-width of the Dropdown.
export const DropdownLinkColor = '#1c1b1a'; // The color of the Dropdown links.
export const DropdownLineHeight = '1rem'; // The line height of the Dropdown.
export const DropdownShadow = '0 0 40px 2px rgba(0, 0, 0, 0.1)'; // The box shadow of the Dropdown.
export const DropdownFontSize = '1rem'; // The font size of the Dropdown.
export const DropdownFontWeight = '400'; // The font weight of the Dropdown.
export const DropdownTriggerColor = '#1c1b1a'; // The color of the Dropdown trigger.
export const DropdownTriggerColorActive = '#1c1b1a'; // The color of the Dropdown trigger on hover, active, focus.
export const DropdownTriggerColorVisited = '#1c1b1a'; // The color of the Dropdown trigger for the visited state.
export const DropdownTitleFontSize = '1rem'; // The font size of the Dropdown title.
export const DropdownTitleFontWeight = '300'; // The font weight of the Dropdown title.
export const DropdownTitleColor = '#bababa'; // The color of the Dropdown title.
export const FlagGutter = '16rem'; // Value for the gutters between body and figure in the Flag component.
export const FlagGutterTiny = '4rem'; // Value for the gutters between body and figure in the Tiny Flag component.
export const FlagGutterSmall = '8rem'; // Value for the gutters between body and figure in the Samll Flag component.
export const FlagGutterLarge = '32rem'; // Value for the gutters between body and figure in the Large Flag component.
export const FlagGutterHuge = '64rem'; // Value for the gutters between body and figure in the Huge Flag component.
export const FlagStackedBreakpoint = '25rem'; // Value for the gutters between body and figure in the Stacked Flag component.
export const FooterBackgroundColor = '#1c1b1a'; // Background color of the Footer
export const FooterTextColor = '#ffffff'; // Text color on the Footer.
export const FooterLinkColor = '#ffffff'; // Link color on the Footer.
export const FooterLinkFontWeight = 'normal'; // Link font-weight on the Footer.
export const FooterIconColor = '#ffffff'; // Icon color on the Footer.
export const FooterTriggerColor = '#ffffff'; // Toggle trigger color on the Footer.
export const FooterTriggerFontWeight = 'normal'; // Toggle trigger font-weight on the Footer.
export const FooterTriggerHoverColor = '#9265d3'; // Toggle trigger hover color on the Footer.
export const FooterToggleTransition = '0.3s'; // Toggle transition timing on the Footer.
export const HighlightBoardBreakpoint = '30rem'; // The Highlight Board breakpoint at which styles change for padding, font size and button width.
export const HighlightBoardContentWidth = '30rem'; // The maximum width of the content for the Highlight Board when it has an image.
export const HighlightBoardTypeReductionPercentage = '0.8rem'; // Percentage reduction value for the font size in the Highlight Board in narrow viewports.
export const HighlightBoardHeight = '31.25rem'; // The height of the Highlight Board image
export const HighlightBoardColor = '#ffffff'; // The background color of the Highlight Board.
export const HighlightBoardContentBoxColor = '#ffffff'; // The background color of the content box in the Highlight Board.
export const HorizontalListSpacing = '16rem'; // The default spacing value for Horizontal List components.
export const HorizontalListSpacingTiny = '4rem'; // The default spacing value for the tiny Horizontal List components.
export const HorizontalListSpacingSmall = '8rem'; // The default spacing value for the small Horizontal List components.
export const HorizontalListSpacingMedium = '16rem'; // The default spacing value for the medium Horizontal List components.
export const HorizontalListSpacingLarge = '32rem'; // The default spacing value for the large Horizontal List components.
export const HorizontalListSpacingHuge = '64rem'; // The default spacing value for the huge Horizontal List components.
export const HorizontalListDelimiter = "','"; // The delimiter between delimited items in Horizontal List components.
export const IconM = '16rem'; // Value for height and width of the Icon component.
export const IconL = '24rem'; // Value for height and width of the large Icon component.
export const IconXl = '32rem'; // Value for height and width of the extra-large Icon component.
export const IconFillColor = '#1c1b1a'; // Value for the fill property of the Icon component.
export const IconStrokeColor = '#1c1b1a'; // Value for the stroke property of the Icon component.
export const IconStrokeWidth = '1.25'; // Value for the stroke-width property of the Icon component.
export const IconLStroke = 'none'; // Value for the stroke property of the large Icon component.
export const IconCustomStrokeWidthL = '0rem'; // Value for the stroke-width property of the large Icon component.
export const IconXlStroke = 'none'; // Value for the stroke property of the extra large Icon component.
export const IconCustomStrokeWidthXl = '0rem'; // Value for the stroke-width property of the extra large Icon component.
export const IconFilledFillColor = '#1c1b1a'; // Value for the fill property of the Filled Icon component.
export const IconFilledStrokeColor = 'none'; // Value for the stroke property of the Filled Icon component..
export const TextInputHugeHeight = '64rem'; // Todo deprecate, The height value for Huge Inputs.
export const InputHugeHeight = '64rem'; // The height value for Huge Inputs.
export const TextInputHasTextIconPadding = '0 0 1px 37px'; // The font size of text icons inside Inputs.
export const TextInputHasIconPadding = '12px 0 12px 40px'; // The padding inside Inputs that contain icons.
export const TextInputFontFamily =
  "RocketSans, Helvetica, 'Helvetica Neue', Arial, sans-serif"; // The font family for Inputs.
export const TextInputFontSize = '1rem'; // The font size for Inputs.
export const TextInputFontWeight = '300'; // The font weight for Inputs.
export const TextInputErrorColor = '#e50158'; // Color setting for Inputs with errors.
export const TextInputHeight = '48rem'; // The height setting for Inputs.
export const TextInputLineHeight = '1.3'; // The line height setting for Inputs.
export const TextInputOutline = '0'; // The outline setting for Inputs.
export const TextInputColor = '#1c1b1a'; // The color setting for Inputs.
export const TextInputBorder = '2px solid #8d8d8c'; // The border setting for Inputs.
export const TextInputBorderRadius = '4rem'; // The border radius setting for Inputs.
export const TextInputBoxShadow = 'none'; // The box shadow setting for Inputs.
export const TextInputPadding = '0 16rem'; // The padding setting for Inputs.
export const TextInputFocusBorderColor = '#603aa1'; // The border color on Inputs when focused.
export const TextInputErrorBorderColor = '#e50158'; // The border color on Inputs when there is an error.
export const TextInputDisabledBorderColor = '#8d8d8c'; // The border color on disabled Inputs.
export const TextInputDisabledColor = '#8d8d8c'; // The color on disabled Inputs.
export const TextInputReadonlyBorderColor = '#8d8d8c'; // The border color on readonly Inputs.
export const TextInputReadonlyColor = '#8d8d8c'; // The color on readonly Inputs.
export const TextInputDisabledBackgroundColor = '#a4a4a3'; // The background color on disabled Inputs.
export const TextInputDisabledBoxShadow = 'none'; // The box shadow on disabled Inputs.
export const TextInputTransition = 'border-color 0.15s ease'; // The transition setting on Inputs.
export const TextInputHugeFocusBorderWidth = '2rem'; // Todo deprecate, The border width for Huge Inputs on focus.
export const TextInputHugeFocusLabelColor = '#603aa1'; // Todo deprecate, The label color value of Huge Inputs on focus.
export const TextInputHugeHasTextIconPadding = '0 40px'; // The padding value for Huge Inputs with icons.
export const TextInputHugeErrorFocusLabelColor = '#1c1b1a'; // Todo deprecate, The label color value of Huge Inputs when they have an error.
export const TextInputHugeCompleteLabelColor = '#1c1b1a'; // Todo deprecate, The label color when the Huge Input has a value and is not focused.
export const TextInputHugeFontSize = '1.25rem'; // Todo deprecate, The font size for Huge Inputs.
export const TextInputHugeLabelFontSize = '0.8125rem'; // Todo deprecate, The label font size for Huge Inputs.
export const TextInputHugeActiveLabelTop = '10rem'; // Todo deprecate, The top value for Huge Input labels when they are active. This adjusts how far the label is from the top of the container.
export const TextInputHugeBorderWidth = '2rem'; // Todo deprecate, The border width for Huge Inputs.
export const TextInputHugePadding = '0 24rem'; // Todo deprecate, The padding for Huge Inputs.
export const TextInputHugeTransition = 'top 0.3s, color 0.3s, font-size 0.3s'; // Todo deprecate, The transition value for Huge Inputs.
export const TextInputHugeTransitionDelay = '0s'; // Todo deprecate, The transition delay value for Huge Inputs.
export const TextInputHugePlaceholderTransitionDelay = '100ms'; // Todo deprecate, The transition delay placeholder value for Huge Inputs.
export const TextInputHugePlaceholderTransitionProperty = 'opacity'; // Todo deprecate, The transition property placeholder value for Huge Inputs.
export const TextInputHugePlaceholderOpacity = '0'; // Todo deprecate, The placeholder opacity value for Huge Inputs.
export const TextInputHugeActivePlaceholderOpacity = '1'; // Todo deprecate, The placeholder opacity value for Huge Inputs.
export const TextInputHugeLabelTop = '64rem / 3'; // Todo deprecate, The top value for Huge Input labels. This adjusts how far the label is from the top of the container.
export const TextInputHugeActivePaddingTop = '64rem / 4'; // Todo deprecate, The padding top value of active Huge Inputs.
export const InputContainerMargin = '0 0 32rem 0'; // The value for padding applied to fieldset elements.
export const InputContainerNarrowMaxWidth = '6.5rem'; // The value used for the maximum width of an icon container using the icon container narrow modifier.
export const InputContainerHugeMaxWidth = '37.5rem'; // The max-width setting for Huge Inputs.
export const InputMaxWidth = '27.5rem'; // The value used as a maximum width for Input containers.
export const InputMaxWidthFull = '100rem'; // The value used for the maximum width of an Input container using the .sprk-b-InputContainer--full modifier.
export const InputHugeErrorFocusLabelColor = '#1c1b1a'; // The label color value of Huge Inputs when they have an error.
export const InputHugeCompleteLabelColor = '#1c1b1a'; // The label color when the Huge Input has a value and is not focused.
export const InputHugeFontSize = '1.25rem'; // The font size for Huge Inputs.
export const InputHugeLabelFontSize = '0.8125rem'; // The label font size for Huge Inputs.
export const InputHugeLabelTop = '64rem / 3'; // The top value for Huge Input labels. This adjusts how far the label is from the top of the container.
export const InputHugeLabelActiveTop = '10rem'; // The top value for Huge Input labels when they are active. This adjusts how far the label is from the top of the container.
export const InputHugeActivePaddingTop = '64rem / 4'; // The padding top value of active Huge Inputs.
export const InputHugeBorderWidth = '2rem'; // The border width for Huge Inputs.
export const InputHugePadding = '0 24rem'; // The padding for Huge Inputs.
export const InputHugeLabelPadding = '0 (24rem + 2rem)'; // The label padding for Huge Inputs.
export const InputHugeFocusBorderWidth = '2rem'; // The border width for Huge Inputs on focus.
export const InputHugeFocusLabelColor = '#603aa1'; // The label color value of Huge Inputs on focus.
export const InputHugeTransition = 'top 0.3s, color 0.3s, font-size 0.3s'; // The transition value for Huge Inputs.
export const InputHugeTransitionDelay = '0s'; // The transition delay value for Huge Inputs.
export const InputHugePlaceholderTransitionDelay = '100ms'; // The transition delay placeholder value for Huge Inputs.
export const InputHugePlaceholderTransitionProperty = 'opacity'; // The transition property placeholder value for Huge Inputs.
export const InputHugePlaceholderOpacity = '0'; // The placeholder opacity value for Huge Inputs.
export const InputHugePlaceholderActiveOpacity = '1'; // The placeholder opacity value for Huge Inputs.
export const InputHugeBoxShadow = '0 3px 10px 1px rgba(0, 0, 0, 0.08)'; // The box shadow value on Huge Inputs.
export const InputHugeIconOffsetY = '24rem'; // The margin-top value for icons in Huge Inputs.
export const InputHugeIconOffsetTop = '50rem'; // The top value for icons in Huge Inputs.
export const InputErrorTextColor = '#1c1b1a'; // Value for color on Inputs with errors.
export const InputErrorTextLineHeight = '1.4'; // The line height used for Input error text.
export const InputErrorTextMargin = '0 0 0 6px'; // The margin used for Input error text.
export const InputErrorTextFontFamily =
  "RocketSans, Helvetica, 'Helvetica Neue', Arial, sans-serif"; // The font family used for Input error text.
export const InputErrorTextFontSize = '0.8125rem'; // The font size used for Input error text.
export const InputErrorTextFontWeight = '400'; // The font weight used for Input error text.
export const InputHasIconRightTop = '38rem'; // The top offset of the icon displayed on the right side of Inputs.
export const InputHasIconRightLeft = '71rem'; // The top offset of the icon displayed on the left side of Inputs.
export const InputHasIconPaddingRight = '0rem'; // The padding of the icon displayed inside of Inputs.
export const InputTextIconZIndex = '1rem'; // The font size of text icons inside Inputs.
export const InputTextIconOffsetX = '16rem'; // The X offset of text icons inside Inputs.
export const InputTextIconOffsetY = '2rem'; // The XY offset of text icons inside Inputs.
export const InputTextIconFontSize = '1rem'; // The font size of text icons inside Inputs.
export const InputTextIconFontWeight = '700'; // The font weight of text icons inside Inputs.
export const InputIconOffsetX = '16rem'; // The X offset of icons inside Inputs.
export const InputIconOffsetY = '16rem'; // The Y offset of icons inside Inputs.
export const InputIconZIndex = '1rem'; // The z-index applied to the icon inside Inputs.
export const ErrorContainerMargin = '8rem 0 0 0'; // The margin for Input containers that have an error.
export const ErrorIconSize = '1.25rem'; // The Input error icon size.
export const MonetarySymbol = "'$'"; // The symbol used to denote currency for Monetary Inputs.
export const FieldsetPadding = '16rem 0 0 0'; // The value for padding applied to fieldset elements.
export const SelectInputHugePaddingRight = '45rem'; // The padding right for Huge Inputs.
export const SelectInputHugeIconMarginTop = '-((64rem - 16rem) / 2 + 16rem)'; // The margin-top value for icons in Huge Select Inputs.
export const SelectAppearance = 'none'; // The value for the appearance property for Selects.
export const SelectBackground = 'none'; // The background setting for Selects.
export const SelectFontFamily =
  "RocketSans, Helvetica, 'Helvetica Neue', Arial, sans-serif"; // The font family for Selects.
export const SelectFontSize = '1rem'; // The font size for Selects.
export const SelectFontWeight = '300'; // The font weight for Selects.
export const SelectLineHeight = '1.3'; // The line height setting for Selects.
export const SelectOutline = '0'; // The outline setting for Selects.
export const SelectColor = '#1c1b1a'; // The color setting for Selects.
export const SelectBorder = '2px solid #8d8d8c'; // The border setting for Selects.
export const SelectBorderRadius = '4rem'; // The border radius setting for Selects.
export const SelectBoxShadow = 'none'; // The box shadow setting for Selects.
export const SelectPadding = '12px 45px 12px 13px'; // The padding setting for Selects.
export const SelectFocusBorderColor = '#603aa1'; // The border color on Selects when focused.
export const SelectErrorBorderColor = '#e50158'; // The border color on Selects when there is an error.
export const SelectDisabledBorderColor = '#8d8d8c'; // The border color on disabled Selects.
export const SelectDisabledColor = '#8d8d8c'; // The color on disabled Selects.
export const SelectMozFocusringColor = 'transparent'; // The value for the Firefox specific -moz-focusring color setting.
export const SelectMozFocusringTextShadow = '0 0 0 #1c1b1a'; // The value for the Firefox specific -moz-focusring text-shadow setting.
export const SelectDisabledBackgroundColor = '#a4a4a3'; // The background color on disabled Selects.
export const SelectArrowOffsetY = '-31rem'; // The value for margin-top on the icon in Selects.
export const SelectArrowOffsetX = '19rem'; // The value for margin-right on the icon in Selects.
export const TextareaMinHeight = '125rem'; // The minimum height of Textarea.
export const TextareaMargin = '0rem'; // The margin surrounding Textarea.
export const TextareaPadding = '16rem'; // The padding insdie Textarea.
export const HelperColor = '#605f5e'; // The color of the helper text for Inputs.
export const HelperLineHeight = '1.3'; // The line height of the helper text for Inputs.
export const HelperMargin = '8rem 0 0 0'; // The margin of the helper text for Inputs.
export const HelperFontSize = '0.8125rem'; // The font size of the helper text for Inputs
export const HelperFontWeight = '300'; // The font weight of the helper text for Inputs
export const HelperFontFamily =
  "RocketSans, Helvetica, 'Helvetica Neue', Arial, sans-serif"; // The font family of the helper text for Inputs
export const PlaceholderColor = '#8d8d8c'; // The color of the placeholder for Inputs
export const PlaceholderFontSize = '1rem'; // The font size of the placeholder for Inputs
export const PlaceholderFontWeight = '300'; // The font weight of the placeholder for Inputs
export const PlaceholderFontFamily =
  "RocketSans, Helvetica, 'Helvetica Neue', Arial, sans-serif"; // The font family of the placeholder for Inputs
export const SelectionContainerMargin = '0 8rem 0 0'; // The margin of the selection container for Inputs.
export const SelectionContainerLabelFontWeight = '300'; // The font weight of the label in the selection container for Inputs.
export const SelectionContainerInputHeight = 'auto'; // The height of Input inside the selection container.
export const SelectionContainerInputWidth = 'auto'; // The width of Input inside the selection container.
export const SelectionContainerInputMargin = '0 8rem 0 0'; // The margin of the Input inside the selection container.
export const DatePickerMaxWidth = '20rem'; // The maximum width of the Date Picker popup.
export const DatePickerBorderRadius = '4rem'; // The border radius applied to the Date Picker popup.
export const DatePickerButtonSize = '2.25rem'; // The size of the buttons used internally by the Date Picker popup.
export const DatePickerColumnAdjustmentX = '0.25rem'; // The offset applied to columns used internally by the Date Picker.
export const DatePickerBoxShadow = '0 4px 16px rgba(51, 51, 51, 0.1)'; // The box shadow of the Date Picker.
export const DatePickerFontFamily =
  "RocketSans, Helvetica, 'Helvetica Neue', Arial, sans-serif"; // The font family in the Date Picker popup.
export const DatePickerFontSize = '1rem'; // The font size of the Date Picker popup.
export const DatePickerFontWeight = '300'; // The font weight of the Date Picker popup.
export const DatePickerDayInteractColor = '#603aa1'; // Color used internally by Date Picker to highlight elements.
export const DatePickerDayPadding = '6rem'; // The padding around the day in the Date Picker popup.
export const DatePickerDayMargin = '0 2px'; // The margin around the day in the Date Picker popup.
export const DatePickerDayColor = '#ffffff'; // The color of the day in the Date Picker popup.
export const DatePickerDayHoverColor = '#1c1b1a'; // The color of the day in the Date Picker popup on hover.
export const DatePickerDayEdgeDayColor = '#8d8d8c'; // The color of days in the Date Picker popup that are in the next month or disabled.
export const DatePickerMonthYearFontSize = '1.25rem'; // The font size of the month and year in the Date Picker popup.
export const DatePickerArrowColor = '#1c1b1a'; // The color of the prev/next arrows in the Date Picker popup.
export const DatePickerModalMargin = '16rem 0 0 0'; // The margin applied to the Date Picker popup.
export const DatePickerModalMarginWide = '2rem'; // The margin applied to the Date Picker popup on wide viewports.
export const DatePickerModalZIndex = '2000rem'; // The z-index applied to the Date Picker popup.
export const DatePickerYearsModalMaxHeight = '500rem'; // The value for max-height applied to the Date Picker popup.
export const DatePickerSelectedDayFontWeight = '500'; // Font weight used by the currently selected day in the Date Picker popup.
export const DatePickerBackground = '#ffffff'; // The value for background in the Date Picker.
export const DatePickerPadding = '8rem'; // The value for padding in the Date Picker.
export const DatePickerPaddingWide = '16rem'; // The value for padding in the Date Picker on wide viewports.
export const DatePickerHeaderBorder = '1px solid #f7f7f7'; // The border setting for the header in the Date Picker.
export const DatePickerHeaderPadding = '0 0 8rem 0'; // The padding setting for the header in the Date Picker.
export const DatePickerHeaderFontWeight = '700'; // The font weight for the header in the Date Picker.
export const DatePickerHeaderFontSize = '1rem'; // The font size for the header in the Date Picker.
export const DatePickerColHeaderPadding = '10rem'; // The padding around the month header in the Date Picker popup.
export const LabelPadding = '0rem'; // The padding applied to Input labels.
export const LabelFontSize = '0.875rem'; // The font size applied to Input labels.
export const LabelFontWeight = '400'; // The font weight applied to Input labels.s.
export const LabelFontFamily =
  "RocketSans, Helvetica, 'Helvetica Neue', Arial, sans-serif"; // The font family applied to Input labels.
export const LabelLineHeight = '1rem'; // The line height applied to Input labels
export const LabelMargin = '0 0 8rem 0'; // The margin applied to Input labels.
export const LabelDisabledColor = '#8d8d8c'; // The color of the disabled Input labels.
export const VisibilityControlLabelFontSize = '0.875rem'; // The font size used for visibility controls.
export const VisibilityControlMargin = '6px 0 0 0'; // The margin surrounding visibility controls (Ex. 'Show SSN').
export const RadioInputOuterCircleHoverBorder = '2px solid #605f5e'; // The border of the outer circle in the radio input on hover.
export const RadioInputOuterCircleFocusBorder = '2px solid #603aa1'; // The border of the outer circle in the radio input on focus.
export const RadioInputOuterCircleFocusBorderDisabled = '2px solid #8d8d8c'; // The border of the outer circle in the disabled radio input on focus.
export const RadioInputOuterCircleBorderHoverDisabled = '2px solid #8d8d8c'; // The border of the outer circle in the disabled radio input on hover.
export const RadioInputOuterCircleBorderChecked = '2px solid #603aa1'; // The border of the outer circle in the radio input when checked.
export const RadioInputOuterCircleBorder = '2px solid #8d8d8c'; // The border of the outer circle in the radio input.
export const RadioInputOuterCircleWidth = '1rem'; // The width of the outer circle in the radio input.
export const RadioInputOuterCircleHeight = '1rem'; // The height of the outer circle in the radio input.
export const RadioInputOuterCircleTop = '0rem'; // The top value of the outer circle in the radio input.
export const RadioInputOuterCircleLeft = '-1.375rem'; // The left value of the outer circle in the radio input.
export const RadioInputInnerCircleWidth = '0.5rem'; // The width of the inner circle in the radio input.
export const RadioInputInnerCircleBackgroundColor = '#603aa1'; // The background color of the inner circle in the radio input.
export const RadioInputInnerCircleHeight = '0.5rem'; // The height of the inner circle in the radio input.
export const RadioInputInnerCircleTop = '0.25rem'; // The top value of the inner circle in the radio input.
export const RadioInputInnerCircleLeft = '-1.125rem'; // The left value of the inner circle in the radio input.
export const RadioInputOpacity = '0rem'; // The opacity value for the radio input.
export const RadioInputTransition = 'all 0.2s ease-in-out'; // The transition for the radio input.
export const RadioInputBorderRadius = '50rem'; // The border radius of the circle in the radio input.
export const RadioInputCursorHoverDisabled = 'default'; // The cursor style of the disabled radio on hover.
export const RadioInputHugeMaxWidth = '31.25rem'; // The max-width of the huge radio input.
export const RadioInputHugeTransition = 'all 0.2s ease-in-out'; // The transition for the huge radio input.
export const RadioInputHugeLabelBorder = '2px solid #8d8d8c'; // The border for the huge radio input label.
export const RadioInputHugeLabelBorderRadius = '4rem'; // The border-radius for the huge radio input label.
export const RadioInputHugeLabelPadding = '1.25rem 1rem 1.25rem 3.4375rem'; // The padding for the huge radio input label.
export const RadioInputHugeLabelFlexBasis = '100rem'; // he flex-basis for the huge radio input label.
export const RadioInputHugeLabelLineHeight = '1rem'; // The line-height for the huge radio input label.
export const RadioInputHugeLabelHoverBorderColor = '#1c1b1a'; // The border color of the huge radio input label on hover.
export const RadioInputHugeLabelHoverBoxShadow =
  '0 3px 10px 1px rgba(0, 0, 0, 0.08)'; // The box shadow of the huge radio input label on hover.
export const RadioInputHugeFocusedLabelBorder = '#f7f7f7'; // The border color of the huge radio input label when it has focus.
export const RadioInputHugeCheckedLabelBorder = '#603aa1'; // The border color of the huge radio input label when it is selected.
export const RadioInputHugeCheckedHoverLabelBorder = '6px 0 0 0'; // The margin surrounding visibility controls (Ex. 'Show SSN').
export const RadioInputHugeCheckedHoverLabelBorderColor = '#1c1b1a'; // The border color of the huge radio input label when it is selected and hovered.
export const RadioInputHugeCheckedHoverOuterCircleBorderColor = '#603aa1'; // The border color of the outer circle of the huge when it is selected and hovered.
export const RadioInputHugeInnerCircleHeight = '1rem'; // The height of the inner circle of the huge radio input.
export const RadioInputHugeInnerCircleWidth = '1rem'; // The width of the inner circle of the huge radio input.
export const RadioInputHugeInnerCircleLeft = '1.25rem'; // The left value of the inner circle of the huge radio input.
export const RadioInputHugeInnerCircleTop = '1.25rem'; // The top value of the inner circle of the huge radio input.
export const RadioInputHugeFocusedOuterCircleBorderBackgroundColor = '#f7f7f7'; // The background color of the outer circle of the huge radio input when it has focus.
export const RadioInputHugeOuterCircleBorderHoverBackgroundColor = '#f7f7f7'; // The background color of the outer circle of the huge radio input on hover.
export const RadioInputHugeOuterCircleBorderHoverDisabled = '2px solid #8d8d8c'; // The border of the outer circle of the huge radio input when it is disabled and hovered.
export const RadioInputHugeOuterCircleWidth = '1.5rem'; // The width of the outer circle of the huge radio input.
export const RadioInputHugeOuterCircleHeight = '1.5rem'; // The height of the outer circle of the huge radio input.
export const RadioInputHugeOuterCircleTop = '1rem'; // The top value of the outer circle of the huge radio input.
export const RadioInputHugeOuterCircleLeft = '1rem'; // The left value of the outer circle of the huge radio input.
export const RadioInputHugeOuterCircleBoxShadowHoverDisabled = 'none'; // The box shadow of the outer circle of the huge radio input when it is disabled and hovered.
export const RadioInputHugeDisabledBackgroundColor = '#a4a4a3'; // The background color of the huge radio input when it is disabled.
export const CheckboxInputOpacity = '0'; // The opacity of the native control checkbox.
export const CheckboxTransition = 'all 0.2s ease-in-out'; // The transition for the checkbox when the input is checked or unchecked.
export const CheckboxHugeContainerTransition = 'all 0.2s ease-in-out'; // The transition of the huge checkbox input.
export const CheckboxHugeContainerBorder = '2px solid #8d8d8c'; // The border settings of the huge checkbox input.
export const CheckboxHugeContainerBorderRadius = '4rem'; // The border-radius of the huge checkbox input.
export const CheckboxHugeContainerPadding = '20px 16rem 20px 55px'; // The padding of the huge checkbox input.
export const CheckboxHugeContainerFlexBasis = '100rem'; // The flex-basis of the huge checkbox input.
export const CheckboxHugeContainerLineHeight = '1rem'; // The line height of the huge checkbox input.
export const CheckboxHugeContainerHoverBorderColor = '#1c1b1a'; // The border color of the huge checkbox input when hovered.
export const CheckboxHugeContainerHoverBoxShadow =
  '0 3px 10px 1px rgba(0, 0, 0, 0.08)'; // The box shadow of the huge checkbox input when hovered.
export const CheckboxHugeContainerDisabledBorderColor = '#8d8d8c'; // The border color of the huge checkbox input when disabled.
export const CheckboxHugeContainerDisabledBoxShadow = 'none'; // The box shadow of the huge checkbox input when disabled.
export const CheckboxHugeContainerDisabledBackground = '#a4a4a3'; // The background of the huge checkbox input when disabled.
export const CheckboxHugeContainerFocusBorderColor = '#603aa1'; // The border color of the huge checkbox input when focused.
export const CheckboxHugeContainerFocusHoverBorderColor = '#1c1b1a'; // The border color of the huge checkbox input when focused and hovered.
export const CheckboxHugeContainerCheckedBorderColor = '#603aa1'; // The border color of the huge checkbox input when checked.
export const CheckboxHugeContainerFocusCheckedBorderColor = '#1c1b1a'; // The border color of the huge checkbox input when checked and focused.
export const CheckboxHugeContainerCheckedHoverBorderColor = '#1c1b1a'; // The border color of the huge checkbox input when checked and hovered.
export const CheckboxInputHugeMaxWidth = '500rem'; // The max-width of the huge checkbox input.
export const CheckboxCustomInputHeight = '1rem'; // The height of the custom checkbox input.
export const CheckboxCustomInputWidth = '1rem'; // The width of the custom checkbox input.
export const CheckboxCustomInputBorder = '2px solid #8d8d8c'; // The border of the custom checkbox input.
export const CheckboxCustomInputBorderFocus = '2px solid #603aa1'; // The border of the custom checkbox input when focused.
export const CheckboxCustomInputBorderFocusChecked = '2px solid #1c1b1a'; // The border of the custom checkbox input when it is checked and focused.
export const CheckboxCustomInputBackgroundColorFocus = '#f7f7f7'; // The background of the custom checkbox input when focused.
export const CheckboxCustomInputBackgroundColorHover = '#f7f7f7'; // The background color of the custom checkbox input when hovered.
export const CheckboxCustomInputBackgroundColorChecked = '#603aa1'; // The background color of the custom checkbox input when checked.
export const CheckboxCustomInputBackgroundColorDisabled = 'transparent'; // The background color of the custom checkbox input when disabled.
export const CheckboxCustomInputBorderColorChecked = '#603aa1'; // The border color of the custom checkbox input when checked.
export const CheckboxCustomInputBorderColorHover = '#605f5e'; // The border color of the custom checkbox input when hovered.
export const CheckboxCustomInputBorderColorDisabled = '#8d8d8c'; // The border color of the custom checkbox input when disabled.
export const CheckboxCustomInputCursorDisabled = 'default'; // The cursor for the custom checkbox input when disabled..
export const CheckboxCustomInputBorderRadius = '3rem'; // The border radius of the custom checkbox input.
export const CheckboxCustomInputTop = '0rem'; // The top positioning of the custom checkbox input.
export const CheckboxCustomInputLeft = '-22rem'; // The left positioning of the custom checkbox input.
export const CheckboxHugeCustomInputHeight = '1.5rem'; // The height of the custom checkbox element of the huge checkbox input.
export const CheckboxHugeCustomInputWidth = '1.5rem'; // The width of the custom checkbox element of the huge checkbox input.
export const CheckboxHugeCustomInputHoverBorderColor = '#1c1b1a'; // The border color of the custom checkbox element of the huge checkbox input when hovered.
export const CheckboxHugeCustomInputTop = '16rem'; // The top value of the custom checkbox element of the huge checkbox input..
export const CheckboxHugeCustomInputLeft = '16rem'; // The left value of the custom checkbox element of the huge checkbox input..
export const CheckboxHugeCustomInputDisabledBorderColor = '#8d8d8c'; // The border color of the custom checkbox element of the huge checkbox input when disabled.
export const CheckboxHugeCustomInputCheckboxElementCheckedBorderColor =
  '#603aa1'; // The border color of the custom checkbox element of the huge checkbox input when checked.
export const CheckboxHugeCheckmarkIconHeight = '0.5rem'; // The height of the huge checkmark icon.
export const CheckboxHugeCheckmarkIconWidth = '0.75rem'; // The width of the huge checkmark icon.
export const CheckboxHugeCheckmarkIconTop = '22rem'; // The top positioning of the huge checkmark icon.
export const CheckboxHugeCheckmarkIconLeft = '22rem'; // The left positioning of the huge checkmark icon.
export const CheckboxCheckmarkIconHeight = '0.45rem'; // The height of the checkmark icon.
export const CheckboxCheckmarkIconWidth = '0.65rem'; // The width of the checkmark icon.
export const CheckboxCheckmarkIconTop = '3rem'; // The top positioning of the checkmark icon.
export const CheckboxCheckmarkIconLeft = '-19rem'; // The left positioning of the checkmark icon.
export const CheckboxCheckmarkBorderLeft = '2px solid #ffffff'; // The border settings to create the bottom portion of the checkmark.
export const CheckboxCheckmarkBorderBottom = '2px solid #ffffff'; // The border settings to create the right portion of the checkmark.
export const CheckboxCheckmarkTransform = 'rotate(-45deg)'; // The rotation setting to create the checkmark.
export const LayerHeightXs = '1rem'; // The extra small z-index value setting.
export const LayerHeightS = '1000rem'; // The small z-index value setting.
export const LayerHeightM = '2000rem'; // The medium z-index value setting.
export const LayerHeightL = '3000rem'; // The large z-index value setting.
export const LayerHeightXl = '9999rem'; // The extra large z-index value setting.
export const LinkTransition = '0.3s'; // The transition timing for hover, active and focus styles on Links.
export const LinkColor = '#603aa1'; // The default color on Links.
export const LinkUnderlineColor = '#603aa1'; // The color of the underline on Links.
export const LinkUnderlineWidth = '0.125rem'; // The width of the underline on Links.
export const LinkUnderlineVisitedColor = '#8d8d8c'; // The color of the underline on visited Links.
export const LinkTextDecoration = 'none'; // The text decoration on Links.
export const LinkFontWeight = '500'; // The font weight on Links.
export const LinkBorderBottomStyle = 'solid'; // The border style of the underline on Links.
export const LinkBorderBottom = '0.125rem solid #8d8d8c'; // The style of the underline on Links.
export const LinkHoverColor = '#2e1166'; // The color of Links on hover.
export const LinkHoverBorderBottom = '0.125rem solid #2e1166'; // The underline style of Links on hover.
export const LinkVisitedBorderBottom = '0.125rem solid #8d8d8c'; // The style of the underline on visited Links.
export const LinkSimpleColor = '#1c1b1a'; // The color value of Simple Links.
export const LinkSimpleHoverColor = '#1c1b1a'; // The color of Simple Links on hover
export const LinkSimpleHoverUnderlineColor = '#c8102e'; // The underline color value of Simple Links on hover.
export const LinkSimpleHoverUnderlineWidth = '0.125rem'; // The underline width value of Simple Links on hover.
export const LinkSimpleHoverBorderBottom = '0.125rem solid #c8102e'; // The underline style of visited Simple Links on hover.
export const LinkSimpleUnderlineColor = 'transparent'; // The underline color value of Simple Links.
export const LinkSimpleUnderlineWidth = '0.125rem'; // The underline width value of Simple Links.
export const LinkSimpleFontWeight = '300'; // The font weight of Simple Links.
export const LinkSimpleBorderBottom = '0.125rem solid transparent'; // The underline style of Simple Links.
export const LinkSimpleVisitedBorderBottom = '0.125rem solid transparent'; // The underline style of visited Simple Links.
export const LinkLightColor = '#ffffff'; // The color value of Light Links.
export const LinkLightHoverFontWeight = '500'; // The font weight of Light Links on hover.
export const LinkLightHoverColor = '#ffffff'; // The color of Light Links on hover
export const LinkLightHoverUnderlineColor = '#ffffff'; // The underline color value of Light Links on hover.
export const LinkLightHoverUnderlineWidth = '0.125rem'; // The underline width value of Light Links on hover.
export const LinkLightHoverAfterLeft = '0rem'; // The left position of the after element of Light Links on hover.
export const LinkLightHoverAfterWidth = '100rem'; // The width of the after element of Light Links on hover.
export const LinkLightHoverBorderBottom = '0.125rem solid #ffffff'; // The underline style of Light Links on hover.
export const LinkLightUnderlineColor = 'transparent'; // The underline color value of Light Links.
export const LinkLightUnderlineWidth = '0.125rem'; // The underline width value of Light Links.
export const LinkLightFontWeight = '300'; // The font weight of Light Links.
export const LinkLightBorderBottom = '0.125rem solid transparent'; // The underline style of Light Links.
export const LinkLightVisitedBorderBottom = '0.125rem solid transparent'; // The underline style of visited Light Links.
export const LinkPlainBorder = 'none'; // The border settings for Plain Links.
export const LinkPlainVisitedBorder = 'none'; // The border settings for Plain Links in the visited state.
export const LinkHasIconColorIcon = '#603aa1'; // The color of icons in Links containing icons.
export const LinkHasIconFill = '#603aa1'; // The fill color for icons contained in Links.
export const LinkHasIconStroke = '#603aa1'; // The stroke color for icons contained in Links.
export const LinkHasIconUnderlineColor = 'transparent'; // The underline color of Links containing icons.
export const LinkHasIconUnderlineWidth = '0rem'; // The underline width of Links containing icons.
export const LinkHasIconFontWeight = '500'; // The font weight of Links containing icons.
export const LinkHasIconBorderBottom = '0rem solid transparent'; // The border settings for Links with icons.
export const LinkHasIconHoverColorText = '#2e1166'; // The color value for Links with icons in the hover state.
export const LinkHasIconHoverFill = '#2e1166'; // The fill color for icons contained in Links on hover.
export const LinkHasIconHoverStroke = '#2e1166'; // The stroke color for icons contained in Links on hover.
export const LinkHasIconHoverBorderBottom = '0rem solid transparent'; // The border settings for Links with icons in the hover state.
export const LinkDisabledColor = '#8d8d8c'; // The disabled Link
export const LinkDisabledBorderBottomColor = '#8d8d8c'; // The Disabled Link border-bottom
export const LinkDisabledUnderlineWidth = '0rem'; // The underline width for the disabled Link.
export const LinkDisabledBorderBottom = '0rem solid #8d8d8c'; // The underline settings for the disabled Link..
export const LinkDisabledHoverColor = '#8d8d8c'; // The disabled Link color on hover.
export const LinkDisabledHoverBorderBottomColor = '#8d8d8c'; // The disabled Link hover border-bottom
export const LinkDisabledHoverBorderBottom = '0rem solid #8d8d8c'; // The underline settings for the disabled Link..
export const ListMarginLeft = '16rem'; // The default margin left indentation on Lists.
export const ListIndentedMarginLeft = '32rem'; // The default margin left indentation on Lists.
export const MastheadMenuIconWidth = '32rem'; // The width of the menu icon on narrow viewports in the Masthead.
export const MastheadMenuIconHeight = '32rem'; // The height of the menu icon on narrow viewports in the Masthead.
export const MastheadBgColor = '#ffffff'; // The background color of the Masthead.
export const MastheadContentPadding = '8rem'; // The padding around the content section in the Masthead on wide viewports.
export const MastheadContentPaddingWide = '16rem'; // The padding of the Masthead content, menu, and branding sections.
export const MastheadContentItemPaddingTop = '8rem'; // The padding top around the content items in the content section of the Masthead.
export const MastheadContentItemPaddingTopWide = '8rem'; // The padding top around the content items in the content section of the Masthead in wide viewports..
export const MastheadContentItemPaddingBottom = '8rem'; // The padding bottom around the content items in the content section of the Masthead.
export const MastheadContentItemPaddingBottomWide = '16rem'; // The padding bottom around the content items in the content section of the Masthead in wide viewports.
export const MastheadContentItemPaddingRight = '8rem'; // The padding right around the content items in the content section of the Masthead.
export const MastheadContentItemPaddingRightWide = '16rem'; // The padding right around the content items in the content section of the Masthead in wide viewports.
export const MastheadContentItemPaddingLeft = '8rem'; // The padding left around the content items in the content section of the Masthead
export const MastheadContentItemPaddingLeftWide = '16rem'; // The padding left around the content items in the content section of the Masthead in wide viewports.
export const MastheadLinkColor = '#1c1b1a'; // The color of Masthead links.
export const MastheadLinkVisitedColor = '#1c1b1a'; // The visited state color of Masthead links.
export const MastheadLinkIconHoverColor = '#603aa1'; // The color of Masthead Icon Links on hover.
export const MastheadLinkFontWeight = '500'; // The font weight for Masthead links.
export const MastheadBorderBottomSize = '1rem'; // The size of the bottom border on the Masthead.
export const MastheadBorderBottomStyle = 'solid'; // The bottom border style on the Masthead.
export const MastheadBorderBottom = '1rem solid #f7f7f7'; // The bottom border on the Masthead.
export const MastheadBorderBottomWide = '0rem'; // The bottom border on the Masthead on wide viewports.
export const MastheadSiteLinksBorderRight = '2px solid #bababa'; // The right border on the site links in the Masthead.
export const MastheadBreakpoint = '54rem'; // The point at which the Masthead navigation switches from narrow viewport style to large viewport style.
export const MastheadColumnWidth = '89rem'; // The maximum width of the Masthead.
export const MastheadLogoMaxWidth = '192rem'; // The maximum width of the logo in the Masthead.
export const MastheadLogoMinWidth = '174rem'; // The minimum width of the logo in the Masthead.
export const MastheadShadow = 'none'; // The box shadow of the Masthead.
export const MastheadShadowWide = 'none'; // The box shadow of the Masthead in wide viewports.
export const MastheadShadowScroll = '0 0 40px rgba(0, 0, 0, 0.1)'; // The Masthead shadow that gets applied when the page is scrolled.
export const MastheadSelectorBorder = '2px solid #bababa'; // The border of the selector in the Masthead with Extended Navigation.
export const MastheadSelectorPadding = '8rem'; // The padding of the selector in the Masthead with Extended Navigation.
export const MastheadSelectorDropdownPadding = '0rem'; // The padding of the selector dropdown in the Masthead with Extended Navigation.
export const MastheadSelectorMinWidth = '17rem'; // The minimum width of the selector in the Masthead with Extended Navigation.
export const MastheadSelectorFontColor = '#1c1b1a'; // The font color of the selector in the Masthead with Extended Navigation.
export const MastheadSelectorBgColor = '#ffffff'; // The background color of the selector in the Masthead with Extended Navigation.
export const MastheadSelectorBorderColorMaskOpen = '#ffffff'; // The bottom color that gets applied to the selector dropdown when open in the Masthead with Extended Navigation.
export const MastheadSelectorBorderRadius = '5rem'; // The border radius of the selector in the Masthead with Extended Navigation.
export const MastheadSelectorFontWeight = '300'; // The font weight of the selector in the Masthead with Extended Navigation.
export const MastheadSelectorDropdownBorderBottomMaskOpen = '2px solid #f7f7f7'; // The bottom border that gets applied to the selector dropdown when open in the Masthead with Extended Navigation.
export const MastheadSelectorDropdownBoxShadowMaskOpen =
  '0 5px 10px rgba(0, 0, 0, 0.1)'; // The box shadow that gets applied to the selector dropdown when open in the Masthead with Extended Navigation.
export const MastheadNarrowHeight = '81rem'; // This is the height of the Masthead on narrow viewports and is used to calculate how far from the top the narrow navigation items should be displayed.
export const MastheadMaskColor = '#000000'; // The color of the mask that gets applied when the Masthead selector dropdown is open on narrow screens.
export const MastheadTransition = 'all 0.3s ease-in'; // The transition applied to the Masthead.
export const MastheadTranslateY = 'translateY(-100%)'; // The transform length that gets applied when the Masthead scrolls out of view on narrow screens.
export const MastheadAccordionActiveLeftBorder = '3px solid #c8102e'; // The left border of the active item in the navigation links when masthead is on narrow viewports.
export const MastheadAccordionActiveBackgroundColor = '#f7f7f7'; // The background color of the active item in the navigation links when masthead is on narrow viewports.
export const MastheadAccordionActiveHeadingFontWeight = '400'; // The font weight of the active item heading in the navigation links when masthead is on narrow viewports.
export const MastheadAccordionActiveFontColor = '#1c1b1a'; // The font color of the active item in the navigation links when masthead is on narrow viewports.
export const MastheadAccordionActiveHeadingColor = '#1c1b1a'; // The font color of the active item in the navigation links when masthead is on narrow viewports.
export const MastheadAccordionFontColor = '#1c1b1a'; // The font color of the navigation links when masthead is on narrow viewports.
export const MastheadAccordionItemOpenLineBackgroundColor = '#bababa'; // The color of the line on open items in the navigation links when masthead is on narrow viewports.
export const MastheadAccordionItemOpenLineHeight = '2rem'; // The height of the line on open navigation links when masthead is on narrow viewports.
export const MastheadAccordionItemPadding = '16rem'; // The padding of the items in the navigation links when masthead is on narrow viewports.
export const MastheadAccordionItemTextAlign = 'left'; // The text alignment of the items in the navigation links when masthead is on narrow viewports.
export const MastheadAccordionItemBorder = '0'; // The border of the items in the navigation links when masthead is on narrow viewports.
export const MastheadAccordionItemBackground = 'transparent'; // The background of the items in the navigation links when masthead is on narrow viewports.
export const MastheadAccordionHeadingFontWeight = '400'; // The font weight of the heading in the navigation links when masthead is on narrow viewports..
export const MastheadAccordionHeadingColor = '#1c1b1a'; // The color of the heading in the navigation links when masthead is on narrow viewports.
export const MastheadAccordionDetailsFontWeight = '300'; // The font weight of the details in the navigation links when masthead is on narrow viewports.
export const MastheadAccordionDetailsFontColor = '#1c1b1a'; // The font color of the details in the navigation links when masthead is on narrow viewports.
export const MastheadSimpleLinkIconHoverColor = '#1c1b1a'; // The color of Simple Masthead Icon Links on hover.
export const BigNavColumnWidth = '64rem'; // The maximum width of the big navigation items in the navigation bar in the Masthead Extended.
export const BigNavBg = '#ffffff'; // The background color of the big navigation bar in the Masthead Extended.
export const BigNavLinkFontWeight = '400'; // The font weight of the big navigation link in the Masthead Extended.
export const BigNavLinkHoverBorderBottom = 'transparent'; // The border-bottom of the links in the big nav item when the big nav item is hovered in the Masthead Extended.
export const BigNavLinkPadding = '0rem'; // The padding of the big navigation links in the Masthead Extended.
export const BigNavActiveColor = '#c8102e'; // The underline color of the active big navigation item in the Masthead Extended.
export const BigNavItemActiveBorderBottom = '0.125rem solid #c8102e'; // The border bottom of the active big navigation items in the Masthead Extended.
export const BigNavItemOpenBorderBottom = '0.125rem solid #c8102e'; // The border bottom of open big navigation items in the Masthead Extended.
export const BigNavItemLineHeight = '53rem'; // The line height of the big navigation items in the Masthead Extended.
export const MediaGutterTiny = '4rem'; // The gutter of the tiny Media object.
export const MediaGutterSmall = '8rem'; // The gutter of the small Media object.
export const MediaGutter = '16rem'; // The gutter of the default (medium) Media object.
export const MediaGutterLarge = '32rem'; // The gutter of the large Media object.
export const MediaGutterHuge = '64rem'; // The gutter of the huge Media object.
export const MenuIconBgColor = '#ffffff'; // The background color of the menu icon.
export const MenuIconStrokeWidth = '2rem'; // The stroke width of the menu icon.
export const MenuIconStroke = '#1c1b1a'; // The stroke of the menu icon.
export const MenuIconTransition =
  'transform 0.3s ease-in-out, opacity 0.2s ease-in-out'; // The transition on the menu icon that turns the menu icon into an 'X'.
export const MenuIconLineOneTransformOrigin = '1rem'; // The transform origin of the 'X' state of the menu for the first menu line. Only needs to be changed if using a custom width and height.
export const MenuIconLineThreeTransformOrigin = '1rem'; // The transform origin of the 'X' state of the menu for the third menu line. Only needs to be changed if using a custom width and height.
export const ModalBreakpointSmall = '25rem'; // Determines how far down from the top of the page the Modal renders at the small breakpoint.
export const ModalBreakpointMedium = '37.5rem'; // Determines how far down from the top of the page the Modal renders at the medium breakpoint.
export const ModalMaskColor = '#222222'; // The color of the mask overlay that is shown behind the Modal.
export const ModalColor = '#ffffff'; // The background color of the Modal.
export const ModalMaxWidth = '43.75rem'; // The maximum width of the Modal.
export const ModalHeight = '70rem'; // The maximum height of the Modal.
export const ModalShadow = '0 4px 5px rgba(0, 0, 0, 0.6)'; // The box shadow on the Modal.
export const ModalBorderRadius = '8rem'; // The border radius on the Modal.
export const PagMaxWidth = '26rem'; // The maximum width of the Pagination component.
export const PagCurrentLinkFontWeight = '500'; // The font weight of the current pagination link in the Pagination component.
export const PagLinkColor = '#1c1b1a'; // The color of the pagination links in the Pagination component.
export const PagLinkFontWeight = '400'; // The font weight of the pagination links in the Pagination component.
export const PagLinkColorHover = '#1c1b1a'; // The color of the pagination links on hover in the Pagination component.
export const PagSelectionColor = '#603aa1'; // The accent color for selected pagination links in the Pagination component.
export const PagSelectionLinkColor = '#ffffff'; // The text color of the currently selected pagination link in the Pagination component.
export const PagSelectionLinkColorHover = '#ffffff'; // The text color of the currently selected pagination link on hover in the Pagination component.
export const PagCircleSize = '2rem'; // The width and height setting of the circle around the currently selected pagination link in the Pagination component.
export const PromoBackgroundColor = '#ffffff'; // The background color of the Promo component.
export const PromoBorder = '1px solid #a4a4a3'; // The border of the Promo component.
export const PromoMaxWidth = '42.5rem'; // The maximum width of the Promo component.
export const PromoBreakpoint = '42.5rem'; // The Promo component breakpoint at which large viewport styles begin.
export const PromoImageNarrowMaxHeight = '20rem'; // The maximum height of the image in the Promo component on narrow viewports.
export const PromoImageNarrowMaxWidth = '50rem'; // The maximum width of the image in the Promo component on narrow viewports.
export const PromoTitleFontColor = '#1c1b1a'; // The title font color of the Promo component.
export const PromoTitleFontWeight = 'bold'; // The title font weight of the Promo component.
export const PromoSubtitleFontColor = '#1c1b1a'; // The subtitle font color of the Promo component.
export const PromoSubtitleFontWeight = '500'; // The subtitle font weight of the Promo component.
export const SelectionBgColor = '#e7e2f2'; // Background color of any text when selected.
export const SelectionTextColor = '#1c1b1a'; // Text color of any text when selected.
export const PreOverflow = 'auto'; // Reset for the overflow property on pre elements.
export const BorderRadius = '5rem'; // Value used for border-radius across the system.
export const SpaceInsetXs = '4rem'; // Value for the extra small inset space.
export const SpaceInsetS = '8rem'; // Value for the small inset space.
export const SpaceInsetM = '16rem'; // Value for the medium inset space.
export const SpaceInsetL = '32rem'; // Value for the large inset space.
export const SpaceInsetXl = '64rem'; // Value for the extra large inset space.
export const SpaceInsetShortXs = '2rem'; // Value for the extra small inset short space.
export const SpaceInsetShortS = '4rem'; // Value for the small inset short space.
export const SpaceInsetShortM = '8rem'; // Value for the medium inset short space.
export const SpaceInsetShortL = '16rem'; // Value for the large inset short space.
export const SpaceInsetShortXl = '32rem'; // Value for the extra large inset short space.
export const SpaceInsetTallXs = '6rem'; // Value for the extra small inset tall space.
export const SpaceInsetTallS = '12rem'; // Value for the small inset tall space.
export const SpaceInsetTallM = '24rem'; // Value for the medium inset tall space.
export const SpaceInsetTallL = '48rem'; // Value for the large inset tall space.
export const SpaceInsetTallXl = '96rem'; // Value for the extra large inset tall space.
export const SpaceXs = '4rem'; // Value for the extra small space setting.
export const SpaceS = '8rem'; // Value for the small space setting.
export const SpaceM = '16rem'; // Value for the medium space setting.
export const SpaceL = '32rem'; // Value for the large space setting.
export const SpaceXl = '64rem'; // Value for the extra large space setting.
export const SpaceH = '64rem'; // Value for the huge space setting.
export const SpaceMiscA = '24rem'; // Value for the misc a space setting.
export const SpaceMiscB = '40rem'; // Value for the misc b space setting.
export const SpaceMiscC = '48rem'; // Value for the misc c space setting.
export const SpaceMiscD = '80rem'; // Value for the misc d large space setting.
export const SpaceStackXs = '0rem'; // Value for the extra small inset short space.
export const SpaceStackS = '0rem'; // Value for the small inset short space.
export const SpaceStackM = '0rem'; // Value for the medium inset short space.
export const SpaceStackL = '0rem'; // Value for the large inset short space.
export const SpaceStackXl = '0rem'; // Value for the extra large inset short space.
export const SpinnerSize = '1.2rem'; // The height and width of Spinners.
export const SpinnerSizeLarge = '3rem'; // The height and width of large Spinners.
export const SpinnerSpeed = '1s'; // The speed of the animation for Spinners.
export const SpinnerThickness = '0.18rem'; // The thickness of Spinners.
export const SpinnerColor = '#ffffff'; // The color of Spinners.
export const SpinnerColorDark = '#1c1b1a'; // The color of the dark Spinner.
export const SpinnerColorPrimary = '#c8102e'; // The color of the primary Spinner.
export const SpinnerColorSecondary = '#603aa1'; // The color of the secondary Spinner.
export const StackSpacingTiny = '4rem'; // The spacing of the tiny Stack object.
export const StackSpacingSmall = '8rem'; // The spacing of the small Stack object.
export const StackSpacingMedium = '16rem'; // The spacing of the medium Stack object.
export const StackSpacingLarge = '32rem'; // The spacing of the large Stack object.
export const StackSpacingHuge = '64rem'; // The spacing of the huge Stack object.
export const StackSpacingMiscA = '24rem'; // The spacing of the Misc A Stack object.
export const StackSpacingMiscB = '40rem'; // The spacing of the Misc B Stack object.
export const StackSpacingMiscC = '48rem'; // The spacing of the Misc C Stack object.
export const StackSpacingMiscD = '80rem'; // The spacing of the Misc D Stack object.
export const SplitBreakpointXxs = '20rem'; // The breakpoint for Stack objects that split at the extra extra small point.
export const SplitBreakpointXs = '30rem'; // The breakpoint for Stack objects that split at the extra small point.
export const SplitBreakpointS = '42.5rem'; // The breakpoint for Stack objects that split at the small point.
export const SplitBreakpointM = '55rem'; // The breakpoint for Stack objects that split at the medium point.
export const SplitBreakpointL = '67.5rem'; // The breakpoint for Stack objects that split at the large point.
export const SplitBreakpointXl = '80rem'; // The breakpoint for Stack objects that split at the extra large point.
export const StepperBg = 'transparent'; // The background color of the Stepper.
export const StepperBreakpoint = '80rem'; // The minimum width at which the Stepper switches between narrow and wide layouts.
export const StepperMaxWidth = '480rem'; // The maximum width of the Stepper.
export const StepperBarColor = '#8d8d8c'; // The color of the bar that connects the steps in the Stepper.
export const StepperBarWidth = '2rem'; // The width of the bar that connects the steps in the Stepper.
export const StepperBarLeftInset = '32rem'; // The left inset of the bar that connects the steps in the Stepper.
export const StepperDarkBarColor = '#ffffff'; // The color of the bar that connects the steps when the Stepper is on a dark background (sprk-c-Stepper--has-dark-bg).
export const StepperIconBorderWidth = '2rem'; // The border width of the Stepper icons.
export const StepperIconBorderColor = '#8d8d8c'; // The color of the border around the Stepper icon.
export const StepperIconBorderColorSelected = '#3c3174'; // The color of the step icon when the step is selected in the Stepper.
export const StepperIconBorderColorSelectedDarkBg = '#e7e2f2'; // The color of the step icon in front of a dark background when the step is selected in the Stepper.
export const StepperIconHeight = '16rem'; // The height of the step icon in the Stepper.
export const StepperIconWidth = '16rem'; // The width of the step icon in the Stepper.
export const StepperIconColor = '#ffffff'; // The color of the step icon in the Stepper.
export const StepperIconColorHover = '#8d8d8c'; // The color of the step icon in the Stepper when hovered.
export const StepperIconColorSelected = '#ffffff'; // The color of the Stepper step icon when the step is selected.
export const StepperIconTransition = '0.3s all ease-in-out'; // The transition of the Stepper step icon.
export const StepperIconZIndex = '1rem'; // The z-index of the Stepper step icon.
export const StepperIconBoxShadowSelectedSpread = '8rem'; // The spread value of the icon box shadow when the Stepper step is selected.
export const StepperIconBoxShadowSelected = '0 0 0 8rem #3c3174'; // The box shadow of the Stepper step icon when the icon is selected.
export const StepperIconBoxShadowSelectedDarkBg = '0 0 0 8rem #e7e2f2'; // The box shadow of the Stepper step icon on a dark background when the icon is selected.
export const StepperIconDiameter = '16rem + 2rem'; // The diameter of the step icon in the Stepper.
export const StepperIconRadius = '16rem + 2rem / 2'; // The radius of the step icon in the Stepper.
export const StepperIconLeft = '-((32rem + 16rem + 2rem / 2))'; // The left setting of the step icon in the Stepper.
export const StepperDarkIconBorderColor = '#ffffff'; // The color of the icon border when the Stepper is on a dark background (sprk-c-Stepper--has-dark-bg).
export const StepperDarkIconColor = '#3c3174'; // The color of the step icon when the Stepper has a dark background (sprk-c-Stepper--has-dark-bg).
export const StepperDarkIconColorSelected = '#3c3174'; // The color of the Stepper step icon when the step is selected and the Stepper has a dark background (sprk-c-Stepper--has-dark-bg).
export const StepperDarkIconColorHover = '#ffffff'; // The color of the step icon on hover when the Stepper has a dark background (sprk-c-Stepper--has-dark-bg).
export const StepperStepContentBg = 'transparent'; // The background color of the content in the Stepper step.
export const StepperStepContentBgSelected = 'transparent'; // The background color of the Stepper step content box when the step is selected.
export const StepperStepContentMarginLeft = '(32rem * 2) + 2rem'; // The margin-left of the content in the Stepper step.
export const StepperStepDescriptionBorderRadius = '5rem'; // The border radius of the Stepper step content box when it has a description.
export const StepperStepDescriptionBoxShadow =
  '0 3px 18px 1px rgba(0, 0, 0, 0.08)'; // The box shadow of the Stepper step content box when it has a description.
export const StepperStepDescriptionTopSpacing = '16rem'; // The spacing between the Stepper step heading and description.
export const StepperStepDescriptionBgSelected = '#ffffff'; // The background color of the Stepper step content box when it has a description and when the step is selected.
export const StepperStepHeadingFontWeight = '400'; // The font weight of the Stepper step heading.
export const StepperStepHeadingSize = '1.25rem'; // The font size of the Stepper step heading.
export const StepperStepHeadingColor = '#1c1b1a'; // The color of the Stepper step heading.
export const StepperStepHeadingColorSelected = '#1c1b1a'; // The color of the Stepper step heading when the step is selected.
export const StepperStepPadding = '24rem'; // The padding value for the Stepper step.
export const StepperDarkStepHeadingColor = '#ffffff'; // The color of the Stepper step heading when the Stepper is on a dark background (sprk-c-Stepper--has-dark-bg).
export const StepperDarkStepDescriptionSelected = '#1c1b1a'; // The text color of a selected Stepper step's content and header when it has a description. This applies to steppers with the sprk-c-Stepper--has-dark-bg class.
export const StepperSlideTiming = '0.3s'; // The timing setting for the slides of the Stepper.
export const StepperSliderTextFadeInTiming = '0.6s'; // The text fade in timing for the Stepper.
export const StepperSliderTextFadeInDelay = '0.2s'; // The text fade in delay for the Stepper.
export const TablePaddingSmall = '8rem'; // The small Table padding.
export const TablePaddingMedium = '16rem'; // The medium Table padding.
export const TablePaddingLarge = '32rem'; // The large Table padding.
export const TableCellAlignment = 'center'; // The Table cell alignment.
export const TableStripeColor = '#f7f7f7'; // The stripe color or the striped Table.
export const TableHighlightColor = '#c8102e'; // The highlight background color of the sprk-b-TableHighlight.
export const TableHighlightTextColor = '#ffffff'; // The highlight text color of the sprk-b-TableHighlight.
export const TableHeadingAlignment = 'center'; // The heading alignment of in Tables.
export const TableBorderWidth = '1rem'; // The border width on Tables.
export const TableBorderStyle = 'solid'; // The border style on Tables.
export const TableBorderColor = '#1c1b1a'; // The border color on Tables.
export const TableBorderCollapse = 'collapse'; // The border collapse setting on Tables.
export const TableRowBorderWidth = '1rem'; // The border width on Table rows.
export const TableRowBorderStyle = 'solid'; // The border style on Table rows.
export const TableRowBorderColor = '#f7f7f7'; // The border color on Table rows.
export const TableHeaderBackgroundColor = '#1c1b1a'; // The background color of the Table header.
export const TableHeaderFontColor = '#ffffff'; // The font color of the Table header.
export const TableHeaderFontSize = '1rem'; // The font size of the Table header.
export const TableHeaderFontWeight = '500'; // The font weight of the Table header.
export const TableHeaderBorderSpacing = '2rem'; // The width of the right border on the Table header.
export const TableHeaderBorderColor = '#ffffff'; // The color of the right border on the Table header.
export const TableEmptyHeadingBackgroundColor = '#ffffff'; // The background color of empty Table headers.
export const TableSecondaryHeaderBackgroundColor = '#1c1b1a'; // The background color of Secondary Table headers.
export const TableSecondaryHeaderFontColor = '#1c1b1a'; // The font color of Secondary Table headers.
export const TableSecondaryHeaderTextAlignment = 'left'; // The text alignment of Secondary Table headers.
export const TableSecondaryHeaderBorderSpacing = '0rem'; // The width of the right border on the Secondary Table header.
export const TableSecondaryHeaderBorderColor = '#ffffff'; // The color of the right border on the Secondary Table header.
export const TableSecondaryCellTextAlignment = 'left'; // The text alignment of Secondary Table cells.
export const TableGroupedHeaderBackgroundColor = '#1c1b1a'; // The background color of the header in the Grouped Columns Table variant.
export const TableGroupedHeaderFontSize = '0.8125rem'; // The font size of the header in the Grouped Columns Table variant.
export const TableGroupedHeaderFontWeight = 'normal'; // The font weight of the header in the Grouped Columns Table variant.
export const TableSecondaryRowCompRowSpacing = '0rem'; // The distance between the borders of adjacent cells in the Secondary Row Comparison Table (horizontal | vertical).
export const TableSecondaryRowCompBorderColor = '#f7f7f7'; // The color of the borders in the Secondary Row Comparison Table cells
export const TableSecondaryRowCompBorderWidth = '1rem'; // The width of the borders in the Secondary Row Comparison Table cells
export const TableSecondaryRowCompBorderStyle = 'solid'; // The style of the borders in the Secondary Row Comparison Table cells
export const TabNavigationBtnActiveColor = '#c8102e'; // The button tab text color of the currently active tab in Tabbed Navigation.
export const TabNavigationBtnActiveBorderBottom = '3px solid #c8102e'; // The button tab bottom border of the currently active tab in Tabbed Navigation.
export const TabNavigationBtnActiveBgColor = '#ffffff'; // The button tab background color of the currently active tab in Tabbed Navigation.
export const TabNavigationBtnColor = '#1c1b1a'; // The tab button text color in Tabbed Navigation.
export const TabNavigationBtnBgColor = '#f7f7f7'; // The tab button background color in Tabbed Navigation.
export const TabNavigationBtnBorderBottom = '3px solid #f7f7f7'; // The border on the bottom of the button tabs in Tabbed Navigation.
export const TabNavigationBtnHoverBorderBottom = '3px solid #603aa1'; // The border on the bottom of the button tabs on hover in Tabbed Navigation.
export const TabNavigationBtnHoverColor = '#603aa1'; // The button tab text color of the button tabs on hover in Tabbed Navigation.
export const TabNavigationBreakpoint = '46rem'; // The breakpoint at which the tabs go from stacked layout to side by side in Tabbed Navigation.
export const ToggleTriggerBorderTop = 'none'; // The top border style for Toggle Trigger.
export const ToggleTriggerBorderRight = 'none'; // The right border style for Toggle Trigger.
export const ToggleTriggerBorderBottom = '0rem solid transparent'; // The bottom border style for Toggle Trigger.
export const ToggleTriggerBorderLeft = 'none'; // The left border style for Toggle Trigger.
export const ToggleTriggerTextDecoration = 'none'; // The text decoration style Toggle Trigger.
export const ToggleTriggerTransition = '0.3s'; // The transition for Toggle Trigger.
export const ToggleTriggerHoverBorderBottom = '0rem solid transparent'; // The hover border bottom style for Toggle Trigger.
export const ToggleTriggerHoverColor = '#603aa1'; // The hover text color for Toggle Trigger.
export const ToggleTriggerBackgroundColor = 'transparent'; // The background color for Toggle Trigger.
export const ToggleTriggerPaddingTop = '0rem'; // The padding top for Toggle Trigger.
export const ToggleTriggerPaddingRight = '0rem'; // The padding right for Toggle Trigger.
export const ToggleTriggerPaddingBottom = '0rem'; // The padding bottom for Toggle Trigger.
export const ToggleTriggerPaddingLeft = '0rem'; // The padding left for Toggle Trigger.
export const ToggleTriggerTextAlign = 'left'; // The text alignment for Toggle Trigger.
export const ToggleTriggerFontSizeSmall = '0.8125rem'; // The font size for small Toggle Trigger.
export const ToggleTriggerFontWeightSmall = 'normal'; // The font weight for small Toggle Trigger.
export const ToggleIconHoverFill = '#603aa1'; // The hover fill color for Toggle icon.
export const ToggleTransitionTiming = '0.3s ease'; // The transition timing for the rotation of the icon when the Toggle is opened.
export const TooltipCaretOffset = '1rem'; // The space that the Tooltip's caret is offset from the edge.
export const TooltipCaretBackgroundColor = '#1c1b1a'; // The background color for the tooltip caret.
export const TooltipCaretWidth = '16rem'; // The width of the tooltip caret.
export const TooltipTriggerHoverOffset = '1rem'; // The surrounding hover area around the trigger when the Tooltip is visible.
export const TooltipTriggerBorder = 'none'; // The border for the tooltip trigger.
export const TooltipTriggerBackgroundColor = 'transparent'; // The background color for the tooltip trigger.
export const TooltipTriggerPadding = '0rem'; // The padding for the tooltip trigger.
export const TooltipTriggerTextAlign = 'left'; // The text align for the tooltip trigger.
export const TooltipBackgroundColor = '#1c1b1a'; // The background color for the tooltip.
export const TooltipTextAlign = 'left'; // The text align for the tooltip.
export const TooltipPadding = '8rem'; // The padding for the tooltip.
export const TooltipFontColor = '#ffffff'; // The font color for the tooltip.
export const TooltipFontWeight = '300'; // The font weight for the tooltip.
export const TooltipFontSize = '0.8125rem'; // The font size for the tooltip.
export const TooltipBorderRadius = '4rem'; // The border radius for the tooltip.
export const TooltipToggledIconBackgroundColor = '#603aa1'; // The background color for the tooltip icon while toggled.
export const TooltipZIndex = '1rem'; // The z-index of the tooltip.
export const TooltipMaxWidth = '328rem'; // The max-width of the tooltip. This is used as a fallback if the preferred width is invalid, e.g. for IE 11
export const TooltipPreferredWidth = 'max-content'; // The preferred width of the tooltip.
export const TooltipMinWidth = '60rem'; // The min-width of the tooltip.
export const TooltipTransition = 'all 200ms ease-out'; // The transition applied to the tooltip.
export const TooltipAnimationOffset = '0.5rem'; // The distance the tooltip should move during its animation.
export const TypographyBreakpoint = '54rem'; // The breakpoint used for typography.
export const Measure = '40rem'; // The max-width value for the .sprk-u-Measure class.
export const NarrowMeasure = '25rem'; // The max-width value for the narrow measure.
export const Webfonts = "''"; // Expects a Sass List containing one or more nested Sass Lists. The nested lists should each contain: A List of urls to download a font, the name of the font and the weight of the font.
export const UsingWebfonts = 'false'; // Boolean value for if the app is using webfonts.
export const PageTitleMarkColor = '#c8102e'; // The color of the Page Title mark.
export const PageTitleMarkWidth = '32rem'; // The width of the Page Title mark.
export const PageTitleMarkHeight = '5rem'; // The height of the Page Title mark.
export const PageTitleMarkHeightWideViewport = '6rem'; // The height of the mark on a large viewport (using $sprk-typography-breakpoint).
export const PageTitleMarkPadding = '0 0 24rem'; // Amount of padding between the mark and the text on the page title mark.
export const PageTitleMarkPaddingWideViewport = '0 0 16rem'; // Amount of padding between the mark and the text on a large viewport (using $sprk-typography-breakpoint).
export const FontFamilyDisplayOne =
  "RocketSans, Helvetica, 'Helvetica Neue', Arial, sans-serif"; // The font-family, including fallbacks of TypeDisplayOne.
export const FontFamilyDisplayTwo =
  "RocketSans, Helvetica, 'Helvetica Neue', Arial, sans-serif"; // The font-family, including fallbacks of TypeDisplayTwo.
export const FontFamilyDisplayThree =
  "RocketSans, Helvetica, 'Helvetica Neue', Arial, sans-serif"; // The font-family, including fallbacks of TypeDisplayThree.
export const FontFamilyDisplayFour =
  "RocketSans, Helvetica, 'Helvetica Neue', Arial, sans-serif"; // The font-family, including fallbacks of TypeDisplayFour.
export const FontFamilyDisplayFive =
  "RocketSans, Helvetica, 'Helvetica Neue', Arial, sans-serif"; // The font-family, including fallbacks of TypeDisplayFive.
export const FontFamilyDisplaySix =
  "RocketSans, Helvetica, 'Helvetica Neue', Arial, sans-serif"; // The font-family, including fallbacks of TypeDisplaySix.
export const FontFamilyDisplaySeven =
  "RocketSans, Helvetica, 'Helvetica Neue', Arial, sans-serif"; // The font-family, including fallbacks of TypeDisplaySeven.
export const FontFamilyBodyOne =
  "RocketSans, Helvetica, 'Helvetica Neue', Arial, sans-serif"; // The font-family, including fallbacks of TypeBodyOne.
export const FontFamilyBodyTwo =
  "RocketSans, Helvetica, 'Helvetica Neue', Arial, sans-serif"; // The font-family, including fallbacks of TypeBodyTwo.
export const FontFamilyBodyThree =
  "RocketSans, Helvetica, 'Helvetica Neue', Arial, sans-serif"; // The font-family, including fallbacks of TypeBodyThree.
export const FontFamilyBodyFour =
  "RocketSans, Helvetica, 'Helvetica Neue', Arial, sans-serif"; // The font-family, including fallbacks of TypeBodyFour.
export const FontSizeDisplayOne = '2.75rem'; // The size of TypeDisplayOne when the viewport is narrower than $sprk-font-size-display-one-breakpoint.
export const FontSizeDisplayOneWide = '3.375rem'; // The size of TypeDisplayOne when the viewport is wider than $sprk-font-size-display-one-breakpoint.
export const FontSizeDisplayTwo = '2rem'; // The size of TypeDisplayTwo when the viewport is narrower than $sprk-font-size-display-two-breakpoint.
export const FontSizeDisplayTwoWide = '2.5rem'; // The size of TypeDisplayTwo when the viewport is wider than $sprk-font-size-display-two-breakpoint.
export const FontSizeDisplayThree = '1.75rem'; // The size of TypeDisplayThree when the viewport is narrower than $sprk-font-size-display-three-breakpoint.
export const FontSizeDisplayThreeWide = '2.125rem'; // The size of TypeDisplayThree when the viewport is wider than $sprk-font-size-display-three-breakpoint.
export const FontSizeDisplayFour = '1.625rem'; // The size of TypeDisplayFour.
export const FontSizeDisplayFive = '1.25rem'; // The size of TypeDisplayFive.
export const FontSizeDisplaySix = '1.25rem'; // The size of TypeDisplaySix.
export const FontSizeDisplaySeven = '1rem'; // The size of TypeDisplaySeven.
export const FontSizeBodyOne = '1rem'; // The size of TypeBodyOne.
export const FontSizeBodyTwo = '1rem'; // The size of TypeBodyTwo.
export const FontSizeBodyThree = '1rem'; // The font size of TypeBodyThree.
export const FontSizeBodyFour = '0.8125rem'; // The font size of TypeBodyFour.
export const FontWeightDisplayOne = 'bold'; // The weight of the TypeDisplayOne font.
export const FontWeightDisplayTwo = 'bold'; // The weight of the TypeDisplayTwo font.
export const FontWeightDisplayThree = '300'; // The weight of the TypeDisplayThree font.
export const FontWeightDisplayFour = 'bold'; // The weight of the TypeDisplayFour font.
export const FontWeightDisplayFive = '500'; // The weight of the TypeDisplayFive font.
export const FontWeightDisplaySix = '300'; // The weight of the TypeDisplaySix font.
export const FontWeightDisplaySeven = '500'; // The weight of the TypeDisplaySeven font.
export const FontWeightBodyOne = '500'; // The weight of the TypeBodyOne font.
export const FontWeightBodyTwo = '300'; // The weight of the TypeBodyTwo font.
export const FontWeightBodyThree = '300'; // The weight of the TypeBodyThree font.
export const FontWeightBodyFour = '300'; // The weight of the TypeBodyFour font.
export const FontDisplay = 'swap'; // The supplied value will be set on all generated Font-face calls, as font-display. The default is 'swap.'
export const ColorDisplayOne = '#1c1b1a'; // The color of TypeDisplayOne.
export const ColorDisplayTwo = '#1c1b1a'; // The color of TypeDisplayTwo.
export const ColorDisplayThree = '#1c1b1a'; // The color of TypeDisplayThree.
export const ColorDisplayFour = '#1c1b1a'; // The color of TypeDisplayFour.
export const ColorDisplayFive = '#1c1b1a'; // The color of TypeDisplayFive.
export const ColorDisplaySix = '#1c1b1a'; // The color of TypeDisplaySix.
export const ColorDisplaySeven = '#1c1b1a'; // The color of TypeDisplaySeven.
export const ColorBodyOne = '#1c1b1a'; // The color of TypeBodyOne.
export const ColorBodyTwo = '#1c1b1a'; // The color of TypeBodyTwo.
export const ColorBodyThree = '#1c1b1a'; // The color of TypeBodyThree.
export const ColorBodyFour = '#1c1b1a'; // The color of TypeBodyFour.
export const LineHeightDisplayOne = '1.27rem'; // The line-height of the TypeDisplayOne font when the viewport is narrower than $sprk-font-size-display-one-breakpoint.
export const LineHeightDisplayOneWide = '1.03'; // The line-height of the TypeDisplayOne font when the viewport is wider than $sprk-font-size-display-one-breakpoint.
export const LineHeightDisplayTwo = '1rem'; // The line-height of the TypeDisplayTwo font when the viewport is narrower than $sprk-font-size-display-two-breakpoint.
export const LineHeightDisplayTwoWide = '1rem'; // The line-height of the TypeDisplayTwo font when the viewport is wider than $sprk-font-size-display-two-breakpoint.
export const LineHeightDisplayThree = '1.6rem'; // The line-height of the TypeDisplayThree font when the viewport is narrower than $sprk-font-size-display-three-breakpoint.
export const LineHeightDisplayThreeWide = '1.32rem'; // The line-height of the TypeDisplayThree font when the viewport is wider than $sprk-font-size-display-three-breakpoint.
export const LineHeightDisplayFour = '1.23rem'; // The line-height of the TypeDisplayFour.
export const LineHeightDisplayFive = '1.2rem'; // The line-height of the TypeDisplayFive.
export const LineHeightDisplaySix = '1.2'; // The line-height of the TypeDisplaySix.
export const LineHeightDisplaySeven = '1'; // The line-height of the TypeDisplaySeven.
export const LineHeightBodyOne = '1.6rem'; // The line-height of the TypeBodyOne.
export const LineHeightBodyTwo = '1.6rem'; // The line-height of the TypeBodyTwo.
export const LineHeightBodyThree = '2rem'; // The line-height of the TypeBodyThree.
export const LineHeightBodyFour = '1.84rem'; // The line-height of the TypeBodyFour.
export const LineHeightCollisionTopCrop = '5rem'; // The top crop value for line height collision correction.
export const LineHeightCollisionBottomCrop = '5rem'; // The bottom crop value for line height collision correction.
export const TypeDisplayOneBreakpoint = '43.75rem'; // The width of the viewport at which to switch the font size from $sprk-font-size-display-one to $sprk-font-size-display-one-wide.
export const TypeDisplayTwoBreakpoint = '43.75rem'; // The width of the viewport at which to switch the font size from $sprk-font-size-display-two to $sprk-font-size-display-two-wide.
export const TypeDisplayThreeBreakpoint = '43.75rem'; // The width of the viewport at which to switch the font size from $sprk-font-size-display-three to $sprk-font-size-display-three-wide.
export const VerticalListDelimiter = "',\\00A0'"; // The delimiter between delimited items in Vertical List components.
